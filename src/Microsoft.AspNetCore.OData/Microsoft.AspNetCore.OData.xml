<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNetCore.OData</name>
    </assembly>
    <members>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ContainerBuilderExtensions.AddDefaultWebApiServices(Microsoft.OData.IContainerBuilder)">
            <summary>
            Injects the default Web API OData services.
            </summary>
            <param name="builder">The container builder.</param>
            <returns>The calling itself.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.DefaultContainerBuilder">
            <summary>
            The default container builder implementation based on the Microsoft dependency injection framework.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.DefaultContainerBuilder.AddService(Microsoft.OData.ServiceLifetime,System.Type,System.Type)">
            <summary>
            Adds a service of <paramref name="serviceType"/> with an <paramref name="implementationType"/>.
            </summary>
            <param name="lifetime">The lifetime of the service to register.</param>
            <param name="serviceType">The type of the service to register.</param>
            <param name="implementationType">The implementation type of the service.</param>
            <returns>The <see cref="T:Microsoft.OData.IContainerBuilder"/> instance itself.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.DefaultContainerBuilder.AddService(Microsoft.OData.ServiceLifetime,System.Type,System.Func{System.IServiceProvider,System.Object})">
            <summary>
            Adds a service of <paramref name="serviceType"/> with an <paramref name="implementationFactory"/>.
            </summary>
            <param name="lifetime">The lifetime of the service to register.</param>
            <param name="serviceType">The type of the service to register.</param>
            <param name="implementationFactory">The factory that creates the service.</param>
            <returns>The <see cref="T:Microsoft.OData.IContainerBuilder"/> instance itself.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.DefaultContainerBuilder.BuildContainer">
            <summary>
            Builds a container which implements <see cref="T:System.IServiceProvider"/> and contains
            all the services registered.
            </summary>
            <returns>The container built by this builder.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.ETagActionFilterAttribute">
            <summary>
            Defines a <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute"/> to add an ETag header value to an OData response when the response
            is a single resource that has an ETag defined.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ETagActionFilterAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.HttpRequestScope">
            <summary>
            Provides access to the <see cref="P:Microsoft.AspNetCore.OData.Abstracts.HttpRequestScope.HttpRequest"/>
            to which the OData service container instance is scoped.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.HttpRequestScope.HttpRequest">
            <summary>
            Provides access to the <see cref="P:Microsoft.AspNetCore.OData.Abstracts.HttpRequestScope.HttpRequest"/>
            to which the OData service container instance is scoped.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.IETagHandler">
            <summary>
            Exposes the ability to convert a collection of concurrency property names and values into an <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/>
            and parse an <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> into a list of concurrency property values.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.IETagHandler.CreateETag(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeZoneInfo)">
            <summary>
            Creates an ETag from concurrency property names and values.
            </summary>
            <param name="properties">The input property names and values.</param>
            <param name="timeZoneInfo">The timezone info.</param>
            <returns>The generated ETag string.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.IETagHandler.ParseETag(Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Parses an ETag header value into concurrency property names and values.
            </summary>
            <param name="etagHeaderValue">The ETag header value.</param>
            <returns>Concurrency property names and values.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.IODataBatchFeature">
            <summary>
            Provide the interface for the details of a given OData batch request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataBatchFeature.BatchId">
            <summary>
            Gets or sets the batch id.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataBatchFeature.ChangeSetId">
            <summary>
            Gets or sets the change set id.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataBatchFeature.ContentId">
            <summary>
            Gets or sets the content id.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataBatchFeature.ContentIdMapping">
            <summary>
            Gets or sets the content id mapping.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.IODataFeature">
            <summary>
            Provide the interface for the details of a given OData request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.Model">
            <summary>
            Gets or sets the OData model.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.Path">
            <summary>
            Gets or sets the OData path.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.RoutePrefix">
            <summary>
            Gets/sets the route prefix name
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.Endpoint">
            <summary>
            Gets/sets the endpoint selected
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.BaseAddress">
            <summary>
            Gets or sets the OData base address.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.RequestScope">
            <summary>
            Gets or sets the request scope.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.Services">
            <summary>
            Gets or sets the request container.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.BatchRouteData">
            <summary>
            Gets or sets the batch route data.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.TotalCount">
            <summary>
            Gets or sets the total count for the OData response.
            </summary>
            <value><c>null</c> if no count should be sent back to the client.</value>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.TotalCountFunc">
            <summary>
            Gets or sets the total count function for the OData response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.ApplyClause">
            <summary>
            Gets or sets the parsed OData <see cref="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.ApplyClause"/> of the request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.SelectExpandClause">
            <summary>
            Gets or sets the parsed OData <see cref="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.SelectExpandClause"/> of the request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.NextLink">
            <summary>
            Gets or sets the next link for the OData response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.DeltaLink">
            <summary>
            Gets or sets the delta link for the OData response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.IODataFeature.RoutingConventionsStore">
            <summary>
            Gets the data store used by routing conventions to store any custom route data.
            </summary>
            <value>Initially an empty <c>IDictionary&lt;string, object&gt;</c>.</value>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.ODataBatchFeature">
            <summary>
            Provide the interface for the details of a given OData batch request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataBatchFeature.BatchId">
            <summary>
            Gets or sets the batch id.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataBatchFeature.ChangeSetId">
            <summary>
            Gets or sets the change set id.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataBatchFeature.ContentId">
            <summary>
            Gets or sets the content id.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataBatchFeature.ContentIdMapping">
            <summary>
            Gets or sets the content id mapping.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.ODataFeature">
            <summary>
            Contains the details of a given OData request. These properties should all be mutable.
            None of these properties should ever be set to null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.#ctor">
            <summary>
            Instantiates a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.ODataFeature"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.Model">
            <summary>
            Gets or sets the OData path.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.Path">
            <summary>
            Gets or sets the OData path.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.Endpoint">
            <summary>
            Add a boolean value indicate whether it's endpoint routing or not.
            Maybe it's unnecessary later.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.RoutePrefix">
            <summary>
            Gets or sets the route prefix name.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.BaseAddress">
            <summary>
            Gets or sets the OData base address.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.RequestScope">
            <summary>
            Gets or sets the request scope.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.Services">
            <summary>
            Gets or sets the request container.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.BatchRouteData">
            <summary>
            Gets or sets the batch route data.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.TotalCount">
            <summary>
            Gets or sets the total count for the OData response.
            </summary>
            <value><c>null</c> if no count should be sent back to the client.</value>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.TotalCountFunc">
            <summary>
            Gets or sets the total count function for the OData response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.ApplyClause">
            <summary>
            Gets or sets the parsed OData <see cref="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.ApplyClause"/> of the request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.SelectExpandClause">
            <summary>
            Gets or sets the parsed OData <see cref="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.SelectExpandClause"/> of the request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.NextLink">
            <summary>
            Gets or sets the next link for the OData response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.DeltaLink">
            <summary>
            Gets or sets the delta link for the OData response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.QueryOptions">
            <summary>
            Gets or sets the parsed <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryOptions"/> of the request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.PageSize">
            <summary>
            Page size to be used by skiptoken implementation for the top-level resource for the request. 
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.BodyValues">
            <summary>
            Gets the body values from OData request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.RoutingConventionsStore">
            <summary>
            Gets the data store used routing conventions to store any custom route data.
            </summary>
            <value>Initially an empty <c>IDictionary&lt;string, object&gt;</c>.</value>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Abstracts.NonValidatingParameterBindingAttribute">
            <summary>
            An attribute to disable model validation for a particular type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Abstracts.NonValidatingParameterBindingAttribute.ShouldValidateEntry(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Abstracts.NonValidatingParameterBindingAttribute.BindingSource">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Batch.ChangeSetRequestItem">
            <summary>
            Represents a ChangeSet request.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ChangeSetRequestItem.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Http.HttpContext})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Batch.ChangeSetRequestItem"/> class.
            </summary>
            <param name="contexts">The request contexts in the ChangeSet.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Batch.ChangeSetRequestItem.Contexts">
            <summary>
            Gets the request contexts in the ChangeSet.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ChangeSetRequestItem.SendRequestAsync(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Sends the ChangeSet request to the request delegate.
            </summary>
            <param name="handler">The handler for processing a message.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.OData.Batch.ChangeSetResponseItem"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Batch.ChangeSetResponseItem">
            <summary>
            Represents a ChangeSet response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ChangeSetResponseItem.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Http.HttpContext})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Batch.ChangeSetResponseItem"/> class.
            </summary>
            <param name="contexts">The response contexts for the ChangeSet requests.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Batch.ChangeSetResponseItem.Contexts">
            <summary>
            Gets the response contexts for the ChangeSet.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ChangeSetResponseItem.WriteResponseAsync(Microsoft.OData.ODataBatchWriter)">
            <summary>
            Writes the responses as a ChangeSet.
            </summary>
            <param name="writer">The <see cref="T:Microsoft.OData.ODataBatchWriter"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ChangeSetResponseItem.IsResponseSuccessful">
            <summary>
            Gets a value that indicates if the responses in this item are successful.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Batch.DefaultODataBatchHandler">
            <summary>
            Default implementation of <see cref="T:Microsoft.AspNetCore.OData.Batch.ODataBatchHandler"/> for handling OData batch request.
            By default, it buffers the request content stream.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.DefaultODataBatchHandler.ProcessBatchAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Http.RequestDelegate)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.DefaultODataBatchHandler.ExecuteRequestMessagesAsync(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.OData.Batch.ODataBatchRequestItem},Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Executes the OData batch requests.
            </summary>
            <param name="requests">The collection of OData batch requests.</param>
            <param name="handler">The handler for processing a message.</param>
            <returns>A collection of <see cref="T:Microsoft.AspNetCore.OData.Batch.ODataBatchResponseItem"/> for the batch requests.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.DefaultODataBatchHandler.ParseBatchRequestsAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Converts the incoming OData batch request into a collection of request messages.
            </summary>
            <param name="context">The context containing the batch request messages.</param>
            <returns>A collection of <see cref="T:Microsoft.AspNetCore.OData.Batch.ODataBatchRequestItem"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Batch.HttpRequestExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.HttpRequestExtensions.GetODataMessageReader(Microsoft.AspNetCore.Http.HttpRequest,System.IServiceProvider)">
            <summary>
            Gets the <see cref="T:Microsoft.OData.ODataMessageReader"/> for the <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> stream.
            </summary>
            <param name="request">The request.</param>
            <param name="requestContainer">The dependency injection container for the request.</param>
            <returns>A task object that produces an <see cref="T:Microsoft.OData.ODataMessageReader"/> when completed.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.HttpRequestExtensions.CopyAbsoluteUrl(Microsoft.AspNetCore.Http.HttpRequest,System.Uri)">
            <summary>
            Copy an absolute Uri to a <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> stream.
            </summary>
            <param name="request">The request.</param>
            <param name="uri">The absolute uri to copy.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Batch.ODataBatchContent">
            <summary>
            Encapsulates a collection of OData batch responses.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchContent.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.OData.Batch.ODataBatchResponseItem},System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Batch.ODataBatchContent"/> class.
            </summary>
            <param name="responses">The batch responses.</param>
            <param name="requestContainer">The dependency injection container for the request.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchContent.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.OData.Batch.ODataBatchResponseItem},System.IServiceProvider,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Batch.ODataBatchContent"/> class.
            </summary>
            <param name="responses">The batch responses.</param>
            <param name="requestContainer">The dependency injection container for the request.</param>
            <param name="contentType">The response content type.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Batch.ODataBatchContent.Responses">
            <summary>
            Gets the batch responses.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Batch.ODataBatchContent.Headers">
            <summary>
            Gets the Headers for the batch content.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchContent.SerializeToStreamAsync(System.IO.Stream)">
            <summary>
            Serialize the batch content to a stream.
            </summary>
            <param name="stream">The stream to serialize to.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that can be awaited.</returns>
            <remarks>This function uses types that are AspNetCore-specific.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchContent.WriteToResponseMessageAsync(Microsoft.OData.IODataResponseMessage)">
            <summary>
             Serialize the batch responses to an <see cref="T:Microsoft.OData.IODataResponseMessage"/>.
            </summary>
            <param name="responseMessage">The response message.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Batch.ODataBatchHandler">
            <summary>
            Defines the abstraction for handling OData batch requests.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Batch.ODataBatchHandler.MessageQuotas">
            <summary>
            Gets the <see cref="T:Microsoft.OData.ODataMessageQuotas"/> used for reading/writing the batch request/response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Batch.ODataBatchHandler.PrefixName">
            <summary>
            Gets or sets the OData route associated with this batch handler.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchHandler.ProcessBatchAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Abstract method for processing a batch request.
            </summary>
            <param name="context">The http content.</param>
            ><param name="nextHandler">The next handler in the middleware chain.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchHandler.CreateResponseMessageAsync(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.OData.Batch.ODataBatchResponseItem},Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Creates the batch response message.
            </summary>
            <param name="responses">The responses for the batch requests.</param>
            <param name="request">The original request containing all the batch requests.</param>
            <returns>The batch response message.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchHandler.ValidateRequest(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Validates the incoming request that contains the batch request messages.
            </summary>
            <param name="request">The request containing the batch request messages.</param>
            <returns>true if the request is valid, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchHandler.GetBaseUri(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets the base URI for the batched requests.
            </summary>
            <param name="request">The original request containing all the batch requests.</param>
            <returns>The base URI.</returns>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Batch.ODataBatchHandler.ContinueOnError">
            <summary>
            Gets or sets if the continue-on-error header is enable or not.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchHandler.SetContinueOnError(Microsoft.AspNetCore.Http.IHeaderDictionary,System.Boolean)">
            <summary>
            Set ContinueOnError based on the request and headers.
            </summary>
            <param name="header">The request header.</param>
            <param name="enableContinueOnErrorHeader">Flag indicating if continue on error header is enabled.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Batch.ODataBatchHttpRequestExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchHttpRequestExtensions.IsODataBatchRequest(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Determine if the request is a batch request.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchHttpRequestExtensions.GetODataBatchId(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Retrieves the Batch ID associated with the request.
            </summary>
            <param name="request">The Http request.</param>
            <returns>The Batch ID associated with this request, or <c>null</c> if there isn't one.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchHttpRequestExtensions.SetODataBatchId(Microsoft.AspNetCore.Http.HttpRequest,System.Guid)">
            <summary>
            Associates a given Batch ID with the request.
            </summary>
            <param name="request">The request.</param>
            <param name="batchId">The Batch ID.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchHttpRequestExtensions.GetODataChangeSetId(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Retrieves the ChangeSet ID associated with the request.
            </summary>
            <param name="request">The request.</param>
            <returns>The ChangeSet ID associated with this request, or <c>null</c> if there isn't one.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchHttpRequestExtensions.SetODataChangeSetId(Microsoft.AspNetCore.Http.HttpRequest,System.Guid)">
            <summary>
            Associates a given ChangeSet ID with the request.
            </summary>
            <param name="request">The request.</param>
            <param name="changeSetId">The ChangeSet ID.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchHttpRequestExtensions.GetODataContentId(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Retrieves the Content-ID associated with the sub-request of a batch.
            </summary>
            <param name="request">The request.</param>
            <returns>The Content-ID associated with this request, or <c>null</c> if there isn't one.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchHttpRequestExtensions.SetODataContentId(Microsoft.AspNetCore.Http.HttpRequest,System.String)">
            <summary>
            Associates a given Content-ID with the sub-request of a batch.
            </summary>
            <param name="request">The request.</param>
            <param name="contentId">The Content-ID.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchHttpRequestExtensions.GetODataContentIdMapping(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Retrieves the Content-ID to Location mapping associated with the request.
            </summary>
            <param name="request">The request.</param>
            <returns>The Content-ID to Location mapping associated with this request, or <c>null</c> if there isn't one.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchHttpRequestExtensions.SetODataContentIdMapping(Microsoft.AspNetCore.Http.HttpRequest,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Associates a given Content-ID to Location mapping with the request.
            </summary>
            <param name="request">The request.</param>
            <param name="contentIdMapping">The Content-ID to Location mapping.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Batch.ODataBatchMiddleware">
            <summary>
            Defines the middleware for handling OData $batch requests.
            This middleware essentially acts like branching middleware and redirects OData $batch
            requests to the appropriate ODataBatchHandler.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchMiddleware.#ctor(System.IServiceProvider,Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Instantiates a new instance of <see cref="T:Microsoft.AspNetCore.OData.Batch.ODataBatchMiddleware"/>.
            </summary>
            <param name="serviceProvider">The service provider, we don't inject the ODataOptions.</param>
            <param name="next">The next middleware.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Batch.ODataBatchMiddleware.BatchMapping">
            <summary>
            Gets the batch path mapping, for unit test only
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invoke the OData $Batch middleware.
            </summary>
            <param name="context">The http context.</param>
            <returns>A task that can be awaited.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Batch.ODataBatchPathMapping">
            <summary>
            A class for storing batch route names and prefixes used to determine if a route is a
            batch route.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchPathMapping.AddRoute(System.String,System.String,Microsoft.AspNetCore.OData.Batch.ODataBatchHandler)">
            <summary>
            Add a route name and template for batching.
            </summary>
            <param name="prefixName">The route prefix name.</param>
            <param name="routeTemplate">The route template.</param>
            <param name="handler">The batch handler.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchPathMapping.TryGetPrefixName(Microsoft.AspNetCore.Http.HttpContext,System.String@,Microsoft.AspNetCore.OData.Batch.ODataBatchHandler@)">
            <summary>
            Try and get the batch handler for a given path.
            </summary>
            <param name="context">The http context.</param>
            <param name="prefixName">The route/prefix name if found or null.</param>
            <param name="handler">The batch handler.</param>
            <returns>true if a route name is found, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Batch.ODataBatchReaderExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.OData.ODataBatchReader"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchReaderExtensions.ReadChangeSetRequestAsync(Microsoft.OData.ODataBatchReader,Microsoft.AspNetCore.Http.HttpContext,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Reads a ChangeSet request.
            </summary>
            <param name="reader">The <see cref="T:Microsoft.OData.ODataBatchReader"/>.</param>
            <param name="context">The context containing the batch request messages.</param>
            <param name="batchId">The Batch Id.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A collection of <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> in the ChangeSet.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchReaderExtensions.ReadOperationRequestAsync(Microsoft.OData.ODataBatchReader,Microsoft.AspNetCore.Http.HttpContext,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Reads an Operation request.
            </summary>
            <param name="reader">The <see cref="T:Microsoft.OData.ODataBatchReader"/>.</param>
            <param name="context">The context containing the batch request messages.</param>
            <param name="batchId">The Batch ID.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> representing the operation.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchReaderExtensions.ReadChangeSetOperationRequestAsync(Microsoft.OData.ODataBatchReader,Microsoft.AspNetCore.Http.HttpContext,System.Guid,System.Guid,System.Threading.CancellationToken)">
            <summary>
            Reads an Operation request in a ChangeSet.
            </summary>
            <param name="reader">The <see cref="T:Microsoft.OData.ODataBatchReader"/>.</param>
            <param name="context">The context containing the batch request messages.</param>
            <param name="batchId">The Batch ID.</param>
            <param name="changeSetId">The ChangeSet ID.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> representing a ChangeSet operation</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchReaderExtensions.GetPreferencesToInheritFromBatch(System.String)">
            <summary>
            Extract preferences that can be inherited from the overall batch request to
            an individual request.
            </summary>
            <param name="batchPreferences">The value of the Prefer header from the batch request</param>
            <returns>comma-separated preferences that can be passed down to an individual request</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchReaderExtensions.MergeIndividualAndBatchPreferences(System.String,System.String)">
            <summary>
            Merges the preferences from the batch request and an individual request inside the batch into one value.
            If a given preference is defined in both the batch and individual request, the one from the individual
            request is retained and the one from the batch is discarded.
            </summary>
            <param name="individualPreferences">The value of the Prefer header from the individual request inside the batch</param>
            <param name="batchPreferences">The value of the Prefer header from the overall batch request</param>
            <returns>Value containing the combined preferences</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchReaderExtensions.SplitPreferences(System.String)">
            <summary>
            Splits the value of a Prefer header into separate preferences
            e.g. a value like 'a, b=c, foo="bar,baz"' will return an IEnumerable with
            - a
            - b=c
            - foo="bar,baz"
            </summary>
            <param name="preferences"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Batch.ODataBatchRequestItem">
            <summary>
            Represents an OData batch request.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchRequestItem.SendRequestAsync(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Routes a single OData batch request.
            </summary>
            <param name="handler">The handler for processing a message.</param>
            <param name="context">The http context.</param>
            <param name="contentIdToLocationMapping">The Content-ID to Location mapping.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchRequestItem.SendRequestAsync(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Routes the request.
            </summary>
            <param name="handler">The handler for processing a message.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.OData.Batch.ODataBatchResponseItem"/>.</returns>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Batch.ODataBatchRequestItem.ContentIdToLocationMapping">
            <summary>
            Default dictionary that ODataBatchRequestItems should use when mapping ID references to URLs
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Batch.ODataBatchResponseItem">
            <summary>
            Represents an OData batch response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchResponseItem.WriteMessageAsync(Microsoft.OData.ODataBatchWriter,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Writes a single OData batch response.
            </summary>
            <param name="writer">The <see cref="T:Microsoft.OData.ODataBatchWriter"/>.</param>
            <param name="context">The message context.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchResponseItem.WriteResponseAsync(Microsoft.OData.ODataBatchWriter)">
            <summary>
            Writes the response.
            </summary>
            <param name="writer">The <see cref="T:Microsoft.OData.ODataBatchWriter"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchResponseItem.IsResponseSuccessful">
            <summary>
            Gets a value that indicates if the responses in this item are successful.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchStream.InternalDispose">
            <summary>
            Dispose the batch stream and underlying resources
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchStream.InternalDisposeAsync">
            <summary>
            Dispose the batch stream and underlying resources
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.ODataBatchStream.Close">
            <summary>
            Override Close() in order to hold the stream open until we are able to
            copy it to the batch response stream.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Batch.OperationRequestItem">
            <summary>
            Represents an Operation request.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.OperationRequestItem.#ctor(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Batch.OperationRequestItem"/> class.
            </summary>
            <param name="context">The Operation http context.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Batch.OperationRequestItem.Context">
            <summary>
            Gets the Operation request context.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.OperationRequestItem.SendRequestAsync(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Sends the Operation request.
            </summary>
            <param name="handler">The handler for processing a Http request.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.OData.Batch.OperationResponseItem"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Batch.OperationResponseItem">
            <summary>
            Represents an Operation response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.OperationResponseItem.#ctor(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Batch.OperationResponseItem"/> class.
            </summary>
            <param name="context">The response context for the Operation request.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Batch.OperationResponseItem.Context">
            <summary>
            Gets the response messages for the Operation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.OperationResponseItem.WriteResponseAsync(Microsoft.OData.ODataBatchWriter)">
            <summary>
            Writes the response as an Operation.
            </summary>
            <param name="writer">The <see cref="T:Microsoft.OData.ODataBatchWriter"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.OperationResponseItem.IsResponseSuccessful">
            <summary>
            Gets a value that indicates if the responses in this item are successful.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Batch.UnbufferedODataBatchHandler">
            <summary>
            An implementation of <see cref="T:Microsoft.AspNetCore.OData.Batch.ODataBatchHandler"/> that doesn't buffer the request content stream.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.UnbufferedODataBatchHandler.ProcessBatchAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Http.RequestDelegate)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.UnbufferedODataBatchHandler.ExecuteOperationAsync(Microsoft.OData.ODataBatchReader,System.Guid,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Executes the operation.
            </summary>
            <param name="batchReader">The batch reader.</param>
            <param name="batchId">The batch id.</param>
            <param name="originalRequest">The original request containing all the batch requests.</param>
            <param name="handler">The handler for processing a message.</param>
            <returns>The response for the operation.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Batch.UnbufferedODataBatchHandler.ExecuteChangeSetAsync(Microsoft.OData.ODataBatchReader,System.Guid,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Executes the ChangeSet.
            </summary>
            <param name="batchReader">The batch reader.</param>
            <param name="batchId">The batch id.</param>
            <param name="originalRequest">The original request containing all the batch requests.</param>
            <param name="handler">The handler for processing a message.</param>
            <returns>The response for the ChangeSet.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Common.CollectionExtensions">
            <summary>
            Helper extension methods for fast use of collections.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Common.ExpressionTokenKind">
            <summary>
            Enumeration values for token kinds.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Common.ExpressionTokenKind.Unknown">
            <summary>Unknown.</summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Common.ExpressionTokenKind.TextEnd">
            <summary>End of text.</summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Common.ExpressionTokenKind.Literal">
            <summary>Literal, could be an identifier, a number, null, guid, etc.</summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Common.ExpressionTokenKind.Comma">
            <summary>Comma ','</summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Common.ExpressionTokenKind.Equal">
            <summary>Equal '='</summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Common.ExpressionToken">
            <summary>
            Use this struct to represent a lexical expression token.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Common.ExpressionToken.Kind">
            <summary>InternalKind of token.</summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Common.ExpressionToken.Text">
            <summary>Token text.</summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Common.ExpressionToken.Position">
            <summary>Position of token.</summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Common.ExpressionLexer">
            <summary>
            Components to parse an expression into token.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Common.ExpressionLexer._rawText">
            <summary>The raw input text being parsed.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Common.ExpressionLexer._length">
            <summary>Length of raw input text being parsed.</summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Common.ExpressionLexer._char">
            <summary>Character being processed.</summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Common.ExpressionLexer._token">
            <summary>Token being processed.</summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Common.ExpressionLexer._textPos">
            <summary>Position on text being parsed.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.ExpressionLexer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Common.ExpressionLexer" /> class.
            </summary>
            <param name="expression">The expression to lexer.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Common.ExpressionLexer.CurrentToken">
            <summary>Token being processed. </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.ExpressionLexer.NextToken">
            <summary>
            Reads the next token, skipping whitespace as necessary, advancing the Lexer.
            </summary>
            <returns>The parsed token.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.ExpressionLexer.ValidateToken(Microsoft.AspNetCore.OData.Common.ExpressionTokenKind)">
            <summary>Validates the current token is of the specified kind.</summary>
            <param name="kind">Expected token kind.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Common.ExpressionLexer.IsValidWhiteSpace">
            <summary>
            Gets if the current char is whitespace.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.ExpressionLexer.ReadNextToken(System.Exception@)">
            <summary>
            Reads the next token, skipping whitespace as necessary.
            </summary>
            <param name="error">The potential error.</param>
            <returns>The next token, which may be 'bad' if an error occurs.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.ExpressionLexer.AdvanceToNextOccurenceOf(System.Char)">
            <summary>
            Advance the pointer to the next occurrence of the given value, swallowing all characters in between.
            </summary>
            <param name="endingValue">the ending delimiter.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.ExpressionLexer.AdvanceThroughBalancedExpression(System.Char,System.Char)">
            <summary>
            Parses an expression of text that we do not know how to handle in this class, which is between a
            <paramref name="startingCharacter"></paramref> and an <paramref name="endingCharacter"/>.
            </summary>
            <param name="startingCharacter">the starting delimiter</param>
            <param name="endingCharacter">the ending delimiter.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.ExpressionLexer.ParseLiteral">
            <summary>
            Parses a literal be checking for delimiting characters '\0', ',',')' and ' '
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.ExpressionLexer.NextChar">
            <summary>
            Advanced to the next character.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.ExpressionLexer.SetTextPos(System.Int32)">
            <summary>
            Sets the text position.
            </summary>
            <param name="pos">The new position.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.ExpressionLexer.ParseWhitespace">
            <summary>
            Parses (skip) white spaces
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Common.FastPropertyAccessor`1">
            <summary>
            FastPropertyAccessor is a <see cref="T:Microsoft.AspNetCore.OData.Common.PropertyAccessor`1"/> that speeds up (compares to reflection)
            a Getter and Setter for the PropertyInfo of TEntityType provided via the constructor.
            </summary>
            <typeparam name="TStructuralType">The type on which the PropertyInfo exists</typeparam>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Common.KeyValuePairParser">
            <summary>
            Parsing function parameters and entity key in paths.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.KeyValuePairParser.Parse(System.String)">
            <summary>
            Parse the expression string into key/value pairs
            </summary>
            <param name="expression">The contents of the key/value pairs.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.KeyValuePairParser.TryParse(System.String,System.Collections.Generic.IDictionary{System.String,System.String}@)">
            <summary>
            Tries to parse the expression string into key/value pairs
            </summary>
            <param name="expression">The contents of the key/value pairs.</param>
            <param name="pairs">the output key/value pair</param>
            <returns>true/false</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Common.ListWrapperCollection`1">
            <summary>
            A class that inherits from Collection of T but also exposes its underlying data as List of T for performance.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Common.ODataVersionConstraint">
            <summary>
            OData Version constants.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Common.PropertyAccessor`1">
            <summary>
            Represents a strategy for Getting and Setting a PropertyInfo on <typeparamref name="TStructuralType"/>
            </summary>
            <typeparam name="TStructuralType">The type that contains the PropertyInfo</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.PropertyHelper.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a fast property helper. This constructor does not cache the helper.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.PropertyHelper.MakeFastPropertySetter``1(System.Reflection.PropertyInfo)">
            <summary>
            Creates a single fast property setter. The result is not cached.
            </summary>
            <param name="propertyInfo">propertyInfo to extract the getter for.</param>
            <returns>a fast setter.</returns>
            <remarks>This method is more memory efficient than a dynamically compiled lambda, and about the same speed.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.PropertyHelper.GetProperties(System.Object)">
            <summary>
            Creates and caches fast property helpers that expose getters for every public get property on the underlying type.
            </summary>
            <param name="instance">the instance to extract property accessors for.</param>
            <returns>a cached array of all public property getters from the underlying type of this instance.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.PropertyHelper.MakeFastPropertyGetter(System.Reflection.PropertyInfo)">
            <summary>
            Creates a single fast property getter. The result is not cached.
            </summary>
            <param name="propertyInfo">propertyInfo to extract the getter for.</param>
            <returns>a fast getter.</returns>
            <remarks>This method is more memory efficient than a dynamically compiled lambda, and about the same speed.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.StringExtensions.NormalizeHttpMethod(System.String)">
            <summary>
            Normalize the http method.
            </summary>
            <param name="method">The http method.</param>
            <returns>Normalized http method.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.StringExtensions.IsValidTemplateLiteral(System.String)">
            <summary>
            Check whether given literal matches the uri template pattern {literals}.
            </summary>
            <param name="literalText">The text to be evaluated</param>
            <returns>True if <paramref name="literalText"/> is valid for Uri template</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Common.TypeHelper">
            <summary>
            The type related helper methods.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.TypeHelper.IsDynamicTypeWrapper(System.Type)">
            <summary>
            Test whether the input type is <see cref="T:Microsoft.AspNetCore.OData.Query.Wrapper.DynamicTypeWrapper"/>
            </summary>
            <param name="type">The test type.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.TypeHelper.GetInnerElementType(System.Type)">
            <summary>
            Return the collection element type.
            </summary>
            <param name="clrType">The type to convert.</param>
            <returns>The collection element type from a type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.TypeHelper.GetUnderlyingTypeOrSelf(System.Type)">
            <summary>
            Return the underlying type or itself.
            </summary>
            <param name="type">The input type.</param>
            <returns>The underlying type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.TypeHelper.IsDateTime(System.Type)">
            <summary>
            Determine if a type is a DateTime.
            </summary>
            <param name="clrType">The type to test.</param>
            <returns>True if the type is a DateTime; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.TypeHelper.IsDateOnly(System.Type)">
            <summary>
            Determine if a type is a <see cref="T:System.DateOnly"/>.
            </summary>
            <param name="clrType">The type to test.</param>
            <returns>True if the type is a DateOnly; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.TypeHelper.IsTimeOnly(System.Type)">
            <summary>
            Determine if a type is a <see cref="T:System.TimeOnly"/>.
            </summary>
            <param name="clrType">The type to test.</param>
            <returns>True if the type is a TimeOnly; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.TypeHelper.IsTimeSpan(System.Type)">
            <summary>
            Determine if a type is a TimeSpan.
            </summary>
            <param name="clrType">The type to test.</param>
            <returns>True if the type is a TimeSpan; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.TypeHelper.IsTypeAssignableFrom(System.Type,System.Type)">
            <summary>
            Determine if a type is assignable from another type.
            </summary>
            <param name="clrType">The type to test.</param>
            <param name="fromType">The type to assign from.</param>
            <returns>True if the type is assignable; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.TypeHelper.GetReflectedType(System.Reflection.MemberInfo)">
            <summary>
            Return the reflected type from a member info.
            </summary>
            <param name="memberInfo">The member info to convert.</param>
            <returns>The reflected type from a member info.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.TypeHelper.IsEnum(System.Type)">
            <summary>
            Determine if a type is an enumeration.
            </summary>
            <param name="clrType">The type to test.</param>
            <returns>True if the type is an enumeration; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.TypeHelper.IsNullable(System.Type)">
            <summary>
            Determine if a type is null-able.
            </summary>
            <param name="clrType">The type to test.</param>
            <returns>True if the type is null-able; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.TypeHelper.ToNullable(System.Type)">
            <summary>
            Return the type from a nullable type.
            </summary>
            <param name="clrType">The type to convert.</param>
            <returns>The type from a nullable type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.TypeHelper.IsCollection(System.Type)">
            <summary>
            Determine if a type is a collection.
            </summary>
            <param name="clrType">The type to test.</param>
            <returns>True if the type is an enumeration; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.TypeHelper.IsCollection(System.Type,System.Type@)">
            <summary>
            Determine if a type is a collection.
            </summary>
            <param name="clrType">The type to test.</param>
            <param name="elementType">out: the element type of the collection.</param>
            <returns>True if the type is an enumeration; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Common.TypeHelper.GetImplementedIEnumerableType(System.Type)">
            <summary>
            Returns type of T if the type implements IEnumerable of T, otherwise, return null.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Error">
            <summary>
            Utility class for creating and unwrapping <see cref="T:System.Exception"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.Format(System.String,System.Object[])">
            <summary>
            Formats the specified resource string using <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/>.
            </summary>
            <param name="format">A composite format string.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.Argument(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> with the provided properties.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.Argument(System.String,System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> with the provided properties.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.PropertyNull">
            <summary>
            Creates an <see cref="T:System.ArgumentNullException"/> with the provided properties.
            </summary>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.ArgumentNull(System.String)">
            <summary>
            Creates an <see cref="T:System.ArgumentNullException"/> with the provided properties.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.ArgumentNull(System.String,System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.ArgumentNullException"/> with the provided properties.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.ArgumentNullOrEmpty(System.String)">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> with a default message.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.ArgumentOutOfRange(System.String,System.Object,System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.ArgumentOutOfRangeException"/> with the provided properties.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="actualValue">The value of the argument that causes this exception.</param>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.ArgumentMustBeGreaterThanOrEqualTo(System.String,System.Object,System.Object)">
            <summary>
            Creates an <see cref="T:System.ArgumentOutOfRangeException"/> with a message saying that the argument must be greater than or equal to <paramref name="minValue"/>.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="actualValue">The value of the argument that causes this exception.</param>
            <param name="minValue">The minimum size of the argument.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.ArgumentMustBeLessThanOrEqualTo(System.String,System.Object,System.Object)">
            <summary>
            Creates an <see cref="T:System.ArgumentOutOfRangeException"/> with a message saying that the argument must be less than or equal to <paramref name="maxValue"/>.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="actualValue">The value of the argument that causes this exception.</param>
            <param name="maxValue">The maximum size of the argument.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.KeyNotFound">
            <summary>
            Creates an <see cref="T:System.Collections.Generic.KeyNotFoundException"/> with a message saying that the key was not found.
            </summary>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.KeyNotFound(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.Collections.Generic.KeyNotFoundException"/> with a message saying that the key was not found.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.ObjectDisposed(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.ObjectDisposedException"/> initialized according to guidelines.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.OperationCanceled">
            <summary>
            Creates an <see cref="T:System.OperationCanceledException"/> initialized with the provided parameters.
            </summary>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.OperationCanceled(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.OperationCanceledException"/> initialized with the provided parameters.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.InvalidEnumArgument(System.String,System.Int32,System.Type)">
            <summary>
            Creates an <see cref="T:System.ArgumentException"/> for an invalid enum argument.
            </summary>
            <param name="parameterName">The name of the parameter that caused the current exception.</param>
            <param name="invalidValue">The value of the argument that failed.</param>
            <param name="enumClass">A <see cref="T:System.Type"/> that represents the enumeration class with the valid values.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.InvalidOperation(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.InvalidOperationException"/>.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.InvalidOperation(System.Exception,System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.InvalidOperationException"/>.
            </summary>
            <param name="innerException">Inner exception</param>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Error.NotSupported(System.String,System.Object[])">
            <summary>
            Creates an <see cref="T:System.NotSupportedException"/>.
            </summary>
            <param name="messageFormat">A composite format string explaining the reason for the exception.</param>
            <param name="messageArgs">An object array that contains zero or more objects to format.</param>
            <returns>The logged <see cref="T:System.Exception"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Deltas.Delta">
            <summary>
            Base class for the Delta resource
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.Delta.Kind">
            <summary>
            DeltaKind for the objects part of the DeltaResourceSet Payload.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta.Clear">
            <summary>
            Clears the Delta and resets the underlying Entity.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta.TrySetPropertyValue(System.String,System.Object)">
            <summary>
            Attempts to set the Property called <paramref name="name"/> to the <paramref name="value"/> specified.
            <remarks>
            Only properties that exist on Entity can be set.
            If there is a type mismatch the request will fail.
            </remarks>
            </summary>
            <param name="name">The name of the Property</param>
            <param name="value">The new value of the Property</param>
            <returns>True if successful</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta.TryGetPropertyValue(System.String,System.Object@)">
            <summary>
            Attempts to get the value of the Property called <paramref name="name"/> from the underlying Entity.
            <remarks>
            Only properties that exist on Entity can be retrieved.
            Both modified and unmodified properties can be retrieved.
            </remarks>
            </summary>
            <param name="name">The name of the Property</param>
            <param name="value">The value of the Property</param>
            <returns>True if the Property was found</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta.TryGetPropertyType(System.String,System.Type@)">
            <summary>
            Attempts to get the <see cref="T:System.Type"/> of the Property called <paramref name="name"/> from the underlying Entity.
            <remarks>
            Only properties that exist on Entity can be retrieved.
            Both modified and unmodified properties can be retrieved.
            </remarks>
            </summary>
            <param name="name">The name of the Property</param>
            <param name="type">The type of the Property</param>
            <returns>Returns <c>true</c> if the Property was found and <c>false</c> if not.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>
            Overrides the DynamicObject TrySetMember method, so that only the properties
            of Entity can be set.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            Overrides the DynamicObject TryGetMember method, so that only the properties
            of Entity can be got.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta.GetChangedPropertyNames">
            <summary>
            Returns the Properties that have been modified through this Delta as an
            enumeration of Property Names
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta.GetUnchangedPropertyNames">
            <summary>
            Returns the Properties that have not been modified through this Delta as an
            enumeration of Property Names
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Deltas.DeltaDeletedLink`1">
            <summary>
            <see cref="T:Microsoft.AspNetCore.OData.Deltas.DeltaDeletedLink`1" /> allows and tracks changes to delta deleted link.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.DeltaDeletedLink`1.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Deltas.DeltaDeletedLink`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.DeltaDeletedLink`1.#ctor(System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Deltas.DeltaDeletedLink`1"/>.
            </summary>
            <param name="structuralType">The actual structural type.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.DeltaDeletedLink`1.Kind">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Deltas.DeltaDeletedResource`1">
            <summary>
            <see cref="T:Microsoft.AspNetCore.OData.Deltas.DeltaDeletedResource`1" /> allows and tracks changes to a delta deleted resource.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.DeltaDeletedResource`1.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Deltas.DeltaDeletedResource`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.DeltaDeletedResource`1.#ctor(System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Deltas.DeltaDeletedResource`1"/>.
            </summary>
            <param name="structuralType">The derived entity type which the changes would be tracked.
            <paramref name="structuralType"/> should be assignable to instances of <typeparamref name="T"/>.
            </param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.DeltaDeletedResource`1.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Deltas.DeltaDeletedResource`1"/>.
            </summary>
            <param name="structuralType">The derived entity type for which the changes would be tracked.
            <paramref name="structuralType"/> should be assignable to instances of <typeparamref name="T"/>.</param>
            <param name="updatableProperties">The set of properties that can be updated or reset. Unknown property
            names, including those of dynamic properties, are ignored.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.DeltaDeletedResource`1.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.String},System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Deltas.DeltaDeletedResource`1"/>.
            </summary>
            <param name="structuralType">The derived entity type which the changes would be tracked.
            <paramref name="structuralType"/> should be assignable to instances of <typeparamref name="T"/>.</param>
            <param name="updatableProperties">The set of properties that can be updated or reset. Unknown property
            names, including those of dynamic properties, are ignored.</param>
            <param name="dynamicDictionaryPropertyInfo">The property info that is used as dictionary of dynamic
            properties. <c>null</c> means this entity type is not open.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.DeltaDeletedResource`1.Id">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.DeltaDeletedResource`1.Reason">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.DeltaDeletedResource`1.Kind">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Deltas.DeltaHelper">
            <summary>
            The delta helpers.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.DeltaHelper.IsDeltaOfT(System.Type)">
            <summary>
            Helper method to check whether the given type is Delta generic type.
            </summary>
            <param name="type">The type to check.</param>
            <returns>True if it is a Delta generic type; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.DeltaHelper.IsDeltaResourceSet(System.Object)">
            <summary>
            Helper method to check whether the given object is Delta resource set.
            </summary>
            <param name="result">The given object.</param>
            <returns>True/False.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Deltas.DeltaItemKind">
            <summary>
            The Kind of the object within the DeltaPayload used to distinguish between
            Resource/DeletedResource/DeltaDeletedLink/AddedLink.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Deltas.DeltaItemKind.Resource">
            <summary>
            Corresponds to EdmEntityObject (Equivalent of ODataResource in ODL).
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Deltas.DeltaItemKind.DeletedResource">
            <summary>
            Corresponds to EdmDeltaDeletedResourceObject (Equivalent of ODataDeletedResource in ODL).
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Deltas.DeltaItemKind.DeltaDeletedLink">
            <summary>
            Corresponds to EdmDeltaDeletedLink (Equivalent of ODataDeltaDeletedLink in ODL).
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Deltas.DeltaItemKind.DeltaLink">
            <summary>
            Corresponds to EdmDeltaLink (Equivalent of ODataDeltaLink in ODL).
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Deltas.DeltaItemKind.Unknown">
            <summary>
            Corresponds to any Unknown item added.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Deltas.DeltaLinkBase`1">
            <summary>
            Base class for delta link.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.DeltaLinkBase`1.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Deltas.DeltaLinkBase`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.DeltaLinkBase`1.#ctor(System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Deltas.DeltaLinkBase`1"/>.
            </summary>
            <param name="structuralType">The derived structural type for which the changes would be tracked.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.DeltaLinkBase`1.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.DeltaLinkBase`1.StructuredType">
            <summary>
             Gets the actual type of the structural object for which the changes are tracked.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.DeltaLinkBase`1.ExpectedClrType">
            <summary>
            Gets the expected type of the entity for which the changes are tracked.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.DeltaLinkBase`1.Source">
            <summary>
            The Uri of the entity from which the relationship is defined, which may be absolute or relative.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.DeltaLinkBase`1.Target">
            <summary>
            The Uri of the related entity, which may be absolute or relative.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.DeltaLinkBase`1.Relationship">
            <summary>
            The name of the relationship property on the parent object.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Deltas.DeltaLink`1">
            <summary>
            <see cref="T:Microsoft.AspNetCore.OData.Deltas.DeltaLink`1" /> allows and tracks changes to delta added link.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.DeltaLink`1.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Deltas.DeltaLink`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.DeltaLink`1.#ctor(System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Deltas.DeltaLink`1"/>.
            </summary>
            <param name="structuralType">The derived structural type for which the changes would be tracked.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.DeltaLink`1.Kind">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Deltas.Delta`1">
            <summary>
            A class the tracks changes (i.e. the Delta) for a particular <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">T is the type of the instance this delta tracks changes for.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta`1.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Deltas.Delta`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta`1.#ctor(System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Deltas.Delta`1"/>.
            </summary>
            <param name="structuralType">The derived entity type or complex type for which the changes would be tracked.
            <paramref name="structuralType"/> should be assignable to instances of <typeparamref name="T"/>.
            </param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta`1.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Deltas.Delta`1"/>.
            </summary>
            <param name="structuralType">The derived entity type or complex type for which the changes would be tracked.
            <paramref name="structuralType"/> should be assignable to instances of <typeparamref name="T"/>.
            </param>
            <param name="updatableProperties">The set of properties that can be updated or reset. Unknown property
            names, including those of dynamic properties, are ignored.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta`1.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.String},System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Deltas.Delta`1"/>.
            </summary>
            <param name="structuralType">The derived entity type or complex type for which the changes would be tracked.
            <paramref name="structuralType"/> should be assignable to instances of <typeparamref name="T"/>.
            </param>
            <param name="updatableProperties">The set of properties that can be updated or reset. Unknown property
            names, including those of dynamic properties, are ignored.</param>
            <param name="dynamicDictionaryPropertyInfo">The property info that is used as dictionary of dynamic
            properties. <c>null</c> means this entity type is not open.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.Delta`1.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.Delta`1.StructuredType">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.Delta`1.ExpectedClrType">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.Delta`1.UpdatableProperties">
            <summary>
            The list of property names that can be updated.
            </summary>
            <remarks>When the list is modified, any modified properties that were removed from the list are no longer
            considered to be changed.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta`1.Clear">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta`1.TrySetPropertyValue(System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta`1.TryGetPropertyValue(System.String,System.Object@)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta`1.TryGetNestedPropertyValue(System.String,System.Object@)">
            <summary>
            Attempts to get the value of the nested Property called <paramref name="name"/> from the underlying resource.
            <remarks>
            Only properties that exist on Entity can be retrieved.
            Only modified nested properties can be retrieved.
            The nested Property type will be <see cref="T:Microsoft.AspNetCore.OData.Deltas.IDelta"/> of its defined type.
            </remarks>
            </summary>
            <param name="name">The name of the nested Property</param>
            <param name="value">The value of the nested Property</param>
            <returns><c>True</c> if the Property was found and is a nested Property</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta`1.TryGetPropertyType(System.String,System.Type@)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta`1.GetInstance">
            <summary>
            Returns the instance that holds all the changes (and original values) being tracked by this Delta.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta`1.GetChangedPropertyNames">
            <summary>
            Returns the known properties that have been modified through this <see cref="T:Microsoft.AspNetCore.OData.Deltas.Delta"/> as an
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> of property Names.
            Includes the structural properties at current level.
            Does not include the names of the changed dynamic properties.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta`1.GetUnchangedPropertyNames">
            <summary>
            Returns the known properties that have not been modified through this <see cref="T:Microsoft.AspNetCore.OData.Deltas.Delta"/> as an
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> of property Names. Does not include the names of the changed dynamic
            properties.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta`1.CopyChangedValues(`0)">
            <summary>
            Copies the changed property values from the underlying entity (accessible via <see cref="M:Microsoft.AspNetCore.OData.Deltas.Delta`1.GetInstance" />)
            to the <paramref name="original"/> entity recursively.
            </summary>
            <param name="original">The entity to be updated.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta`1.CopyUnchangedValues(`0)">
            <summary>
            Copies the unchanged property values from the underlying entity (accessible via <see cref="M:Microsoft.AspNetCore.OData.Deltas.Delta`1.GetInstance" />)
            to the <paramref name="original"/> entity.
            </summary>
            <param name="original">The entity to be updated.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta`1.Patch(`0)">
            <summary>
            Overwrites the <paramref name="original"/> entity with the changes tracked by this Delta.
            <remarks>The semantics of this operation are equivalent to a HTTP PATCH operation, hence the name.</remarks>
            </summary>
            <param name="original">The entity to be updated.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta`1.Put(`0)">
            <summary>
            Overwrites the <paramref name="original"/> entity with the values stored in this Delta.
            <remarks>The semantics of this operation are equivalent to a HTTP PUT operation, hence the name.</remarks>
            </summary>
            <param name="original">The entity to be updated.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.Delta`1.TryGetPropertyRef(`0,System.String,System.Object@)">
            <summary>
            Attempts to get the property by the specified name.
            </summary>
            <param name="structural">The structural object.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyRef">Output for property value.</param>
            <returns>true if the property is found; false otherwise.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Deltas.DeltaSet`1">
            <summary>
            <see cref="T:Microsoft.AspNetCore.OData.Deltas.DeltaSet`1" /> allows and tracks changes to a delta resource set.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.DeltaSet`1.StructuredType">
            <summary>
            Gets the actual type of the structural object for which the changes are tracked.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.DeltaSet`1.ExpectedClrType">
            <summary>
            Gets the expected type of the entity for which the changes are tracked.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Deltas.IDelta">
            <summary>
            <see cref="T:Microsoft.AspNetCore.OData.Deltas.IDelta" /> allows and tracks changes to an object.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.IDelta.GetChangedPropertyNames">
            <summary>
            Returns the Properties that have been modified through this IDelta as an
            enumerable of Property Names
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.IDelta.GetUnchangedPropertyNames">
            <summary>
            Returns the Properties that have not been modified through this IDelta as an
            enumerable of Property Names
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.IDelta.TrySetPropertyValue(System.String,System.Object)">
            <summary>
            Attempts to set the Property called <paramref name="name"/> to the <paramref name="value"/> specified.
            </summary>
            <param name="name">The name of the Property</param>
            <param name="value">The new value of the Property</param>
            <returns>Returns <c>true</c> if successful and <c>false</c> if not.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.IDelta.TryGetPropertyValue(System.String,System.Object@)">
            <summary>
            Attempts to get the value of the Property called <paramref name="name"/> from the underlying Entity.
            </summary>
            <param name="name">The name of the Property</param>
            <param name="value">The value of the Property</param>
            <returns>Returns <c>true</c> if the Property was found and <c>false</c> if not.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.IDelta.TryGetPropertyType(System.String,System.Type@)">
            <summary>
            Attempts to get the <see cref="T:System.Type"/> of the Property called <paramref name="name"/> from the underlying Entity.
            </summary>
            <param name="name">The name of the Property</param>
            <param name="type">The type of the Property</param>
            <returns>Returns <c>true</c> if the Property was found and <c>false</c> if not.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Deltas.IDelta.Clear">
            <summary>
            Clears the <see cref="T:Microsoft.AspNetCore.OData.Deltas.IDelta" />.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Deltas.IDeltaDeletedLink">
            <summary>
            <see cref="T:Microsoft.AspNetCore.OData.Deltas.IDeltaDeletedLink" /> allows and tracks changes to an delta deleted link.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Deltas.IDeltaDeletedResource">
            <summary>
            <see cref="T:Microsoft.AspNetCore.OData.Deltas.IDeltaDeletedResource" /> allows and tracks changes to a deleted resource.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.IDeltaDeletedResource.Id">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.IDeltaDeletedResource.Reason">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Deltas.IDeltaLink">
            <summary>
            <see cref="T:Microsoft.AspNetCore.OData.Deltas.IDeltaLink" /> allows and tracks changes to an added link.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Deltas.IDeltaLinkBase">
            <summary>
            <see cref="T:Microsoft.AspNetCore.OData.Deltas.IDelta" /> allows and tracks changes to delta link.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.IDeltaLinkBase.Source">
            <summary>
            The Uri of the entity from which the relationship is defined, which may be absolute or relative.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.IDeltaLinkBase.Target">
            <summary>
            The Uri of the related entity, which may be absolute or relative.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.IDeltaLinkBase.Relationship">
            <summary>
            The name of the relationship property on the parent object.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Deltas.IDeltaSet">
            <summary>
            The interface for a delta resource set.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Deltas.IDeltaSetItem">
            <summary>
            The delta set item base.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.IDeltaSetItem.Kind">
            <summary>
            Gets the delta item kind.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Deltas.ITypedDelta">
            <summary>
            The typed delta.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.ITypedDelta.StructuredType">
            <summary>
            Gets the actual type of the structural object for which the changes are tracked.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Deltas.ITypedDelta.ExpectedClrType">
            <summary>
            Gets the expected type of the entity for which the changes are tracked.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.AutoSelectExpandHelper.HasAutoSelectProperty(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmStructuredType,Microsoft.OData.Edm.IEdmProperty)">
            <summary>
            Tests whether there are auto select properties.
            So far, we only test one depth for auto select, shall we go through the deeper depth?
            </summary>
            <param name="edmModel">The Edm model.</param>
            <param name="structuredType">The type from value or from path.</param>
            <param name="property">The property from path, it can be null.</param>
            <returns>true if the structured type has auto select properties; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.AutoSelectExpandHelper.HasAutoExpandProperty(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmStructuredType,Microsoft.OData.Edm.IEdmProperty)">
            <summary>
            Tests whether there are auto expand properties.
            </summary>
            <param name="edmModel">The Edm model.</param>
            <param name="structuredType">The Edm structured type.</param>
            <param name="property">The property from path, it can be null.</param>
            <returns>true if the structured type has auto expand properties; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.AutoSelectExpandHelper.GetAutoSelectPaths(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmStructuredType,Microsoft.OData.Edm.IEdmProperty,Microsoft.OData.ModelBuilder.Config.ModelBoundQuerySettings)">
            <summary>
            Gets the auto select paths.
            </summary>
            <param name="edmModel">The Edm model.</param>
            <param name="structuredType">The Edm structured type.</param>
            <param name="pathProperty">The property from path, it can be null.</param>
            <param name="querySettings">The query settings.</param>
            <returns>The auto select paths.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.AutoSelectExpandHelper.GetAutoExpandPaths(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmStructuredType,Microsoft.OData.Edm.IEdmProperty,System.Boolean,Microsoft.OData.ModelBuilder.Config.ModelBoundQuerySettings)">
            <summary>
            Gets the auto expand paths.
            </summary>
            <param name="edmModel">The Edm model.</param>
            <param name="structuredType">The Edm structured type.</param>
            <param name="property">The property starting from, it can be null.</param>
            <param name="isSelectPresent">Is $select presented.</param>
            <param name="querySettings">The query settings.</param>
            <returns>The auto expand paths.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Edm.BindableOperationFinder">
            <summary>
            This class builds a cache that allows for efficient look up of bindable operation by EntityType. 
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.BindableOperationFinder.#ctor(Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Constructs a concurrent cache for looking up bindable operations for any EntityType in the provided model.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.BindableOperationFinder.FindOperations(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Finds operations that can be invoked on the given entity type. This would include all the operations that are bound
            to the given type and its base types.
            </summary>
            <param name="entityType">The EDM entity type.</param>
            <returns>A collection of operations bound to the entity type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.BindableOperationFinder.FindOperationsBoundToCollection(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Finds operations that can be invoked on the feed. This would include all the operations that are bound to the given
            type and its base types.
            </summary>
            <param name="entityType">The EDM entity type.</param>
            <returns>A collection of operations bound to the feed.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Edm.CustomAggregateMethodAnnotation">
            <summary>
            Allows client to tell OData which are the custom aggregation methods defined.
            In order to do it, it must receive a methodToken - that is the full identifier
            of the method in the OData URL - and an IDictionary that maps the input type
            of the aggregation method to its MethodInfo.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.CustomAggregateMethodAnnotation.AddMethod(System.String,System.Collections.Generic.IDictionary{System.Type,System.Reflection.MethodInfo})">
            <summary>
            Adds all implementations of a method that share the same methodToken.
            </summary>
            <param name="methodToken">The given method token.</param>
            <param name="methods">The given method dictionary.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.CustomAggregateMethodAnnotation.GetMethodInfo(System.String,System.Type,System.Reflection.MethodInfo@)">
            <summary>
            Get an implementation of a method with the specifies returnType and methodToken.
            If there's no method that matches the requirements, returns null.
            </summary>
            <param name="methodToken">The given method token.</param>
            <param name="returnType">The given return type.</param>
            <param name="methodInfo">The output of method info.</param>
            <returns>True if the method info was found, false otherwise.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Edm.DefaultODataTypeMapper">
            <summary>
            The default implementation for <see cref="T:Microsoft.AspNetCore.OData.Edm.IODataTypeMapper"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Edm.DefaultODataTypeMapper.Default">
            <summary>
            Creates a static instance for the Default type mapper.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Edm.DefaultODataTypeMapper.ClrPrimitiveTypes">
            <summary>
            The default mapping between Edm primitive type and Clr primitive type.
            Primitive types are cross Edm models.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Edm.DefaultODataTypeMapper.EdmPrimitiveTypes">
            <summary>
            Item1 --> non-nullable
            Item2 --> nullable
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.DefaultODataTypeMapper.GetEdmPrimitiveType(System.Type)">
            <summary>
            Gets the corresponding Edm primitive type <see cref="T:Microsoft.OData.Edm.IEdmPrimitiveTypeReference"/> for a given <see cref="T:System.Type"/> type.
            </summary>
            <param name="clrType">The given CLR type.</param>
            <returns>Null or the Edm primitive type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.DefaultODataTypeMapper.GetClrPrimitiveType(Microsoft.OData.Edm.IEdmPrimitiveType,System.Boolean)">
            <summary>
            Gets the corresponding <see cref="T:System.Type"/> type for a given Edm primitive type <see cref="T:Microsoft.OData.Edm.IEdmPrimitiveTypeReference"/>.
            </summary>
            <param name="primitiveType">The given Edm primitive type.</param>
            <param name="nullable">The nullable or not.</param>
            <returns>Null or the CLR type.</returns>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Edm.DefaultODataTypeMapper._cache">
            <summary>
            The cache used to hold the type mapping between <see cref="T:System.Type"/> and <see cref="T:Microsoft.OData.Edm.IEdmTypeReference"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.DefaultODataTypeMapper.GetEdmTypeReference(Microsoft.OData.Edm.IEdmModel,System.Type)">
            <summary>
            Gets the corresponding Edm type <see cref="T:Microsoft.OData.Edm.IEdmTypeReference"/> for the given CLR type <see cref="T:System.Type"/>.
            </summary>
            <param name="edmModel">The given Edm model.</param>
            <param name="clrType">The given CLR type.</param>
            <returns>Null or the corresponding Edm type reference.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.DefaultODataTypeMapper.GetClrType(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmType,System.Boolean,Microsoft.OData.ModelBuilder.IAssemblyResolver)">
            <summary>
            Gets the corresponding <see cref="T:System.Type"/> for a given Edm type <see cref="T:Microsoft.OData.Edm.IEdmType"/>.
            </summary>
            <param name="edmModel">The Edm model.</param>
            <param name="edmType">The Edm type.</param>
            <param name="nullable">The nullable or not.</param>
            <param name="assembliesResolver">The assembly resolver. if it's null, will use the default resolver.</param>
            <returns>Null or the CLR type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.DefaultODataTypeMapper.FindClrType(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmType,Microsoft.OData.ModelBuilder.IAssemblyResolver)">
            <summary>
            Finds the corresponding CLR type for a given Edm type reference.
            </summary>
            <param name="edmModel">The Edm model.</param>
            <param name="edmType">The Edm type.</param>
            <param name="assembliesResolver">The assembly resolver.</param>
            <returns>Null or the CLR type.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Edm.EdmClrTypeMapExtensions">
            <summary>
            The extensions used to map between C# types and Edm types.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmClrTypeMapExtensions.GetEdmPrimitiveTypeReference(System.Type)">
            <summary>
            Gets the corresponding Edm primitive type <see cref="T:Microsoft.OData.Edm.IEdmPrimitiveTypeReference"/> for a given <see cref="T:System.Type"/> type.
            </summary>
            <param name="clrType">The given CLR type.</param>
            <returns>Null or the Edm primitive type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmClrTypeMapExtensions.GetEdmPrimitiveTypeReference(Microsoft.OData.Edm.IEdmModel,System.Type)">
            <summary>
            Gets the corresponding Edm primitive type <see cref="T:Microsoft.OData.Edm.IEdmPrimitiveTypeReference"/> for a given <see cref="T:System.Type"/> type.
            </summary>
            <param name="edmModel">The Edm model.</param>
            <param name="clrType">The given CLR type.</param>
            <returns>Null or the Edm primitive type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmClrTypeMapExtensions.GetClrPrimitiveType(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmPrimitiveTypeReference)">
            <summary>
            Gets the corresponding CLR type for a given Edm primitive type.
            </summary>
            <param name="edmModel">The Edm model.</param>
            <param name="edmPrimitiveType">The given Edm primitive type.</param>
            <returns>Null or the CLR type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmClrTypeMapExtensions.IsNonstandardEdmPrimitive(Microsoft.OData.Edm.IEdmModel,System.Type,System.Boolean@)">
            <summary>
            Figures out if the given clr type is nonstandard edm primitive like uint, ushort, char[] etc.
            and returns the corresponding clr type to which we map like uint => long.
            </summary>
            <param name="edmModel">The Edm model.</param>
            <param name="clrType">The potential non-standard CLR type.</param>
            <param name="isNonstandardEdmPrimitive">A boolean value out to indicate whether the input CLR type is standard OData primitive type.</param>
            <returns>The standard CLR type or the input CLR type itself.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmClrTypeMapExtensions.GetEdmTypeReference(Microsoft.OData.Edm.IEdmModel,System.Type)">
            <summary>
            Gets the Edm type reference from the CLR type.
            </summary>
            <param name="edmModel">The Edm model.</param>
            <param name="clrType">The given CLR type.</param>
            <returns>null or the Edm type reference.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmClrTypeMapExtensions.GetEdmType(Microsoft.OData.Edm.IEdmModel,System.Type)">
            <summary>
            Gets the Edm type from the CLR type.
            </summary>
            <param name="edmModel">The Edm model.</param>
            <param name="clrType">The given CLR type.</param>
            <returns>null or the Edm type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmClrTypeMapExtensions.GetClrType(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Gets the corresponding CLR type for a given Edm type reference.
            </summary>
            <param name="edmModel">The Edm model.</param>
            <param name="edmTypeReference">The Edm type reference.</param>
            <returns>Null or the CLR type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmClrTypeMapExtensions.GetClrType(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.OData.ModelBuilder.IAssemblyResolver)">
            <summary>
            Gets the corresponding CLR type for a given Edm type reference.
            </summary>
            <param name="edmModel">The Edm model.</param>
            <param name="edmTypeReference">The Edm type reference.</param>
            <param name="assembliesResolver">The assembly resolver.</param>
            <returns>Null or the CLR type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmClrTypeMapExtensions.GetClrType(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmType)">
            <summary>
            Gets the corresponding CLR type for a given Edm type.
            </summary>
            <param name="edmModel">The Edm model.</param>
            <param name="edmType">The Edm type.</param>
            <returns>Null or the CLR type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmClrTypeMapExtensions.GetClrType(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmType,Microsoft.OData.ModelBuilder.IAssemblyResolver)">
            <summary>
            Gets the corresponding CLR type for a given Edm type.
            </summary>
            <param name="edmModel">The Edm model.</param>
            <param name="edmType">The Edm type.</param>
            <param name="assembliesResolver">The assembly resolver.</param>
            <returns>Null or the CLR type.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Edm.EdmHelpers">
            <summary>
            Provides the functionalities related to the Edm type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmHelpers.GetElementTypeOrSelf(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Get element type reference if it's collection or return itself
            </summary>
            <param name="typeReference">The test type reference.</param>
            <returns>Element type or itself.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmHelpers.GetElementType(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Get the elementType if it's collection or return itself's type
            </summary>
            <param name="edmTypeReference">The test type reference.</param>
            <returns>Element type or itself.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmHelpers.ToCollection(Microsoft.OData.Edm.IEdmType,System.Boolean)">
            <summary>
            Converts the <see cref="T:Microsoft.OData.Edm.IEdmType"/> to <see cref="T:Microsoft.OData.Edm.IEdmCollectionType"/>.
            </summary>
            <param name="edmType">The given Edm type.</param>
            <param name="isNullable">Nullable or not.</param>
            <returns>The collection type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmHelpers.ToEdmTypeReference(Microsoft.OData.Edm.IEdmType,System.Boolean)">
            <summary>
            Converts an Edm Type to Edm type reference.
            </summary>
            <param name="edmType">The Edm type.</param>
            <param name="isNullable">Nullable value.</param>
            <returns>The Edm type reference.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Edm.EdmModelAnnotationExtensions">
            <summary>
            The extensions for the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> for the annotations.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelAnnotationExtensions.GetAcceptableMediaTypes(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.Vocabularies.IEdmVocabularyAnnotatable)">
            <summary>
            Gets the Org.OData.Core.V1.AcceptableMediaTypes
            </summary>
            <param name="model">The Edm model.</param>
            <param name="target">The vocabulary annotate target.</param>
            <returns>null or the collection of media type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelAnnotationExtensions.GetConcurrencyProperties(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Get concurrency properties.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="navigationSource">The navigation source.</param>
            <returns>The concurrency properties.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelAnnotationExtensions.GetClrEnumMemberAnnotation(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmEnumType)">
            <summary>
            Gets the Enum member annotations.
            </summary>
            <param name="edmModel">The Edm model.</param>
            <param name="enumType">The Enum Type.</param>
            <returns>The Enum member annotation.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelAnnotationExtensions.GetClrPropertyName(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmProperty)">
            <summary>
            Get the CLR property name.
            </summary>
            <param name="edmModel">The Edm model.</param>
            <param name="edmProperty">The Edm property.</param>
            <returns>The property name.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelAnnotationExtensions.GetDynamicPropertyDictionary(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmStructuredType)">
            <summary>
            Gets the dynamic property container name.
            </summary>
            <param name="edmModel">The Edm model.</param>
            <param name="edmType">The Edm type.</param>
            <returns>The dynamic property container property info.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelAnnotationExtensions.GetModelName(Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Gets the model name.
            </summary>
            <param name="model">The Edm model.</param>
            <returns>The Edm model name.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelAnnotationExtensions.SetModelName(Microsoft.OData.Edm.IEdmModel,System.String)">
            <summary>
            Sets the Edm model name.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="name">The Edm model name.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelAnnotationExtensions.GetTypeMapper(Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Gets the OData type mapping provider from the model.
            </summary>
            <param name="model">The Edm model.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.OData.Edm.IODataTypeMapper"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelAnnotationExtensions.SetTypeMapper(Microsoft.OData.Edm.IEdmModel,Microsoft.AspNetCore.OData.Edm.IODataTypeMapper)">
            <summary>
            Sets the OData type mapping provider to the model.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="mapper">The given mapper.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelAnnotationExtensions.GetAlternateKeys(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Gets the declared alternate keys of the most defined entity with a declared key present.
            Each entity type could define a set of alternate keys.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="entityType">The Edm entity type.</param>
            <returns>Alternate Keys of this type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelExtensions.ResolveAlternateKeyProperties(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.UriParser.KeySegment)">
            <summary>
            Resolve the alternate key properties.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="keySegment">The key segment.</param>
            <returns>The resolved Edm properties.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelExtensions.ResolveProperty(Microsoft.OData.Edm.IEdmStructuredType,System.String)">
            <summary>
            Resolve the <see cref="T:Microsoft.OData.Edm.IEdmProperty"/> using the property name. This method supports the property name case insensitive.
            However, ODL only support case-sensitive.
            </summary>
            <param name="structuredType">The given structural type </param>
            <param name="propertyName">The given property name.</param>
            <returns>The resolved <see cref="T:Microsoft.OData.Edm.IEdmProperty"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelExtensions.ResolveType(Microsoft.OData.Edm.IEdmModel,System.String)">
            <summary>
            Resolve the <see cref="T:Microsoft.OData.Edm.IEdmSchemaType"/> using the type name. This method supports the type name case insensitive.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="typeName">The type name.</param>
            <returns>The Edm schema type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelExtensions.FindProperty(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmStructuredType,Microsoft.OData.Edm.IEdmPathExpression)">
            <summary>
            Find the property using the given <see cref="T:Microsoft.OData.Edm.IEdmPathExpression"/> starting from the given <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/>.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="structuredType">The structured type.</param>
            <param name="path">The property path.</param>
            <returns>Null or the found edm property.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelExtensions.ResolveNavigationSource(Microsoft.OData.Edm.IEdmModel,System.String,System.Boolean)">
            <summary>
            Resolve the navigation source using the input identifier
            </summary>
            <param name="model">The Edm model.</param>
            <param name="identifier">The identifier</param>
            <param name="enableCaseInsensitive">Enable case insensitive</param>
            <returns>Null or the found navigation source.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelExtensions.IsEnumOrCollectionEnum(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Tests type reference is enum or collection enum
            </summary>
            <param name="edmType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelExtensions.FindTypeInInheritance(Microsoft.OData.Edm.IEdmStructuredType,Microsoft.OData.Edm.IEdmModel,System.String)">
            <summary>
            Find the given type in a structured type inheritance, include itself.
            </summary>
            <param name="structuralType">The starting structural type.</param>
            <param name="model">The Edm model.</param>
            <param name="typeName">The searching type name.</param>
            <returns>The found type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelExtensions.GetAvailableActions(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelExtensions.GetAvailableFunctions(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelExtensions.GetAvailableOperationsBoundToCollection(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelExtensions.GetAvailableOperations(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmEntityType,System.Boolean)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <param name="entityType"></param>
            <param name="boundToCollection"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Edm.EdmModelLinkBuilderExtensions">
            <summary>
            Extension methods to set the link builder.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelLinkBuilderExtensions.HasIdLink(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.AspNetCore.OData.Edm.SelfLinkBuilder{System.Uri})">
            <summary>
            Sets the ID link builder for the given <see cref="T:Microsoft.OData.Edm.IEdmNavigationSource"/>.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="navigationSource">The navigation source.</param>
            <param name="idLinkBuilder">The Id link builder.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelLinkBuilderExtensions.HasEditLink(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.AspNetCore.OData.Edm.SelfLinkBuilder{System.Uri})">
            <summary>
            Sets the Edit link builder for the given <see cref="T:Microsoft.OData.Edm.IEdmNavigationSource"/>.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="navigationSource">The navigation source.</param>
            <param name="editLinkBuilder">The Edit link builder.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelLinkBuilderExtensions.HasReadLink(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.AspNetCore.OData.Edm.SelfLinkBuilder{System.Uri})">
            <summary>
            Sets the Read link builder for the given <see cref="T:Microsoft.OData.Edm.IEdmNavigationSource"/>.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="navigationSource">The navigation source.</param>
            <param name="readLinkBuilder">The Read link builder.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelLinkBuilderExtensions.HasNavigationPropertyLink(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.OData.Edm.IEdmNavigationProperty,Microsoft.AspNetCore.OData.Edm.NavigationLinkBuilder)">
            <summary>
            Sets the navigation property link builder for the given <see cref="T:Microsoft.OData.Edm.IEdmNavigationSource"/> and <see cref="T:Microsoft.OData.Edm.IEdmNavigationProperty"/>.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="navigationSource">The navigation source.</param>
            <param name="navigationProperty">The navigation property.</param>
            <param name="linkBuilder">The navigation property link builder.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelLinkBuilderExtensions.GetNavigationSourceLinkBuilder(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Edm.NavigationSourceLinkBuilderAnnotation"/> to be used while generating self and navigation
            links for the given navigation source.
            </summary>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> containing the navigation source.</param>
            <param name="navigationSource">The navigation source.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.OData.Edm.NavigationSourceLinkBuilderAnnotation"/> if set for the given the singleton; otherwise,
            a new <see cref="T:Microsoft.AspNetCore.OData.Edm.NavigationSourceLinkBuilderAnnotation"/> that generates URLs that follow OData URL conventions.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelLinkBuilderExtensions.SetNavigationSourceLinkBuilder(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.AspNetCore.OData.Edm.NavigationSourceLinkBuilderAnnotation)">
            <summary>
            Sets the <see cref="T:Microsoft.AspNetCore.OData.Edm.NavigationSourceLinkBuilderAnnotation"/> to be used while generating self and navigation
            links for the given navigation source.
            </summary>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> containing the navigation source.</param>
            <param name="navigationSource">The navigation source.</param>
            <param name="navigationSourceLinkBuilder">The <see cref="T:Microsoft.AspNetCore.OData.Edm.NavigationSourceLinkBuilderAnnotation"/> to set.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelLinkBuilderExtensions.GetOperationLinkBuilder(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmOperation)">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Edm.OperationLinkBuilder"/> to be used while generating operation links for the given action.
            </summary>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> containing the operation.</param>
            <param name="operation">The operation for which the link builder is needed.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.OData.Edm.OperationLinkBuilder"/> for the given operation if one is set; otherwise, a new
            <see cref="T:Microsoft.AspNetCore.OData.Edm.OperationLinkBuilder"/> that generates operation links following OData URL conventions.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.EdmModelLinkBuilderExtensions.SetOperationLinkBuilder(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmOperation,Microsoft.AspNetCore.OData.Edm.OperationLinkBuilder)">
            <summary>
            Sets the <see cref="T:Microsoft.AspNetCore.OData.Edm.OperationLinkBuilder"/> to be used for generating the OData operation link for the given operation.
            </summary>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> containing the entity set.</param>
            <param name="operation">The operation for which the operation link is to be generated.</param>
            <param name="operationLinkBuilder">The <see cref="T:Microsoft.AspNetCore.OData.Edm.OperationLinkBuilder"/> to set.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Edm.EntitySelfLinks">
            <summary>
            EntitySelfLinks contains the Id, Edit and Read links for an entity.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Edm.EntitySelfLinks.IdLink">
            <summary>
            A string that uniquely identifies the resource.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Edm.EntitySelfLinks.EditLink">
            <summary>
            A URL that can be used to edit a copy of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Edm.EntitySelfLinks.ReadLink">
            <summary>
            A URL that can be used to retrieve a copy of the resource.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Edm.ExpandModelPath">
             <summary>
             The navigation property path is a model path with the following restriction:
              A non-null path MUST resolve to a model element whose type is an entity type, or a collection of entity types, e.g. a navigation property.
            
             If a path segment is a qualified name, it represents a type cast, and the segment MUST be the name of a type in scope.
             If a path segment is a simple identifier, it MUST be the name of a child model element of the model element identified by the preceding path part, or a structural or navigation property of the instance identified by the preceding path part.
             A model path MAY contain any number of segments representing collection-valued structural or navigation properties.
             </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.ExpandModelPath.#ctor(System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmElement})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Edm.ExpandModelPath" /> class.
            </summary>
            <param name="nodes">The segment nodes.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Edm.ExpandModelPath.Navigation">
            <summary>
            Gets the navigation property resolved from this path.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Edm.ExpandModelPath.NavigationPropertyPath">
            <summary>
            Gets the navigation property path, it doesn't include the navigation property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Edm.ExpandModelPath.ExpandPath">
            <summary>
            Gets the whole expand path.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Edm.IODataTypeMapper">
            <summary>
            Provides the mapping between CLR type and Edm type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.IODataTypeMapper.GetEdmPrimitiveType(System.Type)">
            <summary>
            Gets the corresponding Edm primitive type <see cref="T:Microsoft.OData.Edm.IEdmPrimitiveTypeReference"/> for a given <see cref="T:System.Type"/>.
            </summary>
            <param name="clrType">The given CLR type.</param>
            <returns>Null or the Edm primitive type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.IODataTypeMapper.GetClrPrimitiveType(Microsoft.OData.Edm.IEdmPrimitiveType,System.Boolean)">
            <summary>
            Gets the corresponding <see cref="T:System.Type"/> for a given Edm primitive type <see cref="T:Microsoft.OData.Edm.IEdmPrimitiveType"/>.
            </summary>
            <param name="primitiveType">The given Edm primitive type.</param>
            <param name="nullable">The nullable or not.</param>
            <returns>Null or the CLR type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.IODataTypeMapper.GetEdmTypeReference(Microsoft.OData.Edm.IEdmModel,System.Type)">
            <summary>
            Gets the corresponding Edm type <see cref="T:Microsoft.OData.Edm.IEdmTypeReference"/> for the given CLR type <see cref="T:System.Type"/>.
            </summary>
            <param name="edmModel">The given Edm model.</param>
            <param name="clrType">The given CLR type.</param>
            <returns>Null or the corresponding Edm type reference.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.IODataTypeMapper.GetClrType(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmType,System.Boolean,Microsoft.OData.ModelBuilder.IAssemblyResolver)">
            <summary>
            Gets the corresponding <see cref="T:System.Type"/> for a given Edm type <see cref="T:Microsoft.OData.Edm.IEdmType"/>.
            </summary>
            <param name="edmModel">The given Edm model.</param>
            <param name="edmType">The given Edm type.</param>
            <param name="nullable">The nullable or not.</param>
            <param name="assembliesResolver">The assembly resolver.</param>
            <returns>Null or the CLR type.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Edm.IODataTypeMapperExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.AspNetCore.OData.Edm.IODataTypeMapper"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.IODataTypeMapperExtensions.GetPrimitiveType(Microsoft.AspNetCore.OData.Edm.IODataTypeMapper,Microsoft.OData.Edm.IEdmPrimitiveTypeReference)">
            <summary>
            Gets the corresponding <see cref="T:System.Type"/> for a given Edm primitive type <see cref="T:Microsoft.OData.Edm.IEdmPrimitiveTypeReference"/>.
            </summary>
            <param name="mapper">The type mapper.</param>
            <param name="primitiveType">The Edm primitive type reference.</param>
            <returns>Null or the CLR type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.IODataTypeMapperExtensions.GetEdmType(Microsoft.AspNetCore.OData.Edm.IODataTypeMapper,Microsoft.OData.Edm.IEdmModel,System.Type)">
            <summary>
            Gets the corresponding Edm type <see cref="T:Microsoft.OData.Edm.IEdmType"/> for the given CLR type <see cref="T:System.Type"/>.
            </summary>
            <param name="mapper">The type mapper.</param>
            <param name="edmModel">The given Edm model.</param>
            <param name="clrType">The given CLR type.</param>
            <returns>Null or the corresponding Edm type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.IODataTypeMapperExtensions.GetClrType(Microsoft.AspNetCore.OData.Edm.IODataTypeMapper,Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Gets the corresponding <see cref="T:System.Type"/> for a given Edm type <see cref="T:Microsoft.OData.Edm.IEdmTypeReference"/>.
            </summary>
            <param name="mapper">The type mapper.</param>
            <param name="edmModel">The Edm model.</param>
            <param name="edmType">The Edm type reference.</param>
            <returns>Null or the CLR type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.IODataTypeMapperExtensions.GetClrType(Microsoft.AspNetCore.OData.Edm.IODataTypeMapper,Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.OData.ModelBuilder.IAssemblyResolver)">
            <summary>
            Gets the corresponding <see cref="T:System.Type"/> for a given Edm type <see cref="T:Microsoft.OData.Edm.IEdmTypeReference"/>.
            </summary>
            <param name="mapper">The type mapper.</param>
            <param name="edmModel">The Edm model.</param>
            <param name="edmType">The Edm type.</param>
            <param name="assembliesResolver">The assembly resolver.</param>
            <returns>Null or the CLR type.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Edm.ModelNameAnnotation">
            <summary>
            The Edm model name annotation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.ModelNameAnnotation.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Edm.ModelNameAnnotation"/> class.
            </summary>
            <param name="name">The model name.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Edm.ModelNameAnnotation.ModelName">
            <summary>
            Gets the backing CLR type for the EDM type.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Edm.NavigationLinkBuilder">
            <summary>
            Encapsulates a navigation link factory and whether the link factory follows conventions or not.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.NavigationLinkBuilder.#ctor(System.Func{Microsoft.AspNetCore.OData.Formatter.ResourceContext,Microsoft.OData.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Edm.NavigationLinkBuilder"/> class.
            </summary>
            <param name="navigationLinkFactory">The navigation link factory for creating navigation links.</param>
            <param name="followsConventions">Represents whether this factory follows OData conventions or not.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Edm.NavigationLinkBuilder.Factory">
            <summary>
            Gets the navigation link factory for creating navigation links.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Edm.NavigationLinkBuilder.FollowsConventions">
            <summary>
            Gets a value representing whether this factory follows OData conventions or not.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Edm.NavigationSourceLinkBuilderAnnotation">
            <summary>
            <see cref="T:Microsoft.AspNetCore.OData.Edm.NavigationSourceLinkBuilderAnnotation" /> is a class used to annotate
            an <see cref="T:Microsoft.OData.Edm.IEdmNavigationSource" /> inside an <see cref="T:Microsoft.OData.Edm.IEdmModel" />
            with information about how to build links related to that navigation source.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.NavigationSourceLinkBuilderAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Edm.NavigationSourceLinkBuilderAnnotation" /> class.
            </summary>
            <remarks>The default constructor is intended for use by unit testing only.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.NavigationSourceLinkBuilderAnnotation.#ctor(Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Edm.NavigationSourceLinkBuilderAnnotation"/> class.
            </summary>
            <param name="navigationSource">The navigation source for which the link builder is being constructed.</param>
            <param name="model">The EDM model that this navigation source belongs to.</param>
            <remarks>This constructor creates a link builder that generates URL's that follow OData conventions for the given navigation source.</remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Edm.NavigationSourceLinkBuilderAnnotation.IdLinkBuilder">
            <summary>
            Gets/sets the ID link builder.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Edm.NavigationSourceLinkBuilderAnnotation.ReadLinkBuilder">
            <summary>
            Gets/sets the read link builder.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Edm.NavigationSourceLinkBuilderAnnotation.EditLinkBuilder">
            <summary>
            Gets/sets the edit link builder.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.NavigationSourceLinkBuilderAnnotation.AddNavigationPropertyLinkBuilder(Microsoft.OData.Edm.IEdmNavigationProperty,Microsoft.AspNetCore.OData.Edm.NavigationLinkBuilder)">
            <summary>
            Register a link builder for a <see cref="T:Microsoft.OData.Edm.IEdmNavigationProperty" /> that navigates from Entities in this navigation source. 
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.NavigationSourceLinkBuilderAnnotation.BuildEntitySelfLinks(Microsoft.AspNetCore.OData.Formatter.ResourceContext,Microsoft.AspNetCore.OData.Formatter.ODataMetadataLevel)">
            <summary>
            Constructs the <see cref="T:Microsoft.AspNetCore.OData.Edm.EntitySelfLinks" /> for a particular <see cref="T:Microsoft.AspNetCore.OData.Formatter.ResourceContext" /> and <see cref="T:Microsoft.AspNetCore.OData.Formatter.ODataMetadataLevel" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.NavigationSourceLinkBuilderAnnotation.BuildIdLink(Microsoft.AspNetCore.OData.Formatter.ResourceContext,Microsoft.AspNetCore.OData.Formatter.ODataMetadataLevel)">
            <summary>
            Constructs the IdLink for a particular <see cref="T:Microsoft.AspNetCore.OData.Formatter.ResourceContext" /> and <see cref="T:Microsoft.AspNetCore.OData.Formatter.ODataMetadataLevel" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.NavigationSourceLinkBuilderAnnotation.BuildEditLink(Microsoft.AspNetCore.OData.Formatter.ResourceContext,Microsoft.AspNetCore.OData.Formatter.ODataMetadataLevel,System.Uri)">
            <summary>
            Constructs the EditLink URL for a particular <see cref="T:Microsoft.AspNetCore.OData.Formatter.ResourceContext" /> and <see cref="T:Microsoft.AspNetCore.OData.Formatter.ODataMetadataLevel" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.NavigationSourceLinkBuilderAnnotation.BuildReadLink(Microsoft.AspNetCore.OData.Formatter.ResourceContext,Microsoft.AspNetCore.OData.Formatter.ODataMetadataLevel,System.Uri)">
            <summary>
            Constructs a ReadLink URL for a particular <see cref="T:Microsoft.AspNetCore.OData.Formatter.ResourceContext" /> and <see cref="T:Microsoft.AspNetCore.OData.Formatter.ODataMetadataLevel" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.NavigationSourceLinkBuilderAnnotation.BuildNavigationLink(Microsoft.AspNetCore.OData.Formatter.ResourceContext,Microsoft.OData.Edm.IEdmNavigationProperty,Microsoft.AspNetCore.OData.Formatter.ODataMetadataLevel)">
            <summary>
            Constructs a NavigationLink for a particular <see cref="T:Microsoft.AspNetCore.OData.Formatter.ResourceContext" />, <see cref="T:Microsoft.OData.Edm.IEdmNavigationProperty" /> and <see cref="T:Microsoft.AspNetCore.OData.Formatter.ODataMetadataLevel" />.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Edm.OperationHelper">
            <summary>
            Helpers for Edm operation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.OperationHelper.VerifyAndBuildParameterMappings(Microsoft.OData.Edm.IEdmFunction,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Verify and build the function parameters
            </summary>
            <param name="function">The Edm function.</param>
            <param name="parameters">The input parameter template mapping.</param>
            <returns>The build function parameter mapping.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.OperationHelper.BuildParameterMappings(System.Collections.Generic.IEnumerable{Microsoft.OData.UriParser.OperationSegmentParameter},System.String)">
            <summary>
            Build the function parameter mapping.
            </summary>
            <param name="parameters">The given function parameter</param>
            <param name="segment">The segment string.</param>
            <returns>The build function parameter mapping.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.OperationHelper.GetFunctionParamterMappings(Microsoft.OData.Edm.IEdmFunction)">
            <summary>
            Gets the function parameter sets.
            </summary>
            <param name="function">The input function.</param>
            <returns>The set of parameter name.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.OperationHelper.GetFunctionParamterMappings(Microsoft.OData.Edm.IEdmFunctionImport)">
            <summary>
            Gets the function import parameter sets.
            </summary>
            <param name="functionImport">The input function import.</param>
            <returns>The set of parameter name.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.OperationHelper.SplitOperationImports(System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmOperationImport})">
            <summary>
            Split the operation into function and action.
            </summary>
            <param name="operationImports">The operation imports</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Edm.OperationLinkBuilder">
            <summary>
            <see cref="T:Microsoft.AspNetCore.OData.Edm.OperationLinkBuilder"/> can be used to annotate an action or a function.
            This is how formatters create links to invoke bound actions or functions.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.OperationLinkBuilder.#ctor(System.Func{Microsoft.AspNetCore.OData.Formatter.ResourceContext,System.Uri},System.Boolean)">
            <summary>
            Create a new <see cref="T:Microsoft.AspNetCore.OData.Edm.OperationLinkBuilder"/> based on an entity link factory.
            </summary>
            <param name="linkFactory">The link factory this <see cref="T:Microsoft.AspNetCore.OData.Edm.OperationLinkBuilder"/> should use when building links.</param>
            <param name="followsConventions">
            A value indicating whether the link factory generates links that follow OData conventions.
            </param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.OperationLinkBuilder.#ctor(System.Func{Microsoft.AspNetCore.OData.Formatter.ResourceSetContext,System.Uri},System.Boolean)">
            <summary>
            Create a new <see cref="T:Microsoft.AspNetCore.OData.Edm.OperationLinkBuilder"/> based on a feed link factory.
            </summary>
            <param name="linkFactory">The link factory this <see cref="T:Microsoft.AspNetCore.OData.Edm.OperationLinkBuilder"/> should use when building links.</param>
            <param name="followsConventions">
            A value indicating whether the action link factory generates links that follow OData conventions.
            </param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Edm.OperationLinkBuilder.LinkFactory">
            <summary>
            Gets the resource link factory.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Edm.OperationLinkBuilder.FeedLinkFactory">
            <summary>
            Gets the feed link factory.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Edm.OperationLinkBuilder.FollowsConventions">
            <summary>
            Gets a Boolean indicating whether the link factory follows OData conventions or not.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.OperationLinkBuilder.BuildLink(Microsoft.AspNetCore.OData.Formatter.ResourceContext)">
            <summary>
            Builds the operation link for the given resource.
            </summary>
            <param name="context">An instance context wrapping the resource instance.</param>
            <returns>The generated link.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.OperationLinkBuilder.BuildLink(Microsoft.AspNetCore.OData.Formatter.ResourceSetContext)">
            <summary>
            Builds the operation link for the given feed.
            </summary>
            <param name="context">An feed context wrapping the feed instance.</param>
            <returns>The generated link.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Edm.SelectModelPath">
            <summary>
            The select property path is a model path with the following restriction:
            1) only include type case and structural property
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.SelectModelPath.#ctor(System.Collections.Generic.IEnumerable{Microsoft.OData.Edm.IEdmElement})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Edm.SelectModelPath" /> class.
            </summary>
            <param name="nodes">The segment nodes.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Edm.SelectModelPath.SelectPath">
            <summary>
            Gets the select path.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Edm.SelfLinkBuilder`1">
            <summary>
            Encapsulates a self link factory and whether the link factory follows conventions or not.
            </summary>
            <typeparam name="T">The type of the self link generated. This should be <see cref="T:System.String"/> for ID links and <see cref="T:System.Uri"/> for read and edit links.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Edm.SelfLinkBuilder`1.#ctor(System.Func{Microsoft.AspNetCore.OData.Formatter.ResourceContext,`0},System.Boolean)">
            <summary>
            Constructs a new instance of <see cref="T:Microsoft.AspNetCore.OData.Edm.SelfLinkBuilder`1"/>.
            </summary>
            <param name="linkFactory">The link factory.</param>
            <param name="followsConventions">Whether the factory follows odata conventions for link generation.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Edm.SelfLinkBuilder`1.Factory">
            <summary>
            Gets the factory for generating links.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Edm.SelfLinkBuilder`1.FollowsConventions">
            <summary>
            Gets a boolean indicating whether the link factory follows OData conventions or not.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Edm.TypeCacheItem.ClrToEdmTypeCache">
            <summary>
            <see cref="T:System.Type"/> to <see cref="T:Microsoft.OData.Edm.IEdmTypeReference"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Edm.TypeCacheItem.EdmToClrTypeCache">
            <summary>
            <see cref="T:Microsoft.OData.Edm.IEdmType"/> to <see cref="T:System.Type"/>.
            item1: non-nullable
            item2: nullable
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Extensions.ActionModelExtensions">
            <summary>
            The extension methods for <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.ActionModelExtensions.IsODataIgnored(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            Tests whether the action is not suitable for OData action.
            </summary>
            <param name="action">The given action model.</param>
            <returns>True/False.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.ActionModelExtensions.HasParameter``1(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel,System.String)">
            <summary>
            Tests whether the action has the given parameter with the given type.
            </summary>
            <typeparam name="T">The parameter type.</typeparam>
            <param name="action">The given action model.</param>
            <param name="parameterName">The given parameter name.</param>
            <returns>True/False.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.ActionModelExtensions.GetAttribute``1(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            Gets the attribute on an action model.
            </summary>
            <typeparam name="T">The required attribute type.</typeparam>
            <param name="action">The given action model.</param>
            <returns>Null or the corresponding attribute.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.ActionModelExtensions.HasODataKeyParameter(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel,Microsoft.OData.Edm.IEdmEntityType,System.Boolean,System.String)">
            <summary>
            Test whether the action has the key parameters defined.
            </summary>
            <param name="action">The action model.</param>
            <param name="entityType">The Edm entity type.</param>
            <param name="enablePropertyNameCaseInsensitive">Enable property name case insensitive.</param>
            <param name="keyPrefix">The key prefix for the action parameter.</param>
            <returns>True/false.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.ActionModelExtensions.AddSelector(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel,System.String,System.String,Microsoft.OData.Edm.IEdmModel,Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate,Microsoft.AspNetCore.OData.Routing.ODataRouteOptions)">
            <summary>
            Adds the OData selector model to the action.
            </summary>
            <param name="action">The given action model.</param>
            <param name="httpMethods">The supported http methods, if multiple, using ',' to separate.</param>
            <param name="prefix">The prefix.</param>
            <param name="model">The Edm model.</param>
            <param name="path">The OData path template.</param>
            <param name="options">The route build options.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Extensions.ControllerModelExtensions">
            <summary>
            The extension methods for the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.ControllerModelExtensions.IsODataIgnored(Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel)">
            <summary>
            Test whether the controller is not suitable for OData controller.
            </summary>
            <param name="controller">The given controller model.</param>
            <returns>True/False.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.ControllerModelExtensions.HasAttribute``1(Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel)">
            <summary>
            Test whether the controller has the specified attribute defined
            </summary>
            <typeparam name="T">The attribute type.</typeparam>
            <param name="controller">The given controller model.</param>
            <returns>True/False.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.ControllerModelExtensions.GetAttribute``1(Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel)">
            <summary>
            Gets the attribute from the controller model.
            </summary>
            <typeparam name="T">The attribute type.</typeparam>
            <param name="controller">The given controller model.</param>
            <returns>The attribute or null.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Extensions.GetNextPageHelper">
            <summary>
            Helper to generate next page links.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.GetNextPageHelper.GetNextPageLink(System.Uri,System.Int32,System.Object,System.Func{System.Object,System.String})">
            <remarks>This signature uses types that are AspNetCore-specific.</remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Extensions.HttpContextExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpContextExtensions.ODataFeature(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Return the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.IODataFeature"/> from the <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.
            </summary>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> instance to extend.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.OData.Abstracts.IODataFeature"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpContextExtensions.ODataBatchFeature(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Return the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.IODataBatchFeature"/> from the <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.
            </summary>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> instance to extend.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.OData.Abstracts.IODataBatchFeature"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpContextExtensions.ODataOptions(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Returns the <see cref="M:Microsoft.AspNetCore.OData.Extensions.HttpContextExtensions.ODataOptions(Microsoft.AspNetCore.Http.HttpContext)"/> instance from the DI container.
            </summary>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> instance to extend.</param>
            <returns>The <see cref="M:Microsoft.AspNetCore.OData.Extensions.HttpContextExtensions.ODataOptions(Microsoft.AspNetCore.Http.HttpContext)"/> instance from the DI container.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Extensions.HttpRequestExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpRequestExtensions.ODataFeature(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Returns the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.IODataFeature"/> from the DI container.
            </summary>
            <param name="request">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> instance to extend.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.OData.Abstracts.IODataFeature"/> from the services container.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpRequestExtensions.ODataBatchFeature(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.IODataBatchFeature"/> from the DI container.
            </summary>
            <param name="request">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> instance to extend.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.OData.Abstracts.IODataBatchFeature"/> from the services container.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpRequestExtensions.ODataOptions(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Returns the <see cref="M:Microsoft.AspNetCore.OData.Extensions.HttpRequestExtensions.ODataOptions(Microsoft.AspNetCore.Http.HttpRequest)"/> instance from the DI container.
            </summary>
            <param name="request">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> instance to extend.</param>
            <returns>The <see cref="M:Microsoft.AspNetCore.OData.Extensions.HttpRequestExtensions.ODataOptions(Microsoft.AspNetCore.Http.HttpRequest)"/> instance from the DI container.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpRequestExtensions.GetModel(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> from the request container.
            </summary>
            <param name="request">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> instance to extend.</param>
            <returns>The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> from the request container.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpRequestExtensions.GetTimeZoneInfo(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets the <see cref="T:System.TimeZoneInfo"/> setting.
            </summary>
            <param name="request">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> instance to extend.</param>
            <returns>null or the time zone info.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpRequestExtensions.IsNoDollarQueryEnable(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets the boolean value indicating whether the non-dollar prefix query option.
            </summary>
            <param name="request">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> instance to extend.</param>
            <returns>True/false.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpRequestExtensions.IsCountRequest(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets a value indicating if this is a count request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpRequestExtensions.GetReaderSettings(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets the <see cref="T:Microsoft.OData.ODataMessageWriterSettings"/> from the request container.
            </summary>
            <param name="request">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> instance to extend.</param>
            <returns>The <see cref="T:Microsoft.OData.ODataMessageWriterSettings"/> from the request container.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpRequestExtensions.GetWriterSettings(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets the <see cref="T:Microsoft.OData.ODataMessageWriterSettings"/> from the request container.
            </summary>
            <param name="request">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> instance to extend.</param>
            <returns>The <see cref="T:Microsoft.OData.ODataMessageWriterSettings"/> from the request container.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpRequestExtensions.GetDeserializerProvider(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            get the deserializer provider associated with the request.
            </summary>
            <param name="request">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> instance to extend.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpRequestExtensions.GetNextPageLink(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,System.Object,System.Func{System.Object,System.String})">
            <summary>
            Creates a link for the next page of results; To be used as the value of @odata.nextLink.
            </summary>
            <param name="request">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> instance to extend.</param>
            <param name="pageSize">The number of results allowed per page.</param>
            <param name="instance">Object which can be used to generate the skiptoken value.</param>
            <param name="objectToSkipTokenValue">Function that takes in the last object and returns the skiptoken value string.</param>
            <returns>A next page link.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpRequestExtensions.CreateETag(Microsoft.AspNetCore.Http.HttpRequest,System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeZoneInfo)">
            <summary>
            Creates an ETag from concurrency property names and values.
            </summary>
            <param name="request">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> instance to extend.</param>
            <param name="properties">The input property names and values.</param>
            <param name="timeZone">The Time zone info.</param>
            <returns>The generated ETag string.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpRequestExtensions.GetETagHandler(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Abstracts.IETagHandler"/> from the services container.
            </summary>
            <param name="request">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> instance to extend.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.OData.Abstracts.IETagHandler"/> from the services container.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpRequestExtensions.IsODataQueryRequest(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Checks whether the request is a POST targeted at a resource path ending in /$query.
            </summary>
            <param name="request">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> instance to extend.</param>
            <returns>true if the request path has $query segment.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpRequestExtensions.GetRouteServices(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets the dependency injection container for the OData request.
            </summary>
            <param name="request">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> instance to extend.</param>
            <returns>The dependency injection container.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpRequestExtensions.CreateRouteServices(Microsoft.AspNetCore.Http.HttpRequest,System.String)">
            <summary>
            Creates a request container that associates with the <paramref name="request"/>.
            </summary>
            <param name="request">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> instance to extend.</param>
            <param name="routePrefix">The route prefix for this request. Should match an entry in <see cref="P:Microsoft.AspNetCore.OData.ODataOptions.RouteComponents"/>.</param>
            <returns>The request container created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpRequestExtensions.ClearRouteServices(Microsoft.AspNetCore.Http.HttpRequest,System.Boolean)">
            <summary>
            Removes the <see cref="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.RequestScope"/> and <see cref="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.Services"/> from 
            the <paramref name="request"/> and optionally disposes of the <see cref="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.RequestScope"/>.
            </summary>
            <param name="request">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> instance to extend.</param>
            <param name="dispose">
            Specifies whether or not to dispose of the <see cref="P:Microsoft.AspNetCore.OData.Abstracts.ODataFeature.RequestScope"/>. Defaults to false.
            </param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpRequestExtensions.CreateRequestScope(Microsoft.AspNetCore.Http.HttpRequest,System.String)">
            <summary>
            Create a scoped request.
            </summary>
            <param name="request">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> instance to extend.</param>
            <param name="routePrefix">The route prefix for this request. Should match an entry in <see cref="P:Microsoft.AspNetCore.OData.ODataOptions.RouteComponents"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpRequestExtensions.GetODataVersion(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets the OData version from the request context.
            </summary>
            <param name="request">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> instance to extend.</param>
            <returns>The OData version.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Extensions.HttpResponseExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.AspNetCore.Http.HttpResponse"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.HttpResponseExtensions.IsSuccessStatusCode(Microsoft.AspNetCore.Http.HttpResponse)">
            <summary>
            Determine if the response has a success status code.
            </summary>
            <param name="response">The response.</param>
            <returns>True if the response has a success status code; false otherwise.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Extensions.LinkGeneratorHelpers">
            <summary>
            Extensions to generator the Link.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.LinkGeneratorHelpers.CreateODataLink(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.OData.UriParser.ODataPathSegment[])">
            <summary>
            Generates an OData link using the request's OData route name and path handler and given segments.
            </summary>
            <param name="request">The Http request.</param>
            <param name="segments">The OData path segments.</param>
            <returns>The generated OData link.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.LinkGeneratorHelpers.CreateODataLink(Microsoft.AspNetCore.Http.HttpRequest,System.Collections.Generic.IList{Microsoft.OData.UriParser.ODataPathSegment})">
            <summary>
            Generates an OData link using the given OData route name, path handler, and segments.
            </summary>
            <param name="request">The Http request.</param>
            <param name="segments">The OData path segments.</param>
            <returns>The generated OData link.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Extensions.SerializableErrorExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.AspNetCore.Mvc.SerializableError"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Extensions.SerializableErrorExtensions.CreateODataError(Microsoft.AspNetCore.Mvc.SerializableError)">
            <summary>
            Converts the <paramref name="serializableError"/> to an <see cref="T:Microsoft.OData.ODataError"/>.
            </summary>
            <param name="serializableError">The <see cref="T:Microsoft.AspNetCore.Mvc.SerializableError"/> instance to convert.</param>
            <returns>The converted <see cref="T:Microsoft.OData.ODataError"/></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Extensions.SerializableErrorKeys">
            <summary>
                Different keys for adding entries to an <see cref="T:Microsoft.AspNetCore.Mvc.SerializableError" /> instance so
                that it can be parsed to a <see cref="T:Microsoft.OData.ODataError" /> instance
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Extensions.SerializableErrorKeys.MessageKey">
            <summary>
            Provides a key for the Message.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Extensions.SerializableErrorKeys.MessageDetailKey">
            <summary>
            Provides a key for the MessageDetail.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Extensions.SerializableErrorKeys.ModelStateKey">
            <summary>
            Provides a key for the ModelState.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Extensions.SerializableErrorKeys.ExceptionMessageKey">
            <summary>
            Provides a key for the ExceptionMessage.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Extensions.SerializableErrorKeys.ExceptionTypeKey">
            <summary>
            Provides a key for the ExceptionType.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Extensions.SerializableErrorKeys.StackTraceKey">
            <summary>
            Provides a key for the StackTrace.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Extensions.SerializableErrorKeys.InnerExceptionKey">
            <summary>
            Provides a key for the InnerException.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Extensions.SerializableErrorKeys.MessageLanguageKey">
            <summary>
            Provides a key for the MessageLanguage.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Extensions.SerializableErrorKeys.ErrorCodeKey">
            <summary>
            Provides a key for the ErrorCode.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Formatter.DefaultODataETagHandler.NullLiteralInETag">
            <summary>null literal that needs to be return in ETag value when the value is null</summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataDeserializer">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataDeserializer"/> is used to read an ODataMessage into a CLR object.
            </summary>
            <remarks>
            Each supported CLR type has a corresponding <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataDeserializer" />. A CLR type is supported if it is one of
            the special types or if it has a backing EDM type. Some of the special types are Uri which maps to ODataReferenceLink payload,
            Uri[] which maps to ODataReferenceLinks payload, ODataWorkspace which maps to ODataServiceDocument payload.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataDeserializer.ODataPayloadKind">
            <summary>
            The kind of ODataPayload this deserializer handles.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataDeserializer.ReadAsync(Microsoft.OData.ODataMessageReader,System.Type,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Reads an <see cref="T:Microsoft.OData.IODataRequestMessage"/> using messageReader.
            </summary>
            <param name="messageReader">The messageReader to use.</param>
            <param name="type">The type of the object to read into.</param>
            <param name="readContext">The read context.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataDeserializerProvider">
            <summary>
            Represents a factory that creates an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataDeserializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataDeserializerProvider.GetODataDeserializer(System.Type,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializer"/> for the given type.
            </summary>
            <param name="type">The CLR type.</param>
            <param name="request">The request being deserialized.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializer"/> that can deserialize the given type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataDeserializerProvider.GetEdmTypeDeserializer(Microsoft.OData.Edm.IEdmTypeReference,System.Boolean)">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataEdmTypeDeserializer"/> for the given EDM type.
            </summary>
            <param name="edmType">The EDM type.</param>
            <param name="isDelta">Is delta</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataEdmTypeDeserializer"/> that can deserialize the given EDM type.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataEdmTypeDeserializer">
            <summary>
            Interface for all <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializer" />s that deserialize into an object backed by <see cref="T:Microsoft.OData.Edm.IEdmType"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataEdmTypeDeserializer.ReadInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Deserializes the item into a new object of type corresponding to <paramref name="edmType"/>.
            </summary>
            <param name="item">The item to deserialize.</param>
            <param name="edmType">The EDM type of the object to read into.</param>
            <param name="readContext">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext"/>.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataActionPayloadDeserializer">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataDeserializer"/> for reading OData action parameters.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataActionPayloadDeserializer.#ctor(Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataDeserializerProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataActionPayloadDeserializer"/> class.
            </summary>
            <param name="deserializerProvider">The deserializer provider to use to read inner objects.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataActionPayloadDeserializer.DeserializerProvider">
            <summary>
            Gets the deserializer provider to use to read inner objects.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataActionPayloadDeserializer.ReadAsync(Microsoft.OData.ODataMessageReader,System.Type,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataCollectionDeserializer">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataDeserializer"/> that can read OData collection payloads.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataCollectionDeserializer.#ctor(Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataDeserializerProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataCollectionDeserializer"/> class.
            </summary>
            <param name="deserializerProvider">The deserializer provider to use to read inner objects.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataCollectionDeserializer.ReadAsync(Microsoft.OData.ODataMessageReader,System.Type,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataCollectionDeserializer.ReadInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataCollectionDeserializer.ReadCollectionValue(Microsoft.OData.ODataCollectionValue,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Deserializes the given <paramref name="collectionValue"/> under the given <paramref name="readContext"/>.
            </summary>
            <param name="collectionValue">The <see cref="T:Microsoft.OData.ODataCollectionValue"/> to deserialize.</param>
            <param name="elementType">The element type of the collection to read.</param>
            <param name="readContext">The deserializer context.</param>
            <returns>The deserialized collection.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeltaResourceSetDeserializer">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataDeserializer"/> that can read OData delta resource sets.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeltaResourceSetDeserializer.#ctor(Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataDeserializerProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeltaResourceSetDeserializer"/> class.
            </summary>
            <param name="deserializerProvider">The deserializer provider to use to read inner objects.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeltaResourceSetDeserializer.ReadAsync(Microsoft.OData.ODataMessageReader,System.Type,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeltaResourceSetDeserializer.ReadInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeltaResourceSetDeserializer.ReadDeltaResourceSet(Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataDeltaResourceSetWrapper,Microsoft.OData.Edm.IEdmStructuredTypeReference,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Deserializes the given <paramref name="deltaResourceSet"/> under the given <paramref name="readContext"/>.
            </summary>
            <param name="deltaResourceSet">The delta resource set to deserialize.</param>
            <param name="elementType">The element type.</param>
            <param name="readContext">The deserializer context.</param>
            <returns>The deserialized resource set object.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeltaResourceSetDeserializer.ReadDeltaResource(Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceWrapper,Microsoft.OData.Edm.IEdmStructuredTypeReference,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Deserializes the given <paramref name="resource"/> under the given <paramref name="readContext"/>.
            The given resource could be "Added Resource", "Updated Resource" or "Deleted Resource".
            </summary>
            <param name="resource">The Added Updated or Deleted Resource.</param>
            <param name="elementType">The element type.</param>
            <param name="readContext">The deserializer context.</param>
            <returns>The created object.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeltaResourceSetDeserializer.ReadDeltaDeletedLink(Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataDeltaDeletedLinkWrapper,Microsoft.OData.Edm.IEdmStructuredTypeReference,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Deserializes the given <paramref name="deletedLink"/> under the given <paramref name="readContext"/>.
            </summary>
            <param name="deletedLink">The given deleted link.</param>
            <param name="elementType">The element type.</param>
            <param name="readContext">The deserializer context.</param>
            <returns>The created object.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeltaResourceSetDeserializer.ReadDeltaLink(Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataDeltaLinkWrapper,Microsoft.OData.Edm.IEdmStructuredTypeReference,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Deserializes the given <paramref name="link"/> under the given <paramref name="readContext"/>.
            </summary>
            <param name="link">The given delta link.</param>
            <param name="elementType">The element type.</param>
            <param name="readContext">The deserializer context.</param>
            <returns>The created object.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializer">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializer"/> is used to read an ODataMessage into a CLR object.
            </summary>
            <remarks>
            Each supported CLR type has a corresponding <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializer" />. A CLR type is supported if it is one of
            the special types or if it has a backing EDM type. Some of the special types are Uri which maps to ODataReferenceLink payload, 
            Uri[] which maps to ODataReferenceLinks payload, ODataWorkspace which maps to ODataServiceDocument payload.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializer.#ctor(Microsoft.OData.ODataPayloadKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializer"/> class.
            </summary>
            <param name="payloadKind">The kind of payload this deserializer handles.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializer.ODataPayloadKind">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializer.ReadAsync(Microsoft.OData.ODataMessageReader,System.Type,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext">
            <summary>
            This class encapsulates the state and settings that get passed to <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataDeserializer"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext.ResourceType">
            <summary>
            Gets or sets the type of the top-level object the request needs to be deserialized into.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext.ResourceEdmType">
            <summary>
            Gets or sets the <see cref="T:Microsoft.OData.Edm.IEdmTypeReference"/> of the top-level object the request needs to be deserialized into.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext.Path">
            <summary>
            Gets or sets the <see cref="T:Microsoft.OData.UriParser.ODataPath"/> of the request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext.Model">
            <summary>
            Gets or sets the EDM model associated with the request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext.Request">
            <summary>
            Gets or sets the HTTP Request whose response is being serialized.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext.TimeZone">
            <summary>
            Gets or sets the <see cref="T:System.TimeZoneInfo"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerProvider">
            <summary>
            The default <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataDeserializerProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerProvider.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerProvider"/> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerProvider.GetEdmTypeDeserializer(Microsoft.OData.Edm.IEdmTypeReference,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerProvider.GetODataDeserializer(System.Type,Microsoft.AspNetCore.Http.HttpRequest)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataEdmTypeDeserializer">
            <summary>
            Base class for all <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializer" />s that deserialize into an object backed by <see cref="T:Microsoft.OData.Edm.IEdmType"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.#ctor(Microsoft.OData.ODataPayloadKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataEdmTypeDeserializer"/> class.
            </summary>
            <param name="payloadKind">The kind of OData payload that this deserializer reads.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.#ctor(Microsoft.OData.ODataPayloadKind,Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataDeserializerProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataEdmTypeDeserializer"/> class.
            </summary>
            <param name="payloadKind">The kind of OData payload this deserializer handles.</param>
            <param name="deserializerProvider">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataDeserializerProvider"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.DeserializerProvider">
            <summary>
            The <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataDeserializerProvider"/> to use for deserializing inner items.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataEdmTypeDeserializer.ReadInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataEntityReferenceLinkDeserializer">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializer"/> that can read OData entity reference link payloads.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataEntityReferenceLinkDeserializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataEntityReferenceLinkDeserializer"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataEntityReferenceLinkDeserializer.ReadAsync(Microsoft.OData.ODataMessageReader,System.Type,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataEnumDeserializer">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializer"/> that can read OData enum types.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataEnumDeserializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataEnumDeserializer"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataEnumDeserializer.ReadAsync(Microsoft.OData.ODataMessageReader,System.Type,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataEnumDeserializer.ReadInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataPrimitiveDeserializer">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializer"/> that can read OData primitive types.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataPrimitiveDeserializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataPrimitiveDeserializer"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataPrimitiveDeserializer.ReadAsync(Microsoft.OData.ODataMessageReader,System.Type,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataPrimitiveDeserializer.ReadInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataPrimitiveDeserializer.ReadPrimitive(Microsoft.OData.ODataProperty,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Deserializes the primitive from the given <paramref name="primitiveProperty"/> under the given <paramref name="readContext"/>.
            </summary>
            <param name="primitiveProperty">The primitive property to deserialize.</param>
            <param name="readContext">The deserializer context.</param>
            <returns>The deserialized OData primitive value.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataResourceDeserializer">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializer"/> for reading OData resource payloads.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataResourceDeserializer.#ctor(Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataDeserializerProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataResourceDeserializer"/> class.
            </summary>
            <param name="deserializerProvider">The deserializer provider to use to read inner objects.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataResourceDeserializer.ReadAsync(Microsoft.OData.ODataMessageReader,System.Type,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataResourceDeserializer.ReadInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataResourceDeserializer.ReadResource(Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceWrapper,Microsoft.OData.Edm.IEdmStructuredTypeReference,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Deserializes the given <paramref name="resourceWrapper"/> under the given <paramref name="readContext"/>.
            </summary>
            <param name="resourceWrapper">The OData resource to deserialize.</param>
            <param name="structuredType">The type of the resource to deserialize.</param>
            <param name="readContext">The deserializer context.</param>
            <returns>The deserialized resource.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataResourceDeserializer.CreateResourceInstance(Microsoft.OData.Edm.IEdmStructuredTypeReference,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Creates a new instance of the backing CLR object for the given resource type.
            </summary>
            <param name="structuredType">The EDM type of the resource to create.</param>
            <param name="readContext">The deserializer context.</param>
            <returns>The created CLR object.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataResourceDeserializer.ApplyDeletedResource(System.Object,Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceWrapper,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Deserializes the delete information from <paramref name="resourceWrapper"/> into <paramref name="resource"/>.
            </summary>
            <param name="resource">The object into which the nested properties should be read.</param>
            <param name="resourceWrapper">The resource object containing the nested properties.</param>
            <param name="readContext">The deserializer context.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataResourceDeserializer.ApplyNestedProperties(System.Object,Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceWrapper,Microsoft.OData.Edm.IEdmStructuredTypeReference,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Deserializes the nested properties from <paramref name="resourceWrapper"/> into <paramref name="resource"/>.
            </summary>
            <param name="resource">The object into which the nested properties should be read.</param>
            <param name="resourceWrapper">The resource object containing the nested properties.</param>
            <param name="structuredType">The type of the resource.</param>
            <param name="readContext">The deserializer context.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataResourceDeserializer.ApplyNestedProperty(System.Object,Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataNestedResourceInfoWrapper,Microsoft.OData.Edm.IEdmStructuredTypeReference,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Deserializes the nested property from <paramref name="resourceInfoWrapper"/> into <paramref name="resource"/>.
            </summary>
            <param name="resource">The object into which the nested property should be read.</param>
            <param name="resourceInfoWrapper">The nested resource info.</param>
            <param name="structuredType">The type of the resource.</param>
            <param name="readContext">The deserializer context.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataResourceDeserializer.ApplyStructuralProperties(System.Object,Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceWrapper,Microsoft.OData.Edm.IEdmStructuredTypeReference,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Deserializes the structural properties from <paramref name="resourceWrapper"/> into <paramref name="resource"/>.
            </summary>
            <param name="resource">The object into which the structural properties should be read.</param>
            <param name="resourceWrapper">The resource object containing the structural properties.</param>
            <param name="structuredType">The type of the resource.</param>
            <param name="readContext">The deserializer context.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataResourceDeserializer.ApplyStructuralProperty(System.Object,Microsoft.OData.ODataProperty,Microsoft.OData.Edm.IEdmStructuredTypeReference,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Deserializes the given <paramref name="structuralProperty"/> into <paramref name="resource"/>.
            </summary>
            <param name="resource">The object into which the structural property should be read.</param>
            <param name="structuralProperty">The structural property.</param>
            <param name="structuredType">The type of the resource.</param>
            <param name="readContext">The deserializer context.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataResourceDeserializer.CreateResourceSetWrapper(Microsoft.OData.Edm.IEdmCollectionTypeReference,Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataEntityReferenceLinkWrapper[],Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Create <see cref="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceSetWrapper"/> from a set of <see cref="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataEntityReferenceLinkWrapper"/>
            </summary>
            <param name="edmPropertyType">The Edm property type.</param>
            <param name="refLinks">The reference links.</param>
            <param name="readContext">The reader context.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceSetWrapper"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataResourceDeserializer.CreateResourceWrapper(Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataEntityReferenceLinkWrapper,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Create <see cref="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceWrapper"/> from a <see cref="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataEntityReferenceLinkWrapper"/>
            </summary>
            <param name="edmPropertyType">The Edm property type.</param>
            <param name="refLink">The reference link.</param>
            <param name="readContext">The reader context.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceSetWrapper"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataResourceDeserializer.UpdateResourceWrapper(Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceWrapper,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Update the resource wrapper if it's have the "Id" value.
            </summary>
            <param name="resourceWrapper">The resource wrapper.</param>
            <param name="readContext">The read context.</param>
            <returns>The resource wrapper.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataResourceDeserializer.CreateKeyProperties(System.Uri,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Do uri parsing to get the key values.
            </summary>
            <param name="id">The key Id.</param>
            <param name="readContext">The reader context.</param>
            <returns>The key properties.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataResourceSetDeserializer">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializer"/> that can read OData resource sets.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataResourceSetDeserializer.#ctor(Microsoft.AspNetCore.OData.Formatter.Deserialization.IODataDeserializerProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataResourceSetDeserializer"/> class.
            </summary>
            <param name="deserializerProvider">The deserializer provider to use to read inner objects.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataResourceSetDeserializer.ReadAsync(Microsoft.OData.ODataMessageReader,System.Type,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataResourceSetDeserializer.ReadInline(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataResourceSetDeserializer.ReadResourceSet(Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceSetWrapper,Microsoft.OData.Edm.IEdmStructuredTypeReference,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext)">
            <summary>
            Deserializes the given <paramref name="resourceSet"/> under the given <paramref name="readContext"/>.
            </summary>
            <param name="resourceSet">The resource set to deserialize.</param>
            <param name="readContext">The deserializer context.</param>
            <param name="elementType">The element type of the resource set being read.</param>
            <returns>The deserialized resource set object.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.EdmLibHelper.GetExpectedPayloadType(System.Type,Microsoft.OData.UriParser.ODataPath,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Get the expected payload type of an OData path.
            </summary>
            <param name="type">The Type to use.</param>
            <param name="path">The path to use.</param>
            <param name="model">The EdmModel to use.</param>
            <returns>The expected payload type of an OData path.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.EdmLibHelper.TryGetInnerTypeForDelta(System.Type@)">
            <summary>
            Try to return the inner type of a generic Delta.
            </summary>
            <param name="type">in: The type to test; out: inner type of a generic Delta.</param>
            <returns>True if the type was generic Delta; false otherwise.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.EdmTypeReferenceEqualityComparer">
            <summary>
            An equality comparer for <see cref="T:Microsoft.OData.Edm.IEdmTypeReference"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.FromODataBodyAttribute">
            <summary>
            An implementation of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinderAttribute"/> that can bind URI parameters using OData conventions.
            </summary>
            <remarks>
            I'd like to use this attribute for the action parameters whose value are from request body.
            It's not finished yet.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.FromODataBodyAttribute.#ctor">
            <summary>
            Instantiates a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.FromODataUriAttribute"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.FromODataUriAttribute">
            <summary>
            An implementation of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinderAttribute"/> that can bind URI parameters using OData conventions.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.FromODataUriAttribute.#ctor">
            <summary>
            Instantiates a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.FromODataUriAttribute"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.LinkGenerationHelpers">
            <summary>
            Contains helper methods for generating OData links that follow OData URL conventions.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.LinkGenerationHelpers.GenerateSelfLink(Microsoft.AspNetCore.OData.Formatter.ResourceContext,System.Boolean)">
            <summary>
            Generates a self link following the OData URL conventions for the entity represented by <paramref name="resourceContext"/>.
            </summary>
            <param name="resourceContext">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.ResourceContext"/> representing the entity for which the self link needs to be generated.</param>
            <param name="includeCast">Represents whether the generated link should have a cast segment representing a type cast.</param>
            <returns>The self link following the OData URL conventions.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.LinkGenerationHelpers.GenerateNavigationPropertyLink(Microsoft.AspNetCore.OData.Formatter.ResourceContext,Microsoft.OData.Edm.IEdmNavigationProperty,System.Boolean)">
            <summary>
            Generates a navigation link following the OData URL conventions for the entity represented by <paramref name="resourceContext"/> and the given 
            navigation property.
            </summary>
            <param name="resourceContext">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.ResourceContext"/> representing the entity for which the navigation link needs to be generated.</param>
            <param name="navigationProperty">The EDM navigation property.</param>
            <param name="includeCast">Represents whether the generated link should have a cast segment representing a type cast.</param>
            <returns>The navigation link following the OData URL conventions.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.LinkGenerationHelpers.GenerateActionLink(Microsoft.AspNetCore.OData.Formatter.ResourceSetContext,Microsoft.OData.Edm.IEdmOperation)">
            <summary>
            Generates an action link following the OData URL conventions for the action <paramref name="action"/> and bound to the
            collection of entity represented by <paramref name="resourceSetContext"/>.
            </summary>
            <param name="resourceSetContext">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.ResourceSetContext"/> representing the feed for which the action link needs to be generated.</param>
            <param name="action">The action for which the action link needs to be generated.</param>
            <returns>The generated action link following OData URL conventions.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.LinkGenerationHelpers.GenerateFunctionLink(Microsoft.AspNetCore.OData.Formatter.ResourceSetContext,Microsoft.OData.Edm.IEdmOperation)">
            <summary>
            Generates a function link following the OData URL conventions for the function <paramref name="function"/> and bound to the
            collection of entity represented by <paramref name="resourceSetContext"/>.
            </summary>
            <param name="resourceSetContext">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.ResourceSetContext"/> representing the feed for which the function link needs to be generated.</param>
            <param name="function">The function for which the function link needs to be generated.</param>
            <returns>The generated function link following OData URL conventions.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.LinkGenerationHelpers.GenerateActionLink(Microsoft.AspNetCore.OData.Formatter.ResourceContext,Microsoft.OData.Edm.IEdmOperation)">
            <summary>
            Generates an action link following the OData URL conventions for the action <paramref name="action"/> and bound to the entity
            represented by <paramref name="resourceContext"/>.
            </summary>
            <param name="resourceContext">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.ResourceContext"/> representing the entity for which the action link needs to be generated.</param>
            <param name="action">The action for which the action link needs to be generated.</param>
            <returns>The generated action link following OData URL conventions.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.LinkGenerationHelpers.GenerateFunctionLink(Microsoft.AspNetCore.OData.Formatter.ResourceContext,Microsoft.OData.Edm.IEdmOperation)">
            <summary>
            Generates an function link following the OData URL conventions for the function <paramref name="function"/> and bound to the entity
            represented by <paramref name="resourceContext"/>.
            </summary>
            <param name="resourceContext">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.ResourceContext"/> representing the entity for which the function link needs to be generated.</param>
            <param name="function">The function for which the function link needs to be generated.</param>
            <returns>The generated function link following OData URL conventions.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.MediaType.IMediaTypeMappingCollection">
            <summary>
            An interface that defines a property to access a collection of <see cref="T:Microsoft.AspNetCore.OData.Formatter.MediaType.MediaTypeMapping"/> objects.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.MediaType.IMediaTypeMappingCollection.MediaTypeMappings">
            <summary>
            Gets a collection of <see cref="T:Microsoft.AspNetCore.OData.Formatter.MediaType.MediaTypeMapping"/> objects.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.MediaType.MediaTypeMapping">
            <summary>
            A class to support matching media types.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.MediaType.MediaTypeMapping.#ctor(System.String)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.AspNetCore.OData.Formatter.MediaType.MediaTypeMapping"/> with
            the given mediaType value.
            </summary>
            <param name="mediaType">The mediaType that is associated with the request.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.MediaType.MediaTypeMapping.MediaType">
            <summary>
             Gets the media type that is associated with request.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.MediaType.MediaTypeMapping.TryMatchMediaType(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Returns a value indicating whether this instance can provide a
            <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/> for the given <paramref name="request"/>.
            </summary>
            <param name="request">The <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> to check.</param>
            <returns>If this <paramref name="request"/>'s route data contains it returns <c>1.0</c> otherwise <c>0.0</c>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataBinaryValueMediaTypeMapping">
            <summary>
            Media type mapping that associates requests for the raw value of binary properties to
            the application/octet-stream content type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataBinaryValueMediaTypeMapping.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataBinaryValueMediaTypeMapping"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataBinaryValueMediaTypeMapping.IsMatch(Microsoft.OData.UriParser.PropertySegment)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataCountMediaTypeMapping">
            <summary>
            Media type mapping that associates requests with $count.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataCountMediaTypeMapping.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataCountMediaTypeMapping"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataCountMediaTypeMapping.TryMatchMediaType(Microsoft.AspNetCore.Http.HttpRequest)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataEnumValueMediaTypeMapping">
            <summary>
            Media type mapping that associates requests with $count.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataEnumValueMediaTypeMapping.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataEnumValueMediaTypeMapping"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataEnumValueMediaTypeMapping.IsMatch(Microsoft.OData.UriParser.PropertySegment)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataMediaTypes">
            <summary>
            Contains media types used by the OData formatter.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataPrimitiveValueMediaTypeMapping">
            <summary>
            Media type mapping that associates requests with $value on primitive property.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataPrimitiveValueMediaTypeMapping.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataPrimitiveValueMediaTypeMapping"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataPrimitiveValueMediaTypeMapping.IsMatch(Microsoft.OData.UriParser.PropertySegment)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataRawValueMediaTypeMapping">
            <summary>
            Media type mapping that associates requests with $count.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataRawValueMediaTypeMapping.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataRawValueMediaTypeMapping"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataRawValueMediaTypeMapping.TryMatchMediaType(Microsoft.AspNetCore.Http.HttpRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataRawValueMediaTypeMapping.IsMatch(Microsoft.OData.UriParser.PropertySegment)">
            <summary>
            This method determines if the <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> is an OData Raw value request.
            </summary>
            <param name="propertySegment">The <see cref="T:Microsoft.OData.UriParser.PropertySegment"/> of the path.</param>
            <returns>True if the request is an OData raw value request.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataStreamMediaTypeMapping">
            <summary>
            Media type mapping that associates requests with stream property.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataStreamMediaTypeMapping.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataStreamMediaTypeMapping"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.MediaType.ODataStreamMediaTypeMapping.TryMatchMediaType(Microsoft.AspNetCore.Http.HttpRequest)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.MediaType.QueryStringMediaTypeMapping">
            <summary>
            Class that provides <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue"/>s from query strings.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.MediaType.QueryStringMediaTypeMapping.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.MediaType.QueryStringMediaTypeMapping"/> class.
            </summary>
            <param name="queryStringParameterName">The name of the query string parameter to match, if present.</param>
            <param name="mediaType">The media type to use if the query parameter specified by <paramref name="queryStringParameterName"/> is present
            and assigned the value specified by <paramref name="mediaType"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.MediaType.QueryStringMediaTypeMapping.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.MediaType.QueryStringMediaTypeMapping"/> class.
            </summary>
            <param name="queryStringParameterName">The name of the query string parameter to match, if present.</param>
            <param name="queryStringParameterValue">The value of the query string parameter to match, if present.</param>
            <param name="mediaType">The media type to use if the query parameter specified by <paramref name="queryStringParameterName"/> is present
            and assigned the value specified by <paramref name="mediaType"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.MediaType.QueryStringMediaTypeMapping.QueryStringParameterName">
            <summary>
            Gets the query string parameter name.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.MediaType.QueryStringMediaTypeMapping.QueryStringParameterValue">
            <summary>
            Gets the query string parameter value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.MediaType.QueryStringMediaTypeMapping.TryMatchMediaType(Microsoft.AspNetCore.Http.HttpRequest)">
            <inheritdocs />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.ODataActionParameters">
            <summary>
            ActionPayload holds the Parameter names and values provided by a client in a POST request
            to invoke a particular Action. The Parameter values are stored in the dictionary keyed using the Parameter name.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.ODataBodyModelBinder">
            <summary>
            A model binder for ODataParameterValue values.
            </summary>
            <remarks>
            This class is similar to ODataModelBinderProvider in AspNet. The flow is similar but the
            type are dissimilar enough making a common version more complex than separate versions.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.ODataInputFormatter">
            <summary>
            The implementation of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter"/> class to handle OData reading.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Formatter.ODataInputFormatter._payloadKinds">
            <summary>
            The set of payload kinds this formatter will accept in CanRead.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ODataInputFormatter.#ctor(System.Collections.Generic.IEnumerable{Microsoft.OData.ODataPayloadKind})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.ODataInputFormatter"/> class.
            </summary>
            <param name="payloadKinds">The kind of payloads this formatter supports.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.ODataInputFormatter.BaseAddressFactory">
            <summary>
            Gets or sets a method that allows consumers to provide an alternate base address for OData Uri.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ODataInputFormatter.GetSupportedContentTypes(System.String,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ODataInputFormatter.CanRead(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ODataInputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext,System.Text.Encoding)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ODataInputFormatter.GetDefaultBaseAddress(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Returns a base address to be used in the service root when reading or writing OData uris.
            </summary>
            <param name="request">The HttpRequest object for the given request.</param>
            <returns>The base address to be used as part of the service root in the OData uri; must terminate with a trailing '/'.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ODataInputFormatter.GetBaseAddressInternal(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Internal method used for selecting the base address to be used with OData uris.
            If the consumer has provided a delegate for overriding our default implementation,
            we call that, otherwise we default to existing behavior below.
            </summary>
            <param name="request">The HttpRequest object for the given request.</param>
            <returns>The base address to be used as part of the service root; must terminate with a trailing '/'.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ODataInputFormatter.GetDeserializer(Microsoft.AspNetCore.Http.HttpRequest,System.Type,Microsoft.OData.Edm.IEdmTypeReference@)">
            <summary>
            Gets the deserializer and the expected payload type.
            </summary>
            <param name="request">The HttpRequest.</param>
            <param name="type">The input type.</param>
            <param name="expectedPayloadType">Output the expected payload type.</param>
            <returns>null or the OData deserializer</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.ODataInputFormatterFactory">
            <summary>
            Factory for <see cref="T:Microsoft.AspNetCore.OData.Formatter.ODataInputFormatter"/> classes to handle OData.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ODataInputFormatterFactory.Create">
            <summary>
            Creates a list of media type formatters to handle OData deserialization.
            </summary>
            <returns>A list of media type formatters to handle OData.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.ODataMessageWrapper">
            <summary>
            Wrapper for IODataRequestMessage and IODataResponseMessage.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ODataMessageWrapper.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ODataMessageWrapper.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.ODataMetadataLevel">
            <summary>
            The amount of metadata information to serialize in an OData response.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Formatter.ODataMetadataLevel.Minimal">
            <summary>
            JSON minimal metadata.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Formatter.ODataMetadataLevel.Full">
            <summary>
            JSON full metadata.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Formatter.ODataMetadataLevel.None">
            <summary>
            JSON none metadata.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.ODataModelBinder">
            <summary>
            A model binder for ODataParameterValue values.
            </summary>
            <remarks>
            This class is similar to ODataModelBinderProvider in AspNet. The flow is similar but the
            type are dissimilar enough making a common version more complex than separate versions.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.ODataModelBinderConverter">
            <summary>
            Expose functionality to convert an function parameter value into a CLR object.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ODataModelBinderConverter.Convert(System.Object,Microsoft.OData.Edm.IEdmTypeReference,System.Type,System.String,Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext,System.IServiceProvider)">
            <summary>
            Convert an OData value into a CLR object.
            </summary>
            <param name="graph">The given object.</param>
            <param name="edmTypeReference">The EDM type of the given object.</param>
            <param name="clrType">The CLR type of the given object.</param>
            <param name="parameterName">The parameter name of the given object.</param>
            <param name="readContext">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.Deserialization.ODataDeserializerContext"/> use to convert.</param>
            <param name="requestContainer">The dependency injection container for the request.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.ODataOutputFormatter">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.TextOutputFormatter"/> class to handle OData.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Formatter.ODataOutputFormatter._payloadKinds">
            <summary>
            The set of payload kinds this formatter will accept in CanWriteType.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ODataOutputFormatter.#ctor(System.Collections.Generic.IEnumerable{Microsoft.OData.ODataPayloadKind})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.ODataOutputFormatter"/> class.
            </summary>
            <param name="payloadKinds">The kind of payloads this formatter supports.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.ODataOutputFormatter.BaseAddressFactory">
            <summary>
            Gets or sets a method that allows consumers to provide an alternate base
            address for OData Uri.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.ODataOutputFormatter.MediaTypeMappings">
            <summary>
            Gets a collection of <see cref="T:Microsoft.AspNetCore.OData.Formatter.MediaType.MediaTypeMapping"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ODataOutputFormatter.GetSupportedContentTypes(System.String,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ODataOutputFormatter.CanWriteResult(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ODataOutputFormatter.WriteResponseHeaders(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ODataOutputFormatter.WriteResponseBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext,System.Text.Encoding)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ODataOutputFormatter.GetDefaultBaseAddress(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Returns a base address to be used in the service root when reading or writing OData uris.
            </summary>
            <param name="request">The HttpRequest object for the given request.</param>
            <returns>The base address to be used as part of the service root in the OData uri; must terminate with a trailing '/'.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ODataOutputFormatter.GetBaseAddressInternal(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Internal method used for selecting the base address to be used with OData uris.
            If the consumer has provided a delegate for overriding our default implementation,
            we call that, otherwise we default to existing behavior below.
            </summary>
            <param name="request">The HttpRequest object for the given request.</param>
            <returns>The base address to be used as part of the service root; must terminate with a trailing '/'.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.ODataOutputFormatterFactory">
            <summary>
            Factory for <see cref="T:Microsoft.AspNetCore.OData.Formatter.ODataOutputFormatter"/> classes to handle OData.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ODataOutputFormatterFactory.Create">
            <summary>
            Creates a list of output formatters to handle OData serialization.
            </summary>
            <returns>A list of media type formatters to handle OData.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.ODataParameterValue">
            <summary>
            OData parameter value used for function parameter binding.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Formatter.ODataParameterValue.ParameterValuePrefix">
            <summary>
            This prefix is used to identify parameters in [FromODataUri] binding scenario.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ODataParameterValue.#ctor(System.Object,Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.ODataParameterValue"/> class.
            </summary>
            <param name="paramValue">The parameter value.</param>
            <param name="paramType">The parameter type.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.ODataParameterValue.EdmType">
            <summary>
            Gets the parameter type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.ODataParameterValue.Value">
            <summary>
            Gets the parameter value.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.ODataUntypedActionParameters">
            <summary>
            ActionPayload holds the Parameter names and values provided by a client in a POST request
            to invoke a particular Action. The Parameter values are stored in the dictionary keyed using the Parameter name.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ODataUntypedActionParameters.#ctor(Microsoft.OData.Edm.IEdmAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.ODataUntypedActionParameters"/> class.
            </summary>
            <param name="action">The OData action of this parameters.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.ODataUntypedActionParameters.Action">
            <summary>
            Gets the OData action of this parameters.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.ResourceContext">
            <summary>
             Contains context information about the resource currently being serialized.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ResourceContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.ResourceContext"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ResourceContext.#ctor(Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext,Microsoft.OData.Edm.IEdmStructuredTypeReference,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.ResourceContext"/> class.
            </summary>
            <param name="serializerContext">The backing <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext"/>.</param>
            <param name="structuredType">The EDM structured type of this instance context.</param>
            <param name="resourceInstance">The object representing the instance of this context.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.ResourceContext.SerializerContext">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.ResourceContext.EdmModel">
            <summary>
            Gets or sets the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> to which this instance belongs.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.ResourceContext.NavigationSource">
            <summary>
            Gets or sets the <see cref="T:Microsoft.OData.Edm.IEdmNavigationSource"/> to which this instance belongs.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.ResourceContext.StructuredType">
            <summary>
            Gets or sets the <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> of this resource instance.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.ResourceContext.EdmObject">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmStructuredObject"/> backing this instance.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.ResourceContext.ResourceInstance">
            <summary>
            Gets or sets the value of this resource instance.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.ResourceContext.Request">
            <summary>
            Gets or sets the HTTP request that caused this instance to be generated.
            </summary>
            <remarks>This signature uses types that are AspNetCore-specific.</remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.ResourceContext.TimeZone">
            <summary>
            Gets or sets the <see cref="T:System.TimeZoneInfo"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.ResourceContext.SkipExpensiveAvailabilityChecks">
            <summary>
            Gets or sets a value indicating whether ActionAvailabilityChecks should be performed or not.
            </summary>
            <remarks>
            This value is used to tell the formatter whether to check availability of an action before including a link
            to it. When in a feed we skip this check.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.ResourceContext.DynamicComplexProperties">
            <summary>
            Gets or sets the dynamic complex or collection of complex properties should be nested in this instance.
            </summary>
            <remarks>
            The key is the dynamic property name.
            The value is the dynamic property value.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ResourceContext.GetPropertyValue(System.String)">
            <summary>
            Gets the value of the property with the given name from the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmObject"/> of this instance if present; throws if the property is
            not present.
            </summary>
            <param name="propertyName">The name of the property to get.</param>
            <returns>The value of the property if present.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.ResourceContext`1">
            <summary>
            An instance of <see cref="T:Microsoft.AspNetCore.OData.Formatter.ResourceContext`1"/> gets passed to the self link
            and navigation link builders and can be used by the link builders to generate links.
            </summary>
            <typeparam name="TStructuredType">The structural type</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ResourceContext`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.ResourceContext`1"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.ResourceSetContext">
            <summary>
            Contains context information about the resource set currently being serialized.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.ResourceSetContext.EntitySetBase">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.IEdmEntitySetBase"/> this instance belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.ResourceSetContext.ResourceSetInstance">
            <summary>
            Gets the value of this feed instance.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.ResourceSetContext.Request">
            <summary>
            Gets or sets the HTTP request that caused this instance to be generated.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.ResourceSetContext.EdmModel">
            <summary>
            Gets or sets the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> to which this instance belongs.
            </summary>
            <remarks>This signature uses types that are AspNetCore-specific.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.ResourceSetContext.Create(Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext,System.Collections.IEnumerable)">
            <summary>
            Create a <see cref="T:Microsoft.AspNetCore.OData.Formatter.ResourceSetContext"/> from an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext"/> and <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="resourceSetInstance">The instance representing the resourceSet being written.</param>
            <param name="writeContext">The serializer context.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.OData.Formatter.ResourceSetContext"/>.</returns>
            <remarks>This signature uses types that are AspNetCore-specific.</remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataEdmTypeSerializer">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializer"/> that serializes instances of objects backed by an <see cref="T:Microsoft.OData.Edm.IEdmType"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataEdmTypeSerializer.CreateODataValue(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Creates an <see cref="T:Microsoft.OData.ODataValue"/> for the object represented by <paramref name="graph"/>.
            </summary>
            <param name="graph">The value of the <see cref="T:Microsoft.OData.ODataValue"/> to be created.</param>
            <param name="expectedType">The expected EDM type of the object represented by <paramref name="graph"/>.</param>
            <param name="writeContext">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext"/>.</param>
            <returns>The <see cref="T:Microsoft.OData.ODataValue"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataEdmTypeSerializer.WriteObjectInlineAsync(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.OData.ODataWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Writes the given object specified by the parameter graph as a part of an existing OData message using the given
            messageWriter and the writeContext.
            </summary>
            <param name="graph">The object to be written.</param>
            <param name="expectedType">The expected EDM type of the object represented by <paramref name="graph"/>.</param>
            <param name="writer">The <see cref="T:Microsoft.OData.ODataWriter" /> to be used for writing.</param>
            <param name="writeContext">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializer">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializer"/> is used to write a CLR object to an ODataMessage.
            </summary>
            <remarks>
            Each supported CLR type has a corresponding <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializer" />. A CLR type is supported if it is one of
            the special types or if it has a backing EDM type. Some of the special types are Uri which maps to ODataReferenceLink payload,
            Uri[] which maps to ODataReferenceLinks payload, etc.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializer.ODataPayloadKind">
            <summary>
            The kind of OData payload that this serializer generates.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializer.WriteObjectAsync(System.Object,System.Type,Microsoft.OData.ODataMessageWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Writes the given object specified by the parameter graph as a whole using the given messageWriter and writeContext.
            </summary>
            <param name="graph">The object to be written</param>
            <param name="type">The type of the object to be written.</param>
            <param name="messageWriter">The <see cref="T:Microsoft.OData.ODataMessageWriter"/> to be used for writing.</param>
            <param name="writeContext">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializerProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializerProvider"/> is a factory for creating <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializer"/>s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializerProvider.GetEdmTypeSerializer(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Gets an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEdmTypeSerializer"/> for the given edmType.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmTypeReference"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializer"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializerProvider.GetODataPayloadSerializer(System.Type,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializer"/> for the given <paramref name="type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> for which the serializer is being requested.</param>
            <param name="request">The request for which the response is being serialized.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializer"/> for the given type.</returns>
            <remarks>This signature uses types that are AspNetCore-specific.</remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataCollectionSerializer">
            <summary>
            ODataSerializer for serializing collection of primitive or enum types.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataCollectionSerializer.#ctor(Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializerProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataCollectionSerializer"/> class.
            </summary>
            <param name="serializerProvider">The serializer provider to use to serialize nested objects.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataCollectionSerializer.WriteObjectAsync(System.Object,System.Type,Microsoft.OData.ODataMessageWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataCollectionSerializer.CreateODataValue(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataCollectionSerializer.WriteCollectionAsync(Microsoft.OData.ODataCollectionWriter,System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Writes the given <paramref name="graph"/> using the given <paramref name="writer"/>.
            </summary>
            <param name="writer">The <see cref="T:Microsoft.OData.ODataCollectionWriter"/> to use.</param>
            <param name="graph">The collection to write.</param>
            <param name="collectionType">The EDM type of the collection.</param>
            <param name="writeContext">The serializer context.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataCollectionSerializer.CreateODataCollectionValue(System.Collections.IEnumerable,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Creates an <see cref="T:Microsoft.OData.ODataCollectionValue"/> for the enumerable represented by <paramref name="enumerable"/>.
            </summary>
            <param name="enumerable">The value of the collection to be created.</param>
            <param name="elementType">The element EDM type of the collection.</param>
            <param name="writeContext">The serializer context to be used while creating the collection.</param>
            <returns>The created <see cref="T:Microsoft.OData.ODataCollectionValue"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataCollectionSerializer.AddTypeNameAnnotationAsNeeded(Microsoft.OData.ODataCollectionValue,Microsoft.AspNetCore.OData.Formatter.ODataMetadataLevel)">
            <summary>
            Adds the type name annotations required for proper json light serialization.
            </summary>
            <param name="value">The collection value for which the annotations have to be added.</param>
            <param name="metadataLevel">The OData metadata level of the response.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataDeltaResourceSetSerializer">
            <summary>
            OData serializer for serializing a collection of <see cref="T:Microsoft.OData.Edm.IEdmEntityType" />
            The Collection is of <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmChangedObject"/> which is the base interface implemented by all objects which are a part of the DeltaResourceSet payload.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataDeltaResourceSetSerializer.#ctor(Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializerProvider)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataDeltaResourceSetSerializer"/>.
            </summary>
            <param name="serializerProvider">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializerProvider"/> to use to write nested entries.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataDeltaResourceSetSerializer.WriteObjectAsync(System.Object,System.Type,Microsoft.OData.ODataMessageWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataDeltaResourceSetSerializer.WriteObjectInlineAsync(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.OData.ODataWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataDeltaResourceSetSerializer.GetNextLinkGenerator(Microsoft.OData.ODataDeltaResourceSet,System.Collections.IEnumerable,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Creates a function that takes in an object and generates nextlink uri.
            </summary>
            <param name="deltaResourceSet">The resource set describing a collection of structured objects.</param>
            <param name="enumerable">>The instance representing the resourceSet being written.</param>
            <param name="writeContext">The serializer context.</param>
            <returns>The function that generates the NextLink from an object.</returns>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataDeltaResourceSetSerializer.CreateODataDeltaResourceSet(System.Collections.IEnumerable,Microsoft.OData.Edm.IEdmCollectionTypeReference,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Create the <see cref="T:Microsoft.OData.ODataDeltaResourceSet"/> to be written for the given feed instance.
            </summary>
            <param name="feedInstance">The instance representing the feed being written.</param>
            <param name="feedType">The EDM type of the feed being written.</param>
            <param name="writeContext">The serializer context.</param>
            <returns>The created <see cref="T:Microsoft.OData.ODataDeltaResourceSet"/> object.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataDeltaResourceSetSerializer.WriteDeltaDeletedResourceAsync(System.Object,Microsoft.OData.ODataWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Writes the given deltaDeletedEntry specified by the parameter graph as a part of an existing OData message using the given
            messageWriter and the writeContext.
            </summary>
            <param name="value">The object to be written.</param>
            <param name="writer">The <see cref="T:Microsoft.OData.ODataDeltaWriter" /> to be used for writing.</param>
            <param name="writeContext">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataDeltaResourceSetSerializer.WriteDeltaDeletedLinkAsync(System.Object,Microsoft.OData.ODataWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Writes the given deltaDeletedLink specified by the parameter graph as a part of an existing OData message using the given
            messageWriter and the writeContext.
            </summary>
            <param name="value">The object to be written.</param>
            <param name="writer">The <see cref="T:Microsoft.OData.ODataDeltaWriter" /> to be used for writing.</param>
            <param name="writeContext">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataDeltaResourceSetSerializer.WriteDeltaLinkAsync(System.Object,Microsoft.OData.ODataWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Writes the given deltaLink specified by the parameter graph as a part of an existing OData message using the given
            messageWriter and the writeContext.
            </summary>
            <param name="value">The object to be written.</param>
            <param name="writer">The <see cref="T:Microsoft.OData.ODataDeltaWriter" /> to be used for writing.</param>
            <param name="writeContext">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEdmTypeSerializer">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializer"/> that serializes instances of objects backed by an <see cref="T:Microsoft.OData.Edm.IEdmType"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEdmTypeSerializer.#ctor(Microsoft.OData.ODataPayloadKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEdmTypeSerializer"/> class.
            </summary>
            <param name="payloadKind">The kind of OData payload that this serializer generates.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEdmTypeSerializer.#ctor(Microsoft.OData.ODataPayloadKind,Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializerProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEdmTypeSerializer"/> class.
            </summary>
            <param name="payloadKind">The kind of OData payload that this serializer generates.</param>
            <param name="serializerProvider">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializerProvider"/> to use to write inner objects.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEdmTypeSerializer.SerializerProvider">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializerProvider"/> that can be used to write inner objects.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEdmTypeSerializer.WriteObjectInlineAsync(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.OData.ODataWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEdmTypeSerializer.CreateODataValue(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializer"/> for serializing $ref response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEntityReferenceLinkSerializer.WriteObjectAsync(System.Object,System.Type,Microsoft.OData.ODataMessageWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializer"/> for serializing $ref response for a collection navigation property.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEntityReferenceLinksSerializer.WriteObjectAsync(System.Object,System.Type,Microsoft.OData.ODataMessageWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheridoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEnumSerializer">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializer"/> for serializing <see cref="T:Microsoft.OData.Edm.IEdmEnumType" />'s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEnumSerializer.#ctor(Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializerProvider)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEnumSerializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEnumSerializer.WriteObjectAsync(System.Object,System.Type,Microsoft.OData.ODataMessageWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEnumSerializer.CreateODataValue(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataEnumSerializer.CreateODataEnumValue(System.Object,Microsoft.OData.Edm.IEdmEnumTypeReference,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Creates an <see cref="T:Microsoft.OData.ODataEnumValue"/> for the object represented by <paramref name="graph"/>.
            </summary>
            <param name="graph">The enum value.</param>
            <param name="enumType">The EDM enum type of the value.</param>
            <param name="writeContext">The serializer write context.</param>
            <returns>The created <see cref="T:Microsoft.OData.ODataEnumValue"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataErrorSerializer">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializer"/> to serialize <see cref="T:Microsoft.OData.ODataError"/>s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataErrorSerializer.#ctor">
            <summary>
            Initializes a new instance of the class <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataErrorSerializer.WriteObjectAsync(System.Object,System.Type,Microsoft.OData.ODataMessageWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataErrorSerializer.IsHttpError(System.Object)">
            <summary>
            Return true if the object is an HttpError.
            </summary>
            <param name="error">The error to test.</param>
            <returns>true if the object is an HttpError</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataErrorSerializer.CreateODataError(System.Object)">
            <summary>
            Create an ODataError from an HttpError.
            </summary>
            <param name="error">The error to use.</param>
            <returns>an ODataError.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataMetadataSerializer">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializer"/> for serializing $metadata. 
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataMetadataSerializer.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataMetadataSerializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataMetadataSerializer.WriteObjectAsync(System.Object,System.Type,Microsoft.OData.ODataMessageWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
            <remarks>The metadata written is from the model set on the <paramref name="messageWriter"/>. The <paramref name="graph" />
            is not used.</remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataPrimitiveSerializer">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializer"/> for serializing <see cref="T:Microsoft.OData.Edm.IEdmPrimitiveType" />'s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataPrimitiveSerializer.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataPrimitiveSerializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataPrimitiveSerializer.WriteObjectAsync(System.Object,System.Type,Microsoft.OData.ODataMessageWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataPrimitiveSerializer.CreateODataValue(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataPrimitiveSerializer.CreateODataPrimitiveValue(System.Object,Microsoft.OData.Edm.IEdmPrimitiveTypeReference,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Creates an <see cref="T:Microsoft.OData.ODataPrimitiveValue"/> for the object represented by <paramref name="graph"/>.
            </summary>
            <param name="graph">The primitive value.</param>
            <param name="primitiveType">The EDM primitive type of the value.</param>
            <param name="writeContext">The serializer write context.</param>
            <returns>The created <see cref="T:Microsoft.OData.ODataPrimitiveValue"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataRawValueSerializer">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializer"/> for serializing the raw value of an <see cref="T:Microsoft.OData.Edm.IEdmPrimitiveType"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataRawValueSerializer.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataRawValueSerializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataRawValueSerializer.WriteObjectAsync(System.Object,System.Type,Microsoft.OData.ODataMessageWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSerializer">
            <summary>
            ODataSerializer for serializing instances of <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> or <see cref="T:Microsoft.OData.Edm.IEdmComplexType"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSerializer.#ctor(Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializerProvider)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSerializer.WriteObjectAsync(System.Object,System.Type,Microsoft.OData.ODataMessageWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSerializer.WriteObjectInlineAsync(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.OData.ODataWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSerializer.WriteDeltaObjectInlineAsync(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.OData.ODataWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Writes the given object specified by the parameter graph as a part of an existing OData message using the given
            deltaWriter and the writeContext.
            </summary>
            <param name="graph">The object to be written.</param>
            <param name="expectedType">The expected EDM type of the object represented by <paramref name="graph"/>.</param>
            <param name="writer">The <see cref="T:Microsoft.OData.ODataDeltaWriter" /> to be used for writing.</param>
            <param name="writeContext">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSerializer.CreateSelectExpandNode(Microsoft.AspNetCore.OData.Formatter.ResourceContext)">
            <summary>
            Creates the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode"/> that describes the set of properties and actions to select and expand while writing this entity.
            </summary>
            <param name="resourceContext">Contains the entity instance being written and the context.</param>
            <returns>
            The <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode"/> that describes the set of properties and actions to select and expand while writing this entity.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSerializer.CreateResource(Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode,Microsoft.AspNetCore.OData.Formatter.ResourceContext)">
            <summary>
            Creates the <see cref="T:Microsoft.OData.ODataResource"/> to be written while writing this resource.
            </summary>
            <param name="selectExpandNode">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode"/> describing the response graph.</param>
            <param name="resourceContext">The context for the resource instance being written.</param>
            <returns>The created <see cref="T:Microsoft.OData.ODataResource"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSerializer.AppendDynamicProperties(Microsoft.OData.ODataResource,Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode,Microsoft.AspNetCore.OData.Formatter.ResourceContext)">
            <summary>
            Appends the dynamic properties of primitive, enum or the collection of them into the given <see cref="T:Microsoft.OData.ODataResource"/>.
            If the dynamic property is a property of the complex or collection of complex, it will be saved into
            the dynamic complex properties dictionary of <paramref name="resourceContext"/> and be written later.
            </summary>
            <param name="resource">The <see cref="T:Microsoft.OData.ODataResource"/> describing the resource.</param>
            <param name="selectExpandNode">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode"/> describing the response graph.</param>
            <param name="resourceContext">The context for the resource instance being written.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSerializer.CreateETag(Microsoft.AspNetCore.OData.Formatter.ResourceContext)">
            <summary>
            Creates the ETag for the given entity.
            </summary>
            <param name="resourceContext">The context for the resource instance being written.</param>
            <returns>The created ETag.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSerializer.WriteNavigationLinksAsync(Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode,Microsoft.AspNetCore.OData.Formatter.ResourceContext,Microsoft.OData.ODataWriter)">
            <summary>
            Write the navigation link for the select navigation properties.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSerializer.CreateNavigationLink(Microsoft.OData.Edm.IEdmNavigationProperty,Microsoft.AspNetCore.OData.Formatter.ResourceContext)">
            <summary>
            Creates the <see cref="T:Microsoft.OData.ODataNestedResourceInfo"/> to be written while writing this entity.
            </summary>
            <param name="navigationProperty">The navigation property for which the navigation link is being created.</param>
            <param name="resourceContext">The context for the entity instance being written.</param>
            <returns>The navigation link to be written.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSerializer.CreateComputedProperty(System.String,Microsoft.AspNetCore.OData.Formatter.ResourceContext)">
            <summary>
            Creates the <see cref="T:Microsoft.OData.ODataProperty"/> to be written for the given resource.
            </summary>
            <param name="propertyName">The computed property being written.</param>
            <param name="resourceContext">The context for the resource instance being written.</param>
            <returns>The <see cref="T:Microsoft.OData.ODataProperty"/> to write.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSerializer.CreateStreamProperty(Microsoft.OData.Edm.IEdmStructuralProperty,Microsoft.AspNetCore.OData.Formatter.ResourceContext)">
            <summary>
            Creates the <see cref="T:Microsoft.OData.ODataStreamPropertyInfo"/> to be written for the given stream property.
            </summary>
            <param name="structuralProperty">The EDM structural property being written.</param>
            <param name="resourceContext">The context for the entity instance being written.</param>
            <returns>The <see cref="T:Microsoft.OData.ODataStreamPropertyInfo"/> to write.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSerializer.CreateStructuralProperty(Microsoft.OData.Edm.IEdmStructuralProperty,Microsoft.AspNetCore.OData.Formatter.ResourceContext)">
            <summary>
            Creates the <see cref="T:Microsoft.OData.ODataProperty"/> to be written for the given entity and the structural property.
            </summary>
            <param name="structuralProperty">The EDM structural property being written.</param>
            <param name="resourceContext">The context for the entity instance being written.</param>
            <returns>The <see cref="T:Microsoft.OData.ODataProperty"/> to write.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSerializer.CreateODataAction(Microsoft.OData.Edm.IEdmAction,Microsoft.AspNetCore.OData.Formatter.ResourceContext)">
            <summary>
            Creates an <see cref="T:Microsoft.OData.ODataAction" /> to be written for the given action and the entity instance.
            </summary>
            <param name="action">The OData action.</param>
            <param name="resourceContext">The context for the entity instance being written.</param>
            <returns>The created action or null if the action should not be written.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSerializer.CreateODataFunction(Microsoft.OData.Edm.IEdmFunction,Microsoft.AspNetCore.OData.Formatter.ResourceContext)">
            <summary>
            Creates an <see cref="T:Microsoft.OData.ODataFunction" /> to be written for the given action and the entity instance.
            </summary>
            <param name="function">The OData function.</param>
            <param name="resourceContext">The context for the entity instance being written.</param>
            <returns>The created function or null if the action should not be written.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSetSerializer">
            <summary>
            OData serializer for serializing a collection of <see cref="T:Microsoft.OData.Edm.IEdmEntityType" /> or <see cref="T:Microsoft.OData.Edm.IEdmComplexType"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSetSerializer.#ctor(Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializerProvider)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSetSerializer"/>.
            </summary>
            <param name="serializerProvider">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializerProvider"/> to use to write nested entries.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSetSerializer.WriteObjectAsync(System.Object,System.Type,Microsoft.OData.ODataMessageWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSetSerializer.WriteObjectInlineAsync(System.Object,Microsoft.OData.Edm.IEdmTypeReference,Microsoft.OData.ODataWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSetSerializer.CreateResourceSet(System.Collections.IEnumerable,Microsoft.OData.Edm.IEdmCollectionTypeReference,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Create the <see cref="T:Microsoft.OData.ODataResourceSet"/> to be written for the given resourceSet instance.
            </summary>
            <param name="resourceSetInstance">The instance representing the resourceSet being written.</param>
            <param name="resourceSetType">The EDM type of the resourceSet being written.</param>
            <param name="writeContext">The serializer context.</param>
            <returns>The created <see cref="T:Microsoft.OData.ODataResourceSet"/> object.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSetSerializer.GetNextLinkGenerator(Microsoft.OData.ODataResourceSetBase,System.Collections.IEnumerable,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Creates a function that takes in an object and generates nextlink uri.
            </summary>
            <param name="resourceSet">The resource set describing a collection of structured objects.</param>
            <param name="resourceSetInstance">The instance representing the resourceSet being written.</param>
            <param name="writeContext">The serializer context.</param>
            <returns>The function that generates the NextLink from an object.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataResourceSetSerializer.CreateODataOperation(Microsoft.OData.Edm.IEdmOperation,Microsoft.AspNetCore.OData.Formatter.ResourceSetContext,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
             Creates an <see cref="T:Microsoft.OData.ODataOperation" /> to be written for the given operation and the resourceSet instance.
            </summary>
            <param name="operation">The OData operation.</param>
            <param name="resourceSetContext">The context for the resourceSet instance being written.</param>
            <param name="writeContext">The serializer context.</param>
            <returns>The created operation or null if the operation should not be written.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializer">
            <summary>
            Base class for <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializer"/> implementations.
            </summary>
            <remarks>
            Each supported CLR type has a corresponding <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializer" />. A CLR type is supported if it is one of
            the special types or if it has a backing EDM type. Some of the special types are Uri which maps to ODataReferenceLink payload, 
            Uri[] which maps to ODataReferenceLinks payload, etc.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializer.#ctor(Microsoft.OData.ODataPayloadKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializer"/> class.
            </summary>
            <param name="payloadKind">The kind of OData payload that this serializer generates.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializer.ODataPayloadKind">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializer.WriteObjectAsync(System.Object,System.Type,Microsoft.OData.ODataMessageWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializer"/> for serializing the raw value of an <see cref="T:Microsoft.OData.Edm.IEdmPrimitiveType"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.#ctor(Microsoft.AspNetCore.OData.Formatter.ResourceContext,Microsoft.OData.UriParser.SelectExpandClause,Microsoft.OData.Edm.IEdmProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext"/> class.
            </summary>
            <param name="resource">The resource whose property is being nested.</param>
            <param name="selectExpandClause">The <see cref="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.SelectExpandClause"/> for the property being nested.</param>
            <param name="edmProperty">The complex property being nested or the navigation property being expanded.
            If the resource property is the dynamic complex, the resource property is null.
            </param>
            <remarks>This constructor is used to construct the serializer context for writing nested and expanded properties.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.#ctor(Microsoft.AspNetCore.OData.Formatter.ResourceContext,Microsoft.OData.Edm.IEdmProperty,Microsoft.AspNetCore.OData.Query.ODataQueryContext,Microsoft.OData.UriParser.SelectItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext"/> class for nested resources.
            </summary>
            <param name="resource">The resource whose property is being nested.</param>
            <param name="edmProperty">The complex property being nested or the navigation property being expanded.
            If the resource property is the dynamic complex, the resource property is null.
            </param>
            <param name="queryContext">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/> for the property being nested.</param>
            <param name="currentSelectItem">The <see cref="T:Microsoft.OData.UriParser.SelectItem"/> for the property being nested.></param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.NavigationSource">
            <summary>
            Gets or sets the navigation source.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.Model">
            <summary>
            Gets or sets the EDM model associated with the request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.Path">
            <summary>
            Gets or sets the <see cref="T:Microsoft.OData.UriParser.ODataPath"/> of the request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.MetadataLevel">
            <summary>
            Gets or sets the metadata level of the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.Request">
            <summary>
            Gets or sets the HTTP Request whose response is being serialized.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.RootElementName">
            <summary>
            Gets or sets the root element name which is used when writing primitive and enum types
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.ExpandReference">
            <summary>
            Gets or sets the boolean value indicating whether it's $ref expanded.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.EdmProperty">
            <summary>
            Gets or sets the complex property being nested or navigation property being expanded.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.SkipExpensiveAvailabilityChecks">
            <summary>
            Get or sets whether expensive links should be calculated.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.TimeZone">
            <summary>
            Gets or sets the <see cref="T:System.TimeZoneInfo"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.QueryOptions">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryOptions"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.ComputedProperties">
            <summary>
            Gets the computed properties in serializer context.
            It contains all computed properties at current serializer context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.QueryContext">
            <summary>
            ODataQueryContext object, retrieved from query options for top-level context and passed down to nested serializer context as is.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.CurrentSelectItem">
            <summary>
            Gets or sets the <see cref="T:Microsoft.OData.UriParser.SelectItem"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.Items">
            <summary>
            Gets a property bag associated with this context to store any generic data.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.ExpandedResource">
            <summary>
            Gets or sets the resource that is being expanded.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.SelectExpandClause">
            <summary>
            Gets or sets the <see cref="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.SelectExpandClause"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.CurrentExpandedSelectItem">
            <summary>
            Gets or sets the <see cref="T:Microsoft.OData.UriParser.ExpandedNavigationSelectItem"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext.NavigationProperty">
            <summary>
            Gets or sets the navigation property being expanded.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerPropertyHelper.CreateProperty(Microsoft.AspNetCore.OData.Formatter.Serialization.IODataEdmTypeSerializer,System.Object,Microsoft.OData.Edm.IEdmTypeReference,System.String,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Creates an <see cref="T:Microsoft.OData.ODataProperty"/> with name <paramref name="elementName"/> and value
            based on the object represented by <paramref name="graph"/>.
            </summary>
            <param name="serializer">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataEdmTypeSerializer"/> writing the property value.</param>
            <param name="graph">The object to base the value of the property on.</param>
            <param name="expectedType">The expected EDM type of the object represented by <paramref name="graph"/>.</param>
            <param name="elementName">The name of the property.</param>
            <param name="writeContext">The <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext"/>.</param>
            <returns>The <see cref="T:Microsoft.OData.ODataProperty"/> created.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerProvider">
            <summary>
            The default implementation of <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.IODataSerializerProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerProvider.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerProvider"/> class.
            </summary>
            <param name="serviceProvider">The root container.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerProvider.GetEdmTypeSerializer(Microsoft.OData.Edm.IEdmTypeReference)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerProvider.GetODataPayloadSerializer(System.Type,Microsoft.AspNetCore.Http.HttpRequest)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataServiceDocumentSerializer">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializer"/> for serializing <see cref="T:Microsoft.OData.ODataServiceDocument" />'s for generating service document.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataServiceDocumentSerializer.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataServiceDocumentSerializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.ODataServiceDocumentSerializer.WriteObjectAsync(System.Object,System.Type,Microsoft.OData.ODataMessageWriter,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode">
            <summary>
            Describes the set of structural properties and navigation properties and actions to select and navigation properties to expand while
            writing an <see cref="T:Microsoft.OData.ODataResource"/> in the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode"/> class.
            </summary>
            <remarks>The default constructor is for unit testing only.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.#ctor(Microsoft.OData.Edm.IEdmStructuredType,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode"/> class describing the set of structural properties,
            nested properties, navigation properties, and actions to select and expand for the given <paramref name="writeContext"/>.
            </summary>
            <param name="structuredType">The structural type of the resource that would be written.</param>
            <param name="writeContext">The serializer context to be used while creating the collection.</param>
            <remarks>The default constructor is for unit testing only.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.#ctor(Microsoft.OData.UriParser.SelectExpandClause,Microsoft.OData.Edm.IEdmStructuredType,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode"/> class describing the set of structural properties,
            nested properties, navigation properties, and actions to select and expand for the given <paramref name="selectExpandClause"/>.
            </summary>
            <param name="selectExpandClause">The parsed $select and $expand query options.</param>
            <param name="structuredType">The structural type of the resource that would be written.</param>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> that contains the given structural type.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.SelectedStructuralProperties">
            <summary>
            Gets the list of EDM structural properties (primitive, enum or collection of them) to be included in the response.
            It could be null if there's no property selected.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.SelectedComplexProperties">
            <summary>
            Gets the list of Edm structural properties (complex or complex collection) to be included in the response.
            The key is the Edm structural property.
            The value is the potential sub select item.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.SelectedNavigationProperties">
            <summary>
            Gets the list of EDM navigation properties to be included as links in the response. It could be null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.ExpandedProperties">
            <summary>
            Gets the list of EDM navigation properties to be expanded in the response along with the nested query options embedded in the expand.
            It could be null if no navigation property to expand.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.ReferencedProperties">
            <summary>
            Gets the list of EDM navigation properties to be referenced in the response along with the nested query options embedded in the expand.
            It could be null if no navigation property to reference.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.SelectedDynamicProperties">
            <summary>s
            Gets the list of dynamic properties to select. It could be null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.SelectedComputedProperties">
            <summary>
            Gets the set of computed property in select.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.SelectAllDynamicProperties">
            <summary>
            Gets the flag to indicate the dynamic property to be included in the response or not.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.SelectedActions">
            <summary>
            Gets the list of OData actions to be included in the response. It could be null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.SelectedFunctions">
            <summary>
            Gets the list of OData functions to be included in the response. It could be null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.Initialize(Microsoft.OData.UriParser.SelectExpandClause,Microsoft.OData.Edm.IEdmStructuredType,Microsoft.OData.Edm.IEdmModel,System.Boolean,System.Collections.Generic.ISet{System.String})">
            <summary>
            Initialize the Node from <see cref="T:Microsoft.OData.UriParser.SelectExpandClause"/> for the given <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/>.
            </summary>
            <param name="selectExpandClause">The input select and expand clause ($select and $expand).</param>
            <param name="structuredType">The related structural type to select and expand.</param>
            <param name="model">The Edm model.</param>
            <param name="expandedReference">Is expanded reference.</param>
            <param name="computedProperties">The computed properties.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.BuildSelectExpand(Microsoft.OData.UriParser.SelectExpandClause,System.Collections.Generic.ISet{System.String},Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.EdmStructuralTypeInfo)">
            <summary>
            Build $select and $expand clause
            </summary>
            <param name="selectExpandClause">The select expand clause</param>
            <param name="computedProperties">The structural type properties.</param>
            <param name="structuralTypeInfo">The computed properties.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.BuildExpandItem(Microsoft.OData.UriParser.ExpandedReferenceSelectItem,System.Collections.Generic.IDictionary{Microsoft.OData.Edm.IEdmStructuralProperty,Microsoft.AspNetCore.OData.Query.SelectExpandIncludedProperty},Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.EdmStructuralTypeInfo)">
            <summary>
            Build the $expand item, it maybe $expand=nav, $expand=complex/nav, $expand=nav/$ref, etc.
            </summary>
            <param name="expandReferenceItem">The expanded reference select item.</param>
            <param name="currentLevelPropertiesInclude">The current properties to include at current level.</param>
            <param name="structuralTypeInfo">The structural type properties.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.BuildSelectItem(Microsoft.OData.UriParser.PathSelectItem,System.Collections.Generic.IDictionary{Microsoft.OData.Edm.IEdmStructuralProperty,Microsoft.AspNetCore.OData.Query.SelectExpandIncludedProperty},System.Collections.Generic.ISet{System.String},Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.EdmStructuralTypeInfo)">
            <summary>
            Build the $select item, it maybe $select=complex/abc, $select=abc, $select=nav, etc.
            </summary>
            <param name="pathSelectItem">The expanded reference select item.</param>
            <param name="currentLevelPropertiesInclude">The current properties to include at current level.</param>
            <param name="computedProperties">The computed properties.</param>
            <param name="structuralTypeInfo">The structural type properties.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.IsComplexOrCollectionComplex(Microsoft.OData.Edm.IEdmStructuralProperty)">
            <summary>
            Test whether the input structural property is complex property or collection of complex property.
            </summary>
            <param name="structuralProperty">The test structural property.</param>
            <returns>True/false.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.EdmStructuralTypeInfo">
            <summary>
            An internal cache class used to provide the property, operations
            and do verification on the given <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.EdmStructuralTypeInfo.AllStructuralProperties">
            <summary>
            Gets all structural properties defined on the structure type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.EdmStructuralTypeInfo.AllNavigationProperties">
            <summary>
            Gets all navigation properties defined on the structure type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.EdmStructuralTypeInfo.AllActions">
            <summary>
            Gets all actions bonding to the structure type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.EdmStructuralTypeInfo.AllFunctions">
            <summary>
            Gets all function bonding to the structure type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.EdmStructuralTypeInfo.#ctor(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmStructuredType)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.EdmStructuralTypeInfo"/> class
            </summary>
            <param name="model">The Edm model.</param>
            <param name="structuredType">The Edm structured Type.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.EdmStructuralTypeInfo.IsStructuralPropertyDefined(Microsoft.OData.Edm.IEdmStructuralProperty)">
            <summary>
            Tests whether a <see cref="T:Microsoft.OData.Edm.IEdmStructuralProperty"/> is defined on this type.
            </summary>
            <param name="property">The test property.</param>
            <returns>True/false</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Serialization.SelectExpandNode.EdmStructuralTypeInfo.IsNavigationPropertyDefined(Microsoft.OData.Edm.IEdmNavigationProperty)">
            <summary>
            Tests whether a <see cref="T:Microsoft.OData.Edm.IEdmNavigationProperty"/> is defined on this type.
            </summary>
            <param name="property">The test property.</param>
            <returns>True/false</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmChangedObjectCollection">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmObject"/> that is a collection of <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmChangedObject"/>s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmChangedObjectCollection.#ctor(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmChangedObjectCollection"/> class.
            </summary>
            <param name="entityType">The Edm entity type of the collection.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmChangedObjectCollection.#ctor(Microsoft.OData.Edm.IEdmEntityType,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Formatter.Value.IEdmChangedObject})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmChangedObjectCollection"/> class.
            </summary>
            <param name="entityType">The Edm type of the collection.</param>
            <param name="changedObjectList">The list that is wrapped by the new collection.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmChangedObjectCollection.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmComplexObjectCollection">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmObject"/> that is a collection of <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmComplexObject"/>s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmComplexObjectCollection.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmComplexObjectCollection"/> class.
            </summary>
            <param name="edmType">The edm type of the collection.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmComplexObjectCollection.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Formatter.Value.IEdmComplexObject})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmComplexObjectCollection"/> class.
            </summary>
            <param name="edmType">The edm type of the collection.</param>
            <param name="list">The list that is wrapped by the new collection.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmComplexObjectCollection.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmComplexObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmComplexObject"/> with no backing CLR <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmComplexObject.#ctor(Microsoft.OData.Edm.IEdmComplexType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmStructuredObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> of this object.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmComplexObject.#ctor(Microsoft.OData.Edm.IEdmComplexTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmStructuredObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmComplexTypeReference"/> of this object.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmComplexObject.#ctor(Microsoft.OData.Edm.IEdmComplexType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmStructuredObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmComplexType"/> of this object.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaCollectionType">
            <summary>
            Implementing IEdmCollectionType to identify collection of DeltaResourceSet.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaCollectionType.#ctor(Microsoft.OData.Edm.IEdmTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaCollectionType"/> class.
            </summary>
            <param name="typeReference">The element type reference.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaCollectionType.TypeKind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaCollectionType.ElementType">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaComplexObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmChangedObject"/> with no backing CLR <see cref="T:System.Type"/>.
            Used to hold the Entry object in the Delta Feed Payload.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaComplexObject.#ctor(Microsoft.OData.Edm.IEdmComplexType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaComplexObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmComplexType"/> of this object.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaComplexObject.#ctor(Microsoft.OData.Edm.IEdmComplexTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaComplexObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmComplexTypeReference"/> of this object.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaComplexObject.#ctor(Microsoft.OData.Edm.IEdmComplexType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaComplexObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmComplexType"/> of this object.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaDeletedLink">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmDeltaDeletedLink"/> with no backing CLR <see cref="T:System.Type"/>.
            Used to hold the Deleted Link object in the Delta ResourceSet Payload.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaDeletedLink.#ctor(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaDeletedLink"/> class.
            </summary>
            <param name="entityType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this DeltaDeletedLink.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaDeletedLink.#ctor(Microsoft.OData.Edm.IEdmEntityTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaDeletedLink"/> class.
            </summary>
            <param name="entityTypeReference">The <see cref="T:Microsoft.OData.Edm.IEdmEntityTypeReference"/> of this DeltaDeletedLink.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaDeletedLink.#ctor(Microsoft.OData.Edm.IEdmEntityType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaDeletedLink"/> class.
            </summary>
            <param name="entityType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this DeltaDeletedLink.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaDeletedLink.Kind">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaDeletedResourceObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmDeltaDeletedResourceObject"/> with no backing CLR <see cref="T:System.Type"/>.
            Used to hold the Deleted Resource object in the Delta Feed Payload.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaDeletedResourceObject.#ctor(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaDeletedResourceObject"/> class.
            </summary>
            <param name="entityType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this DeltaDeletedEntityObject.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaDeletedResourceObject.#ctor(Microsoft.OData.Edm.IEdmEntityTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaDeletedResourceObject"/> class.
            </summary>
            <param name="entityTypeReference">The <see cref="T:Microsoft.OData.Edm.IEdmEntityTypeReference"/> of this DeltaDeletedEntityObject.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaDeletedResourceObject.#ctor(Microsoft.OData.Edm.IEdmEntityType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaDeletedResourceObject"/> class.
            </summary>
            <param name="entityType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this DeltaDeletedEntityObject.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaDeletedResourceObject.Id">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaDeletedResourceObject.Reason">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaDeletedResourceObject.Kind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaDeletedResourceObject.NavigationSource">
            <summary>
            The navigation source of the deleted entity. If null, then the deleted entity is from the current feed.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaLink">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmDeltaLink"/> with no backing CLR <see cref="T:System.Type"/>.
            Used to hold the Added/Modified Link object in the Delta ResourceSet Payload.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaLink.#ctor(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaLink"/> class.
            </summary>
            <param name="entityType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this DeltaLink.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaLink.#ctor(Microsoft.OData.Edm.IEdmEntityTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaLink"/> class.
            </summary>
            <param name="entityTypeReference">The <see cref="T:Microsoft.OData.Edm.IEdmEntityTypeReference"/> of this DeltaLink.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaLink.#ctor(Microsoft.OData.Edm.IEdmEntityType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaLink"/> class.
            </summary>
            <param name="entityType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this DeltaLink.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaLink.Kind">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaLinkBase">
            <summary>
            The base class for delta link.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaLinkBase.#ctor(Microsoft.OData.Edm.IEdmEntityTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaLinkBase"/> class.
            </summary>
            <param name="typeReference">The given entity type reference.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaLinkBase.#ctor(Microsoft.OData.Edm.IEdmEntityType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaLinkBase"/> class.
            </summary>
            <param name="entityType">The given entity type.</param>
            <param name="isNullable">Nullable or not.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaLinkBase.EntityType">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaLinkBase.IsNullable">
            <summary>
            Gets the nullable value.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaLinkBase.Source">
            <summary>
            The Uri of the entity from which the relationship is defined, which may be absolute or relative.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaLinkBase.Target">
            <summary>
            The Uri of the related entity, which may be absolute or relative.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaLinkBase.Relationship">
            <summary>
            The name of the relationship property on the parent object.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaLinkBase.Kind">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaLinkBase.GetEdmType">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaResourceObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmChangedObject"/> with no backing CLR <see cref="T:System.Type"/>.
            Used to hold the Entry object in the Delta Feed Payload.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaResourceObject.#ctor(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaResourceObject"/> class.
            </summary>
            <param name="entityType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this DeltaEntityObject.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaResourceObject.#ctor(Microsoft.OData.Edm.IEdmEntityTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaResourceObject"/> class.
            </summary>
            <param name="entityTypeReference">The <see cref="T:Microsoft.OData.Edm.IEdmEntityTypeReference"/> of this DeltaEntityObject.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaResourceObject.#ctor(Microsoft.OData.Edm.IEdmEntityType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaResourceObject"/> class.
            </summary>
            <param name="entityType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this DeltaEntityObject.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaResourceObject.DeltaKind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaResourceObject.NavigationSource">
            <summary>
            The navigation source of the entity. If null, then the entity is from the current feed.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaType">
            <summary>
            Implementing IEdmType to identify objects which are part of DeltaResourceSet Payload.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaType.TypeKind">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaType.DeltaKind">
            <summary>
            Returning DeltaKind of the object within DeltaResourceSet payload
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmEntityObjectCollection">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmObject"/> that is a collection of <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmEntityObject"/>s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmEntityObjectCollection.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmEntityObjectCollection"/> class.
            </summary>
            <param name="edmType">The edm type of the collection.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmEntityObjectCollection.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Formatter.Value.IEdmEntityObject})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmEntityObjectCollection"/> class.
            </summary>
            <param name="edmType">The edm type of the collection.</param>
            <param name="list">The list that is wrapped by the new collection.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmEntityObjectCollection.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmEntityObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmEntityObject"/> with no backing CLR <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmEntityObject.#ctor(Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmEntityObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this object.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmEntityObject.#ctor(Microsoft.OData.Edm.IEdmEntityTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmEntityObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityTypeReference"/> of this object.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmEntityObject.#ctor(Microsoft.OData.Edm.IEdmEntityType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmEntityObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/> of this object.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmEnumObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmEnumObject"/> with no backing CLR <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmEnumObject.Value">
            <summary>
            Gets the value of the enumeration type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmEnumObject.IsNullable">
            <summary>
            Gets or sets whether the enum object is nullable or not.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmEnumObject.#ctor(Microsoft.OData.Edm.IEdmEnumType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmEnumObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEnumType"/> of this object.</param>
            <param name="value">The value of the enumeration type.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmEnumObject.#ctor(Microsoft.OData.Edm.IEdmEnumTypeReference,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmEnumObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEnumTypeReference"/> of this object.</param>
            <param name="value">The value of the enumeration type.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmEnumObject.#ctor(Microsoft.OData.Edm.IEdmEnumType,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmEnumObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEnumTypeReference"/> of this object.</param>
            <param name="value">The value of the enumeration type.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmEnumObject.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmEnumObjectCollection">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmObject"/> that is a collection of <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmEnumObject"/>s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmEnumObjectCollection.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmEnumObjectCollection"/> class.
            </summary>
            <param name="edmType">The edm type of the collection.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmEnumObjectCollection.#ctor(Microsoft.OData.Edm.IEdmCollectionTypeReference,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Formatter.Value.IEdmEnumObject})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmEnumObjectCollection"/> class.
            </summary>
            <param name="edmType">The edm type of the collection.</param>
            <param name="list">The list that is wrapped by the new collection.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmEnumObjectCollection.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmTypeExtensions">
            <summary>
            Extension methods for the <see cref="T:Microsoft.OData.Edm.IEdmType"/> interface.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmTypeExtensions.IsDeltaResourceSet(Microsoft.OData.Edm.IEdmType)">
            <summary>
            Method to determine whether the current type is a Delta resource set.
            </summary>
            <param name="type">IEdmType to be compared</param>
            <returns>True or False if type is same as <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaCollectionType"/></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmTypeExtensions.IsDeltaResource(Microsoft.AspNetCore.OData.Formatter.Value.IEdmObject)">
            <summary>
            Method to determine whether the current Edm object is a Delta resource
            </summary>
            <param name="resource">IEdmObject to be compared</param>
            <returns>True or False if type is same as <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaResourceObject"/> or <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmDeltaComplexObject"/></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmStructuredObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmStructuredObject"/> with no backing CLR <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmStructuredObject.#ctor(Microsoft.OData.Edm.IEdmStructuredType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmStructuredObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> of this object.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmStructuredObject.#ctor(Microsoft.OData.Edm.IEdmStructuredTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmStructuredObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmStructuredTypeReference"/> of this object.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmStructuredObject.#ctor(Microsoft.OData.Edm.IEdmStructuredType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.EdmStructuredObject"/> class.
            </summary>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmStructuredTypeReference"/> of this object.</param>
            <param name="isNullable">true if this object can be nullable; otherwise, false.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmStructuredObject.Kind">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmStructuredObject.ExpectedEdmType">
            <summary>
            Gets or sets the expected <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> of the entity or complex type of this object.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmStructuredObject.ActualEdmType">
            <summary>
            Gets or sets the actual <see cref="T:Microsoft.OData.Edm.IEdmStructuredType" /> of the entity or complex type of this object.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.EdmStructuredObject.IsNullable">
            <summary>
            Gets or sets whether the EDM object is nullable or not.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmStructuredObject.Clear">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmStructuredObject.TrySetPropertyValue(System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmStructuredObject.TryGetPropertyValue(System.String,System.Object@)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmStructuredObject.TryGetPropertyType(System.String,System.Type@)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmStructuredObject.TryGetDynamicProperties">
            <summary>
            Get all dynamic properties
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmStructuredObject.GetChangedPropertyNames">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmStructuredObject.GetUnchangedPropertyNames">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.EdmStructuredObject.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmChangedObject">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmChangedObject"/>.
            Base interface to be implemented by any Delta object required to be part of the DeltaResourceSet Payload.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.IEdmChangedObject.Kind">
            <summary>
            DeltaKind for the objects part of the DeltaResourceSet Payload.
            Used to determine which Delta object to create during serialization.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmComplexObject">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.OData.Edm.IEdmComplexType"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmDeltaDeletedLink">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmChangedObject"/>.
            Holds the properties necessary to create the ODataDeltaDeletedLink.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmDeltaDeletedResourceObject">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmChangedObject"/>.
            Holds the properties necessary to create the ODataDeletedResource.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.IEdmDeltaDeletedResourceObject.Id">
            <summary>
            The id of the deleted entity (same as the odata.id returned or computed when calling GET on resource), which may be absolute or relative.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.IEdmDeltaDeletedResourceObject.Reason">
            <summary>
            Optional. Either deleted, if the entity was deleted (destroyed), or changed if the entity was removed from membership in the result (i.e., due to a data change).
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmDeltaLink">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmChangedObject"/>.
            Holds the properties necessary to create the ODataDeltaLink.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmDeltaLinkBase">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmChangedObject"/>.
            Holds the properties necessary to create either ODataDeltaLink or ODataDeltaDeletedLink.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.IEdmDeltaLinkBase.Source">
            <summary>
            The Uri of the entity from which the relationship is defined, which may be absolute or relative.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.IEdmDeltaLinkBase.Target">
            <summary>
            The Uri of the related entity, which may be absolute or relative.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.IEdmDeltaLinkBase.Relationship">
            <summary>
            The name of the relationship property on the parent object.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmEntityObject">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmEnumObject">
            <summary>
            Represents an instance of an enum value.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmObject">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.OData.Edm.IEdmType"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.IEdmObject.GetEdmType">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.IEdmTypeReference"/> of this instance.
            </summary>
            <returns>The <see cref="T:Microsoft.OData.Edm.IEdmTypeReference"/> of this instance.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmStructuredObject">
            <summary>
            Represents an instance of an <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.IEdmStructuredObject.TryGetPropertyValue(System.String,System.Object@)">
            <summary>
            Gets the value of the property with the given name.
            </summary>
            <param name="propertyName">The name of the property to get.</param>
            <param name="value">When this method returns, contains the value of the property with the given name, if the property is found;
            otherwise, null. The parameter is passed uninitialized.</param>
            <returns><c>true</c> if the instance contains the property with the given name; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.NullEdmComplexObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmComplexObject"/> that is null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.NullEdmComplexObject.#ctor(Microsoft.OData.Edm.IEdmComplexTypeReference)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.NullEdmComplexObject"/> class.
            </summary>
            <param name="edmType">The EDM type of this object.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.NullEdmComplexObject.TryGetPropertyValue(System.String,System.Object@)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.NullEdmComplexObject.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.TypedEdmComplexObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmComplexObject"/> backed by a CLR object with a one-to-one mapping.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.TypedEdmComplexObject.#ctor(System.Object,Microsoft.OData.Edm.IEdmComplexTypeReference,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.TypedEdmComplexObject"/> class.
            </summary>
            <param name="instance">The backing CLR instance.</param>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmComplexTypeReference"/> of this object.</param>
            <param name="edmModel">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.TypedEdmEntityObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmEntityObject"/> backed by a CLR object with a one-to-one mapping.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.TypedEdmEntityObject.#ctor(System.Object,Microsoft.OData.Edm.IEdmEntityTypeReference,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.TypedEdmEntityObject"/> class.
            </summary>
            <param name="instance">The backing CLR instance.</param>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmEntityTypeReference"/> of this object.</param>
            <param name="edmModel">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Value.TypedEdmStructuredObject">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.IEdmStructuredObject"/> backed by a CLR object with a one-to-one mapping.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.TypedEdmStructuredObject.#ctor(System.Object,Microsoft.OData.Edm.IEdmStructuredTypeReference,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Formatter.Value.TypedEdmStructuredObject"/> class.
            </summary>
            <param name="instance">The backing CLR instance.</param>
            <param name="edmType">The <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> of this object.</param>
            <param name="edmModel">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.TypedEdmStructuredObject.Instance">
            <summary>
            Gets the backing CLR object.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Value.TypedEdmStructuredObject.Model">
            <summary>
            Gets the EDM model.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.TypedEdmStructuredObject.GetEdmType">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Value.TypedEdmStructuredObject.TryGetPropertyValue(System.String,System.Object@)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataDeltaDeletedLinkWrapper">
            <summary>
            Encapsulates an <see cref="T:Microsoft.OData.ODataDeltaDeletedLink"/> deleted link.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataDeltaDeletedLinkWrapper.#ctor(Microsoft.OData.ODataDeltaDeletedLink)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataDeltaDeletedLinkWrapper"/>.
            </summary>
            <param name="deltaDeletedLink">The wrapped deleted link.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataDeltaDeletedLinkWrapper.DeltaDeletedLink">
            <summary>
            Gets the wrapped <see cref="T:Microsoft.OData.ODataDeltaDeletedLink"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataDeltaLinkBaseWrapper">
            <summary>
            Encapsulates an <see cref="T:Microsoft.OData.ODataDeltaLinkBase"/>
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataDeltaLinkWrapper">
            <summary>
            Encapsulates an <see cref="T:Microsoft.OData.ODataDeltaLink"/> added link.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataDeltaLinkWrapper.#ctor(Microsoft.OData.ODataDeltaLink)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataDeltaLinkWrapper"/>.
            </summary>
            <param name="deltaLink">The wrapped added link item.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataDeltaLinkWrapper.DeltaLink">
            <summary>
            Gets the wrapped <see cref="T:Microsoft.OData.ODataDeltaLink"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataDeltaResourceSetWrapper">
            <summary>
            Encapsulates an <see cref="T:Microsoft.OData.ODataDeltaResourceSet"/>.
            </summary>
            <remarks>
            The Delta resource set could have normal resource or the deleted resource.
            The Delta resource set could have delta link.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataDeltaResourceSetWrapper.#ctor(Microsoft.OData.ODataDeltaResourceSet)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataDeltaResourceSetWrapper"/>.
            </summary>
            <param name="deltaResourceSet">The wrapped delta resource set item.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataDeltaResourceSetWrapper.DeltaResourceSet">
            <summary>
            Gets the wrapped <see cref="T:Microsoft.OData.ODataDeltaResourceSet"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataDeltaResourceSetWrapper.DeltaItems">
            <summary>
            Gets the nested delta items (resource, or deleted resource, or deleted link, or added link).
            Be noted: the order of the delta items matters.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataEntityReferenceLinkWrapper">
            <summary>
            Encapsulates an <see cref="T:Microsoft.OData.ODataEntityReferenceLink"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataEntityReferenceLinkWrapper.#ctor(Microsoft.OData.ODataEntityReferenceLink)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataEntityReferenceLinkWrapper"/>.
            </summary>
            <param name="link">The wrapped entity reference item.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataEntityReferenceLinkWrapper.EntityReferenceLink">
            <summary>
            Gets the wrapped <see cref="T:Microsoft.OData.ODataEntityReferenceLink"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataItemWrapper">
            <summary>
            Base class for all classes that wrap an <see cref="T:Microsoft.OData.ODataItem"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataNestedResourceInfoWrapper">
            <summary>
            Encapsulates an <see cref="T:Microsoft.OData.ODataNestedResourceInfo"/> and the list of nested items.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataNestedResourceInfoWrapper.#ctor(Microsoft.OData.ODataNestedResourceInfo)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataNestedResourceInfoWrapper"/>.
            </summary>
            <param name="nestedInfo">The wrapped nested resource info item.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataNestedResourceInfoWrapper.NestedResourceInfo">
            <summary>
            Gets the wrapped <see cref="T:Microsoft.OData.ODataNestedResourceInfo"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataNestedResourceInfoWrapper.NestedItems">
            <summary>
            Gets the nested items that are part of this nested resource info.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataReaderExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.OData.ODataReader"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataReaderExtensions.ReadResourceOrResourceSet(Microsoft.OData.ODataReader)">
            <summary>
            Reads a <see cref="T:Microsoft.OData.ODataResource"/> or <see cref="T:Microsoft.OData.ODataResourceSet"/> object.
            </summary>
            <param name="reader">The OData reader to read from.</param>
            <returns>The read resource or resource set.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataReaderExtensions.ReadResourceOrResourceSetAsync(Microsoft.OData.ODataReader)">
            <summary>
            Reads a <see cref="T:Microsoft.OData.ODataResource"/> or <see cref="T:Microsoft.OData.ODataResourceSet"/> object.
            </summary>
            <param name="reader">The OData reader to read from.</param>
            <returns>The read resource or resource set.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataReaderExtensions.ReadODataItem(Microsoft.OData.ODataReader,System.Collections.Generic.Stack{Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataItemWrapper},Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataItemWrapper@)">
            <summary>
            Read OData item.
            </summary>
            <param name="reader">The odata reader.</param>
            <param name="itemsStack">The item stack.</param>
            <param name="topLevelItem">The top level item.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataReaderExtensions.ReadResource(Microsoft.OData.ODataReader,System.Collections.Generic.Stack{Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataItemWrapper},Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataItemWrapper@)">
            <summary>
            Read the normal resource.
            </summary>
            <param name="reader">The OData reader.</param>
            <param name="itemsStack">The item stack.</param>
            <param name="topLevelItem">the top level item.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataReaderExtensions.ReadDeletedResource(Microsoft.OData.ODataReader,System.Collections.Generic.Stack{Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataItemWrapper})">
            <summary>
            Read the deleted resource.
            </summary>
            <param name="reader">The OData reader.</param>
            <param name="itemsStack">The item stack.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataReaderExtensions.ReadResourceSet(Microsoft.OData.ODataReader,System.Collections.Generic.Stack{Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataItemWrapper},Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataItemWrapper@)">
            <summary>
            Read the resource set.
            </summary>
            <param name="reader">The OData reader.</param>
            <param name="itemsStack">The item stack.</param>
            <param name="topLevelItem">The top level item.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataReaderExtensions.ReadDeltaResourceSet(Microsoft.OData.ODataReader,System.Collections.Generic.Stack{Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataItemWrapper},Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataItemWrapper@)">
            <summary>
            Read the delta resource set.
            </summary>
            <param name="reader">The OData reader.</param>
            <param name="itemsStack">The item stack.</param>
            <param name="topLevelItem">The top level item.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceSetBaseWrapper">
            <summary>
            Encapsulates an <see cref="T:Microsoft.OData.ODataResourceSetBase"/> and the <see cref="T:Microsoft.OData.ODataResourceBase"/>'s that are part of it.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceSetWrapper">
            <summary>
            Encapsulates an <see cref="T:Microsoft.OData.ODataResourceSet"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceSetWrapper.#ctor(Microsoft.OData.ODataResourceSet)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceSetWrapper"/>.
            </summary>
            <param name="resourceSet">The wrapped resource set item.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceSetWrapper.ResourceSet">
            <summary>
            Gets the wrapped <see cref="T:Microsoft.OData.ODataResourceSet"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceSetWrapper.Resources">
            <summary>
            Gets the nested resources of this ResourceSet.
            Resource set only contains resources.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceWrapper">
            <summary>
            Encapsulates an <see cref="T:Microsoft.OData.ODataResource"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceWrapper.#ctor(Microsoft.OData.ODataResourceBase)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceWrapper"/>.
            </summary>
            <param name="resource">The wrapped resource item, it could be null.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceWrapper.Resource">
            <summary>
            Gets the wrapped <see cref="T:Microsoft.OData.ODataResource"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceWrapper.IsDeletedResource">
            <summary>
            Gets a boolean indicating whether the resource is deleted resource.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Formatter.Wrapper.ODataResourceWrapper.NestedResourceInfos">
            <summary>
            Gets the inner nested resource infos.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.ODataApplicationBuilderExtensions">
            <summary>
            Provides extension methods for <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> to add OData routes.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataApplicationBuilderExtensions.UseODataBatching(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Use OData batching middleware.
            </summary>
            <param name="app">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> to use.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataApplicationBuilderExtensions.UseODataQueryRequest(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Use OData query request middleware. An OData query request is a Http Post request ending with /$query.
            The Request body contains the query options.
            </summary>
            <param name="app">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> to use.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataApplicationBuilderExtensions.UseODataRouteDebug(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Use OData route debug middleware. You can send request "~/$odata" after enabling this middleware.
            </summary>
            <param name="app">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> to use.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataApplicationBuilderExtensions.UseODataRouteDebug(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String)">
            <summary>
            Use OData route debug middleware using the given route pattern.
            For example, if the given route pattern is "myrouteinfo", then you can send request "~/myrouteinfo" after enabling this middleware.
            Please use basic (literal) route pattern.
            </summary>
            <param name="app">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> to use.</param>
            <param name="routePattern">The given route pattern.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.ODataJsonOptionsSetup">
            <summary>
            Sets up default OData options for <see cref="T:Microsoft.AspNetCore.Mvc.JsonOptions"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataJsonOptionsSetup.Configure(Microsoft.AspNetCore.Mvc.JsonOptions)">
            <summary>
             Configure the default <see cref="T:Microsoft.AspNetCore.Mvc.JsonOptions"/>
            </summary>
            <param name="options">The Json Options.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.ODataMvcBuilderExtensions">
            <summary>
            Provides extension methods to add OData services based on <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataMvcBuilderExtensions.AddOData(Microsoft.Extensions.DependencyInjection.IMvcBuilder)">
            <summary>
            Adds essential OData services to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder" />.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder" /> to add services to.</param>
            <returns>A <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/> that can be used to further configure the OData services.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataMvcBuilderExtensions.AddOData(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.OData.ODataOptions})">
            <summary>
            Adds essential OData services to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder" />.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder" /> to add services to.</param>
            <param name="setupAction">The OData options to configure the services with,
            including access to a service provider which you can resolve services from.</param>
            <returns>A <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/> that can be used to further configure the OData services.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataMvcBuilderExtensions.AddOData(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.OData.ODataOptions,System.IServiceProvider})">
            <summary>
            Adds essential OData services to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder" />.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder" /> to add services to.</param>
            <param name="setupAction">The OData options to configure the services with,
            including access to a service provider which you can resolve services from.</param>
            <returns>A <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/> that can be used to further configure the OData services.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.ODataMvcCoreBuilderExtensions">
            <summary>
            Provides extension methods to add OData services based on <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataMvcCoreBuilderExtensions.AddOData(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)">
            <summary>
            Adds essential OData services to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder" />.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder" /> to add services to.</param>
            <returns>A <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/> that can be used to further configure the OData services.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataMvcCoreBuilderExtensions.AddOData(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.OData.ODataOptions})">
            <summary>
            Adds essential OData services to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder" />.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder" /> to add services to.</param>
            <param name="setupAction">The OData options to configure the services with,
            including access to a service provider which you can resolve services from.</param>
            <returns>A <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/> that can be used to further configure the OData services.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataMvcCoreBuilderExtensions.AddOData(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.OData.ODataOptions,System.IServiceProvider})">
            <summary>
            Adds essential OData services to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder" />.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder" /> to add services to.</param>
            <param name="setupAction">The OData options to configure the services with,
            including access to a service provider which you can resolve services from.</param>
            <returns>A <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/> that can be used to further configure the OData services.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.ODataMvcOptionsSetup">
            <summary>
            Sets up default OData options for <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataMvcOptionsSetup.Configure(Microsoft.AspNetCore.Mvc.MvcOptions)">
            <summary>
            Configure the default <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>
            </summary>
            <param name="options">The <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/> to configure.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.ODataOptions">
            <summary>
            Contains the detail configurations of a given OData request.
            </summary>
            <remarks>Caution: The properties in this class should not be <see langword="null"/>.</remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.ODataOptions.UrlKeyDelimiter">
            <summary>
            Gets or sets the <see cref="T:Microsoft.OData.ODataUrlKeyDelimiter"/> to use while parsing, specifically
            whether to recognize keys as segments or not.
            By default, it supports key as segment only if the key is single key.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.ODataOptions.EnableContinueOnErrorHeader">
            <summary>
            Gets or sets a value indicating if batch requests should continue on error.
            By default, it's false.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.ODataOptions.EnableAttributeRouting">
            <summary>
            Gets or sets a value indicating if attribute routing is enabled or not.
            Defaults to true.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.ODataOptions.TimeZone">
            <summary>
            Gets or sets a TimeZoneInfo for the <see cref="T:System.DateTime"/> serialization and deserialization.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.ODataOptions.Conventions">
            <summary>
            Gets the routing conventions.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.ODataOptions.RouteOptions">
            <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.OData.ODataOptions.RouteOptions"/> instance responsible for configuring the route template.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.ODataOptions.RouteComponents">
            <summary>
            Contains the OData <see cref="T:Microsoft.OData.Edm.IEdmModel"/> instances and dependency injection containers for specific routes.
            </summary>
            <remarks>DO NOT modify this dictionary yourself. Instead, use the 'AddRouteComponents()` methods for registering model instances.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataOptions.AddRouteComponents(Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Adds an <see cref="T:Microsoft.OData.Edm.IEdmModel"/> to the default route.
            </summary>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> to add.</param>
            <returns>The current <see cref="T:Microsoft.AspNetCore.OData.ODataOptions"/> instance to enable fluent configuration.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataOptions.AddRouteComponents(Microsoft.OData.Edm.IEdmModel,Microsoft.AspNetCore.OData.Batch.ODataBatchHandler)">
            <summary>
            Adds an <see cref="T:Microsoft.OData.Edm.IEdmModel"/>, as well as the given <see cref="T:Microsoft.AspNetCore.OData.Batch.ODataBatchHandler"/>, to the default route.
            </summary>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> to add.</param>
            <param name="batchHandler">The batch handler <see cref="T:Microsoft.AspNetCore.OData.Batch.ODataBatchHandler"/> to add.</param>
            <returns>The current <see cref="T:Microsoft.AspNetCore.OData.ODataOptions"/> instance to enable fluent configuration.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataOptions.AddRouteComponents(System.String,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Adds an <see cref="T:Microsoft.OData.Edm.IEdmModel"/> to the specified route.
            </summary>
            <param name="routePrefix">The model related prefix. It could be null which means there's no prefix when access this model.</param>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> to add.</param>
            <returns>The current <see cref="T:Microsoft.AspNetCore.OData.ODataOptions"/> instance to enable fluent configuration.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataOptions.AddRouteComponents(System.String,Microsoft.OData.Edm.IEdmModel,Microsoft.AspNetCore.OData.Batch.ODataBatchHandler)">
            <summary>
            Adds an <see cref="T:Microsoft.OData.Edm.IEdmModel"/>, as well as the given <see cref="T:Microsoft.AspNetCore.OData.Batch.ODataBatchHandler"/>, to the specified route.
            </summary>
            <param name="routePrefix">The model related prefix. It could be null which means there's no prefix when access this model.</param>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> to add.</param>
            <param name="batchHandler">The $batch handler <see cref="T:Microsoft.AspNetCore.OData.Batch.ODataBatchHandler"/>.</param>
            <returns>The current <see cref="T:Microsoft.AspNetCore.OData.ODataOptions"/> instance to enable fluent configuration.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataOptions.AddRouteComponents(System.String,Microsoft.OData.Edm.IEdmModel,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})">
            <summary>
            Adds an <see cref="T:Microsoft.OData.Edm.IEdmModel"/> using the service configuration.
            </summary>
            <param name="routePrefix">The model related prefix.</param>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> to add.</param>
            <param name="configureServices">The sub service configuration action.</param>
            <returns>The current <see cref="T:Microsoft.AspNetCore.OData.ODataOptions"/> instance to enable fluent configuration.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataOptions.GetRouteServices(System.String)">
            <summary>
            Get the root service provider for a given route (prefix) name.
            </summary>
            <param name="routePrefix">The route name (the route prefix name).</param>
            <returns>The root service provider for the route (prefix) name.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataOptions.EnableQueryFeatures(System.Nullable{System.Int32})">
            <summary>
            Enables all OData query features in one command.
            </summary>
            <param name="maxTopValue">
            The maximum value of $top that a client can request. Defaults to <see langword="null"/>, which does not set an upper limit.
            </param>
            <returns>The current <see cref="T:Microsoft.AspNetCore.OData.ODataOptions"/> instance to enable fluent configuration.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataOptions.Expand">
            <summary>
            Enable $expand query options.
            </summary>
            <returns>The current <see cref="T:Microsoft.AspNetCore.OData.ODataOptions"/> instance to enable fluent configuration.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataOptions.Select">
            <summary>
            Enable $select query options.
            </summary>
            <returns>The current <see cref="T:Microsoft.AspNetCore.OData.ODataOptions"/> instance to enable fluent configuration.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataOptions.Filter">
            <summary>
            Enable $filter query options.
            </summary>
            <returns>The current <see cref="T:Microsoft.AspNetCore.OData.ODataOptions"/> instance to enable fluent configuration.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataOptions.OrderBy">
            <summary>
            Enable $orderby query options.
            </summary>
            <returns>The current <see cref="T:Microsoft.AspNetCore.OData.ODataOptions"/> instance to enable fluent configuration.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataOptions.Count">
            <summary>
            Enable $count query options.
            </summary>
            <returns>The current <see cref="T:Microsoft.AspNetCore.OData.ODataOptions"/> instance to enable fluent configuration.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataOptions.SkipToken">
            <summary>
            Enable $skiptop query option.
            </summary>
            <returns>The current <see cref="T:Microsoft.AspNetCore.OData.ODataOptions"/> instance to enable fluent configuration.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataOptions.SetMaxTop(System.Nullable{System.Int32})">
             <summary>
            Sets the maximum value of $top that a client can request.
             </summary>
             <param name="maxTopValue">The maximum value of $top that a client can request.</param>
             <returns>The current <see cref="T:Microsoft.AspNetCore.OData.ODataOptions"/> instance to enable fluent configuration.</returns>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.ODataOptions.EnableNoDollarQueryOptions">
            <summary>
            Gets or sets whether or not the OData system query options should be prefixed with '$'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.ODataOptions.QuerySettings">
            <summary>
            Gets the query setting.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataOptions.BuildRouteContainer(Microsoft.OData.Edm.IEdmModel,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})">
            <summary>
            Build the container.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="setupAction">The setup config.</param>
            <returns>The built service provider.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataOptions.SanitizeRoutePrefix(System.String)">
            <summary>
            Sanitizes the route prefix by stripping leading and trailing forward slashes.
            </summary>
            <param name="routePrefix">Route prefix to sanitize.</param>
            <returns>Sanitized route prefix.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.ODataOptionsSetup">
            <summary>
            Sets up default options for <see cref="T:Microsoft.AspNetCore.OData.ODataOptions"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataOptionsSetup.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.AspNetCore.OData.Routing.Parser.IODataPathTemplateParser)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.ODataOptionsSetup" /> class.
            </summary>
            <param name="loggerFactory">The logger factory.</param>
            <param name="parser">The OData path template parser.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataOptionsSetup.Configure(Microsoft.AspNetCore.OData.ODataOptions)">
            <summary>
            Configure the default <see cref="T:Microsoft.AspNetCore.OData.ODataOptions"/>
            </summary>
            <param name="options">The OData options.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.ODataServiceCollectionExtensions">
            <summary>
            Provides extension methods to add OData services.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataServiceCollectionExtensions.AddODataQueryFilter(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Enables query support for actions with an <see cref="T:System.Linq.IQueryable" /> or <see cref="T:System.Linq.IQueryable`1" /> return
            type. To avoid processing unexpected or malicious queries, use the validation settings on
            <see cref="T:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute"/> to validate incoming queries. For more information, visit
            http://go.microsoft.com/fwlink/?LinkId=279712.
            </summary>
            <param name="services">The services collection.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> so that additional calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataServiceCollectionExtensions.AddODataQueryFilter(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.Filters.IActionFilter)">
            <summary>
            Enables query support for actions with an <see cref="T:System.Linq.IQueryable" /> or <see cref="T:System.Linq.IQueryable`1" /> return
            type. To avoid processing unexpected or malicious queries, use the validation settings on
            <see cref="T:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute"/> to validate incoming queries. For more information, visit
            http://go.microsoft.com/fwlink/?LinkId=279712.
            </summary>
            <param name="services">The services collection.</param>
            <param name="queryFilter">The action filter that executes the query.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> so that additional calls can be chained.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataServiceCollectionExtensions.AddODataCore(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the core OData services required for OData requests.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to add the services to.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> so that additional calls can be chained.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.ODataUriFunctions">
            <summary>
            OData UriFunctions helper.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataUriFunctions.AddCustomUriFunction(System.String,Microsoft.OData.UriParser.FunctionSignatureWithReturnType,System.Reflection.MethodInfo)">
            <summary>
            This is a shortcut of adding the custom FunctionSignature through 'CustomUriFunctions' class and
            binding the function name to it's MethodInfo through 'UriFunctionsBinder' class.
            See these classes documentations.
            In case of an exception, both operations(adding the signature and binding the function) will be undone.
            </summary>
            <param name="functionName">The uri function name that appears in the OData request uri.</param>
            <param name="functionSignature">The new custom function signature.</param>
            <param name="methodInfo">The MethodInfo to bind the given function name.</param>
            <exception cref="T:System.Exception">Any exception thrown by 'CustomUriFunctions.AddCustomUriFunction' and 'UriFunctionBinder.BindUriFunctionName' methods.</exception>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.ODataUriFunctions.RemoveCustomUriFunction(System.String,Microsoft.OData.UriParser.FunctionSignatureWithReturnType,System.Reflection.MethodInfo)">
            <summary>
            This is a shortcut of removing the FunctionSignature through 'CustomUriFunctions' class and
            unbinding the function name from it's MethodInfo through 'UriFunctionsBinder' class.
            See these classes documentations.
            </summary>
            <param name="functionName">The uri function name that appears in the OData request uri.</param>
            <param name="functionSignature">The new custom function signature.</param>
            <param name="methodInfo">The MethodInfo to bind the given function name.</param>
            <exception cref="T:System.Exception">Any exception thrown by 'CustomUriFunctions.RemoveCustomUriFunction' and 'UriFunctionsBinder.UnbindUriFunctionName' methods.</exception>
            <returns>'True' if the function signature has successfully removed and unbounded. 'False' otherwise.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.SRResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ActionContextMustHaveDescriptor">
            <summary>
              Looks up a localized string similar to The HttpActionContext.ActionDescriptor is null..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ActionDescriptorNotControllerActionDescriptor">
            <summary>
              Looks up a localized string similar to ActionDescriptor is not ControllerActionDescriptor..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ActionExecutedContextMustHaveRequest">
            <summary>
              Looks up a localized string similar to The HttpExecutedActionContext.Request is null..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ActionNotBoundToCollectionOfEntity">
            <summary>
              Looks up a localized string similar to The action &apos;{0}&apos; is not bound to the collection of entity. Only actions that are bound to entities can have action links..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ActionNotBoundToEntity">
            <summary>
              Looks up a localized string similar to The action &apos;{0}&apos; is not bound to an entity. Only actions that are bound to entities can have action links..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.AggregateKindNotSupported">
            <summary>
              Looks up a localized string similar to {0} type of aggregation is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.AggregationMethodNotSupported">
            <summary>
              Looks up a localized string similar to Aggregation method &apos;{0}&apos; is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.AggregationNotSupportedForType">
            <summary>
              Looks up a localized string similar to Aggregation &apos;{0}&apos; not supported for property &apos;{1}&apos; of type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.AmbiguousNavigationSourceNameFound">
            <summary>
              Looks up a localized string similar to Ambiguous navigation source (entity set or singleton) name &apos;{0}&apos; found. Please use correct navigation source name case..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.AmbiguousPropertyNameFound">
            <summary>
              Looks up a localized string similar to Ambiguous property name &apos;{0}&apos; found. Please use correct property name case..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.AmbiguousTypeNameFound">
            <summary>
              Looks up a localized string similar to Ambiguous type name &apos;{0}&apos; found. Please use correct type name case..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ApplyQueryOptionNotSupportedForLinq2SQL">
            <summary>
              Looks up a localized string similar to $apply query options not supported for LINQ to SQL providers..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ApplyToOnUntypedQueryOption">
            <summary>
              Looks up a localized string similar to The query option is not bound to any CLR type. &apos;{0}&apos; is only supported with a query option bound to a CLR type..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ArgumentMustBeGreaterThanOrEqualTo">
            <summary>
              Looks up a localized string similar to Value must be greater than or equal to {0}..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ArgumentMustBeLessThanOrEqualTo">
            <summary>
              Looks up a localized string similar to Value must be less than or equal to {0}..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ArgumentMustBeOfType">
            <summary>
              Looks up a localized string similar to The argument must be of type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ArgumentNullOrEmpty">
            <summary>
              Looks up a localized string similar to The argument &apos;{0}&apos; is null or empty..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.BatchRequestInvalidMediaType">
            <summary>
              Looks up a localized string similar to The batch request must have &apos;{0}&apos; or &apos;{1}&apos; as the media type..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.BatchRequestMissingBody">
            <summary>
              Looks up a localized string similar to The &apos;Body&apos; property on the batch request cannot be null..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.BatchRequestMissingBoundary">
            <summary>
              Looks up a localized string similar to The batch request must have a boundary specification in the &quot;Content-Type&quot; header..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.BatchRequestMissingContentType">
            <summary>
              Looks up a localized string similar to The batch request must have a &quot;Content-Type&quot; header..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.BinaryOperatorNotSupported">
            <summary>
              Looks up a localized string similar to A binary operator with incompatible types was detected. Found operand types &apos;{0}&apos; and &apos;{1}&apos; for operator kind &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.CannotAddToNullCollection">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos; on type &apos;{1}&apos; returned a null value. The input stream contains collection items which cannot be added if the instance is null..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.CannotApplyETagOfT">
            <summary>
              Looks up a localized string similar to Cannot apply {0} of &apos;{1}&apos; to {2} of &apos;{3}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.CannotApplyODataQueryOptionsOfT">
            <summary>
              Looks up a localized string similar to Cannot apply {0} of &apos;{1}&apos; to {2} of &apos;{3}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.CannotCastFilter">
            <summary>
              Looks up a localized string similar to Cannot cast $filter of type &apos;{0}&apos; to type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.CannotDeserializeUnknownProperty">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos; does not exist on type &apos;{1}&apos;. Make sure to only use property names that are defined by the type..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.CannotFindKeyInEntityType">
            <summary>
              Looks up a localized string similar to Cannot find key &apos;{0}&apos; in the &apos;{1}&apos; type..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.CannotFindParameterInOperation">
            <summary>
              Looks up a localized string similar to Cannot find parameter &apos;{0}&apos; is in the operation &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.CannotGetEnumClrMember">
            <summary>
              Looks up a localized string similar to Cannot Get the Enum Clr member using &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.CannotInstantiateAbstractResourceType">
            <summary>
              Looks up a localized string similar to An instance of the abstract resource type &apos;{0}&apos; was found. Abstract resource types cannot be instantiated..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.CannotParseQueryRequestPayload">
            <summary>
              Looks up a localized string similar to Unable to parse query request payload..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.CannotPatchNavigationProperties">
            <summary>
              Looks up a localized string similar to Cannot apply PATCH to navigation property &apos;{0}&apos; on entity type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.CannotProcessPrefixTemplate">
            <summary>
              Looks up a localized string similar to Cannot process the prefix &apos;{0}&apos; template..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.CannotSerializerNull">
            <summary>
              Looks up a localized string similar to Cannot serialize a null &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.CannotSetDynamicPropertyDictionary">
            <summary>
              Looks up a localized string similar to The dynamic dictionary property &apos;{0}&apos; of type &apos;{1}&apos; cannot be set. The dynamic property dictionary must have a setter..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.CannotWriteType">
            <summary>
              Looks up a localized string similar to {0} cannot write an object of type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ClrTypeNotInModel">
            <summary>
              Looks up a localized string similar to The given model does not contain the type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.CollectionParameterShouldHaveAddMethod">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; of the parameter &apos;{1}&apos; does not have an Add method. Consider using a collection type that does have an Add method - for example IList&lt;T&gt; or ICollection&lt;T&gt;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.CollectionShouldHaveAddMethod">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; of the property &apos;{1}&apos; on type &apos;{2}&apos; does not have an Add method. Consider using a collection type that does have an Add method - for example IList&lt;T&gt; or ICollection&lt;T&gt;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.CollectionShouldHaveClearMethod">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; of the property &apos;{1}&apos; on type &apos;{2}&apos; does not have a Clear method. Consider using a collection type that does have a Clear method, such as IList&lt;T&gt; or ICollection&lt;T&gt;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ConvertToEnumFailed">
            <summary>
              Looks up a localized string similar to Cannot compare an enum of type &apos;{0}&apos; to an expression of type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.CreateODataValueNotSupported">
            <summary>
              Looks up a localized string similar to {0} does not support CreateODataValue..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.CustomQueryOptionNotSupportedWithDollarSign">
            <summary>
              Looks up a localized string similar to Custom query option &apos;{0}&apos; that starts with &apos;$&apos; is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.DeltaEntityTypeNotAssignable">
            <summary>
              Looks up a localized string similar to The actual entity type &apos;{0}&apos; is not assignable to the expected type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.DeltaNestedResourceNameNotFound">
            <summary>
              Looks up a localized string similar to Cannot find nested resource name &apos;{0}&apos; in parent resource type &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.DeltaTypeMismatch">
            <summary>
              Looks up a localized string similar to Cannot use Delta of type &apos;{0}&apos; on an entity of type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.DeserializerDoesNotSupportRead">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; does not support Read..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.DoesNotSupportReadInLine">
            <summary>
              Looks up a localized string similar to Type &apos;{0}&apos; does not support ReadInline..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.DuplicateDynamicPropertyNameFound">
            <summary>
              Looks up a localized string similar to Duplicate dynamic property name &apos;{0}&apos; found in open type &apos;{1}&apos;. Each dynamic property name must be unique..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.DynamicPropertyCannotBeSerialized">
            <summary>
              Looks up a localized string similar to The dynamic property &apos;{0}&apos; with Edm type &apos;{1}&apos; cannot be serialized..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.DynamicPropertyNameAlreadyUsedAsDeclaredPropertyName">
            <summary>
              Looks up a localized string similar to The name of dynamic property &apos;{0}&apos; was already used as the declared property name of open type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.DynamicResourceSetTypeNameIsRequired">
            <summary>
              Looks up a localized string similar to The type name of the dynamic resource set &apos;{0}&apos; is required and cannot be empty. Consider using a OData type annotation explicitly..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.EditLinkNullForLocationHeader">
            <summary>
              Looks up a localized string similar to The edit link builder for the entity set &apos;{0}&apos; returned null. An edit link is required for the location header..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.EdmComplexObjectNullRef">
            <summary>
              Looks up a localized string similar to Cannot get property &apos;{0}&apos; of a null EDM object of type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.EdmObjectNull">
            <summary>
              Looks up a localized string similar to The property &apos;EdmObject&apos; of {0} cannot be null..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.EdmTypeCannotBeNull">
            <summary>
              Looks up a localized string similar to The EDM type of the object of type &apos;{0}&apos; is null. The EDM type of an &apos;{1}&apos; cannot be null..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.EdmTypeNotSupported">
            <summary>
              Looks up a localized string similar to {0} is not a supported EDM type..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ElementClrTypeNull">
            <summary>
              Looks up a localized string similar to The property &apos;ElementClrType&apos; of {0} cannot be null..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.EmptyKeyTemplate">
            <summary>
              Looks up a localized string similar to Key template value &apos;{0}&apos; for key segment &apos;{1}&apos; is empty..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.EmptyParameterAlias">
            <summary>
              Looks up a localized string similar to Parameter alias &apos;{0}&apos; in segment &apos;{1}&apos; is empty..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.EmptyPathTemplate">
            <summary>
              Looks up a localized string similar to The route template in path template &apos;{0}&apos; is empty..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.EntityReferenceMustHasKeySegment">
            <summary>
              Looks up a localized string similar to The Uri &apos;{0}&apos; in the parameter is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.EntitySetMissingDuringSerialization">
            <summary>
              Looks up a localized string similar to The related entity set could not be found from the OData path. The related entity set is required to serialize the payload..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.EntityTypeMismatch">
            <summary>
              Looks up a localized string similar to The entity type &apos;{0}&apos; does not match the expected entity type &apos;{1}&apos; as set on the query context..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ErrorTypeMustBeODataErrorOrHttpError">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; is not supported by the ODataErrorSerializer. The type must be ODataError or HttpError..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ETagNotWellFormed">
            <summary>
              Looks up a localized string similar to The ETag is not well-formed..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ExpandFilterExpressionNotLambdaExpression">
            <summary>
              Looks up a localized string similar to $filter in $expand of reference navigation property &apos;{0}&apos; is not expected type &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ExpressionLexer_UnbalancedBracketExpression">
            <summary>
              Looks up a localized string similar to Found an unbalanced bracket &apos;{0}&apos; and &apos;{1}&apos; expression..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ExpressionLexerSyntaxError">
            <summary>
              Looks up a localized string similar to Syntax error at position {0} in &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ExpressionLexerUnterminatedStringLiteral">
            <summary>
              Looks up a localized string similar to There is an unterminated string literal at position {0} in &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.FailedToBuildEdmModelBecauseReturnTypeIsNull">
            <summary>
              Looks up a localized string similar to Cannot create an EDM model as the action &apos;{0}&apos; on controller &apos;{1}&apos; has a void return type..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.FailedToRetrieveTypeToBuildEdmModel">
            <summary>
              Looks up a localized string similar to Cannot create an EDM model as the action &apos;{0}&apos; on controller &apos;{1}&apos; has a return type &apos;{2}&apos; that does not implement IEnumerable&lt;T&gt;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.FormatterReadIsNotSupportedForType">
            <summary>
              Looks up a localized string similar to Reading type &apos;{0}&apos; is not supported by &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.FunctionNotBoundToCollectionOfEntity">
            <summary>
              Looks up a localized string similar to The function &apos;{0}&apos; is not bound to the collection of entity. Only functions that are bound to entities can have function links..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.FunctionNotBoundToEntity">
            <summary>
              Looks up a localized string similar to The function &apos;{0}&apos; is not bound to an entity. Only functions that are bound to entities can have function links..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.FunctionNotSupportedOnEnum">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; function cannot be applied to an enumeration-typed argument..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.GetOnlyCollectionCannotBeArray">
            <summary>
              Looks up a localized string similar to The value of the property &apos;{0}&apos; on type &apos;{1}&apos; is an array. Consider adding a setter for the property..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.IdLinkNullForEntityIdHeader">
            <summary>
              Looks up a localized string similar to The Id link builder for the entity set &apos;{0}&apos; returned null. An Id link is required for the OData-EntityId header..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.InfiniteParameterAlias">
            <summary>
              Looks up a localized string similar to The parameter alias &apos;{0}&apos; is in an infinite loop..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.InputCastTypeKindNotMatch">
            <summary>
              Looks up a localized string similar to The input cast type &apos;{0}&apos; does not match the expected type kind &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.InputKeyNotMatchEntityTypeKey">
            <summary>
              Looks up a localized string similar to The input key count &apos;{0}&apos; does not match the number &apos;{1}&apos; of the key of entity type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.InvalidAttributeRoutingTemplateSegment">
            <summary>
              Looks up a localized string similar to The attribute routing template contains invalid segment &apos;{0}&apos;. The template string does not start with &apos;{{&apos; or ends with &apos;}}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.InvalidBatchReaderState">
            <summary>
              Looks up a localized string similar to The current batch reader state &apos;{0}&apos; is invalid. The expected state is &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.InvalidExpansionDepthValue">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; should be less than or equal to &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.InvalidKeyInUriFound">
            <summary>
              Looks up a localized string similar to The key value ({0}) from request is not valid. The key value should be format of type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.InvalidLastSegmentInSelectExpandPath">
            <summary>
              Looks up a localized string similar to The last segment &apos;{0}&apos; of the select or expand query option is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.InvalidODataRouteOnAction">
            <summary>
              Looks up a localized string similar to The path template &apos;{0}&apos; on the action &apos;{1}&apos; in controller &apos;{2}&apos; is not a valid OData path template. {3}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.InvalidODataUntypedValue">
            <summary>
              Looks up a localized string similar to The given untyped value &apos;{0}&apos; in payload is invalid. Consider using a OData type annotation explicitly..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.InvalidParameterValueInUriFound">
            <summary>
              Looks up a localized string similar to The parameter value ({0}) from request is not valid. The parameter value should be format of type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.InvalidPropertyMapper">
            <summary>
              Looks up a localized string similar to The mapper provider must return a valid &apos;{0}&apos; instance for the given &apos;{1}&apos; IEdmType..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.InvalidPropertyMapping">
            <summary>
              Looks up a localized string similar to The key mapping for the property &apos;{0}&apos; can&apos;t be null or empty..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.InvalidSegmentInSelectExpandPath">
            <summary>
              Looks up a localized string similar to A segment &apos;{0}&apos; within the select or expand query option is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.InvalidTemplateLiteral">
            <summary>
              Looks up a localized string similar to The template string &apos;{0}&apos; of &apos;{1}&apos; is not a valid template literal. And a template literal should wrapper with &apos;{&apos; and &apos;}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.JsonConverterDoesnotSupportRead">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is internal and should never be deserialized into..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.KeyTemplateMustBeInCurlyBraces">
            <summary>
              Looks up a localized string similar to Key template value &apos;{0}&apos; for key segment &apos;{1}&apos; does not start with &apos;{{&apos; or ends with &apos;}}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.KeyValueCannotBeNull">
            <summary>
              Looks up a localized string similar to Key property &apos;{0}&apos; of type &apos;{1}&apos; is null. Key properties cannot have null values..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.MappingDoesNotContainResourceType">
            <summary>
              Looks up a localized string similar to The provided mapping does not contain a resource for the resource type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.MaxAnyAllExpressionLimitExceeded">
            <summary>
              Looks up a localized string similar to The Any/All nesting limit of &apos;{0}&apos; has been exceeded. &apos;{1}&apos; can be configured on ODataQuerySettings or EnableQueryAttribute..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.MaxExpandDepthExceeded">
            <summary>
              Looks up a localized string similar to The request includes a $expand path which is too deep. The maximum depth allowed is {0}. To increase the limit, set the &apos;{1}&apos; property on EnableQueryAttribute or ODataValidationSettings, or set the &apos;MaxDepth&apos; property in ExpandAttribute..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.MaxNodeLimitExceeded">
            <summary>
              Looks up a localized string similar to The node count limit of &apos;{0}&apos; has been exceeded. To increase the limit, set the &apos;{1}&apos; property on EnableQueryAttribute or ODataValidationSettings..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.MissingNonODataContainer">
            <summary>
              Looks up a localized string similar to Cannot find the services container for the non-OData route. This can occur when using OData components on the non-OData route and is usually a configuration issue. Call EnableDependencyInjection() to enable OData components on non-OData routes. This may also occur when a request was mistakenly handled by the ASP.NET Core routing layer instead of the OData routing layer, for instance the URL does not include the OData route prefix configured via a call to MapODataServiceRoute()..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.MissingODataContainer">
            <summary>
              Looks up a localized string similar to Cannot find the services container for route &apos;{0}&apos;. This should not happen and represents a bug..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.MissingODataServices">
            <summary>
              Looks up a localized string similar to Cannot find &apos;{0}&apos;. The OData services have not been configured. Are you missing a call to AddOData()?.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.MissingParameterAlias">
            <summary>
              Looks up a localized string similar to Missing the parameter alias &apos;{0}&apos; in the request query string..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.MissingRequiredParameterInOperation">
            <summary>
              Looks up a localized string similar to Missing the required parameter &apos;{0}&apos; is in the operation &apos;{1}&apos; parameter mapping..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ModelBinderUtil_ModelMetadataCannotBeNull">
            <summary>
              Looks up a localized string similar to The binding context cannot have a null ModelMetadata..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ModelBinderUtil_ValueCannotBeEnum">
            <summary>
              Looks up a localized string similar to The binding value &apos;{0}&apos; cannot be bound to the enum type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ModelBindingContextMustHaveRequest">
            <summary>
              Looks up a localized string similar to The model binding context requires an attached request in order to model binding..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ModelMissingFromReadContext">
            <summary>
              Looks up a localized string similar to The EDM model is missing on the read context. The model is required on the read context to deserialize the payload..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ModelPrefixAlreadyUsed">
            <summary>
              Looks up a localized string similar to The prefix &apos;{0}&apos; was already used for other Edm model..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.MultipleActionImportFound">
            <summary>
              Looks up a localized string similar to Found multiple action imports with same &apos;{0}&apos; name within an entity container...
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.MultipleMatchingClrTypesForEdmType">
            <summary>
              Looks up a localized string similar to More than one matching CLR type found for the EDM type {0}.\nThe matching CLR types are {1}..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.MultipleSingleLiteralNotAllowed">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a valid expression.Single literal is only for single key. Multiple keys should use key=value..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.NavigationSourceMissingDuringDeserialization">
            <summary>
              Looks up a localized string similar to The related entity set or singleton cannot be found from the OData path. The related entity set or singleton is required to deserialize the payload..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.NavigationSourceMissingDuringSerialization">
            <summary>
              Looks up a localized string similar to The related entity set or singleton cannot be found from the OData path. The related entity set or singleton is required to serialize the payload..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.NestedCollectionsNotSupported">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; is a nested collection type. Nested collection types are not allowed..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.NestedPropertyNotfound">
            <summary>
              Looks up a localized string similar to Cannot find nested property &apos;{0}&apos; on the resource type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.NonSelectExpandOnSingleEntity">
            <summary>
              Looks up a localized string similar to The requested resource is not a collection. Query options $filter, $orderby, $count, $skip, and $top can be applied only on collections..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.NotAllowedArithmeticOperator">
            <summary>
              Looks up a localized string similar to Arithmetic operator &apos;{0}&apos; is not allowed. To allow it, set the &apos;{1}&apos; property on EnableQueryAttribute or QueryValidationSettings..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.NotAllowedFunction">
            <summary>
              Looks up a localized string similar to Function &apos;{0}&apos; is not allowed. To allow it, set the &apos;{1}&apos; property on EnableQueryAttribute or QueryValidationSettings..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.NotAllowedLogicalOperator">
            <summary>
              Looks up a localized string similar to Logical operator &apos;{0}&apos; is not allowed. To allow it, set the &apos;{1}&apos; property on EnableQueryAttribute or QueryValidationSettings..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.NotAllowedOrderByProperty">
            <summary>
              Looks up a localized string similar to Order by &apos;{0}&apos; is not allowed. To allow it, set the &apos;{1}&apos; property on EnableQueryAttribute or QueryValidationSettings..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.NotAllowedQueryOption">
            <summary>
              Looks up a localized string similar to Query option &apos;{0}&apos; is not allowed. To allow it, set the &apos;{1}&apos; property on EnableQueryAttribute or QueryValidationSettings..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.NotCountableEntitySetUsedForCount">
            <summary>
              Looks up a localized string similar to The entity set &apos;{0}&apos; cannot be used for $count..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.NotCountablePropertyUsedForCount">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos; cannot be used for $count..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.NotExpandablePropertyUsedInExpand">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos; cannot be used in the $expand query option..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.NotFilterablePropertyUsedInFilter">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos; cannot be used in the $filter query option..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.NotNavigablePropertyUsedInNavigation">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos; cannot be used for navigation..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.NotSelectablePropertyUsedInSelect">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos; cannot be used in the $select query option..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.NotSortablePropertyUsedInOrderBy">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos; cannot be used in the $orderby query option..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.NotSupportedTransformationKind">
            <summary>
              Looks up a localized string similar to Transformation kind {0} is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.NullContainer">
            <summary>
              Looks up a localized string similar to The container built by the container builder must not be null..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.NullContainerBuilder">
            <summary>
              Looks up a localized string similar to The container builder created by the container builder factory must not be null..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.NullElementInCollection">
            <summary>
              Looks up a localized string similar to Collections cannot contain null elements..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ODataFunctionNotSupported">
            <summary>
              Looks up a localized string similar to Unknown function &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ODataPathMissing">
            <summary>
              Looks up a localized string similar to The operation cannot be completed because no ODataPath is available for the request..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.OnlySingleValueNodeSupported">
            <summary>
              Looks up a localized string similar to Only SingleValueNode supported..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.OperationIsNotBound">
            <summary>
              Looks up a localized string similar to The input operation &apos;{0}&apos; is not a bound &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.OperationMustBeUniqueInEntitySetContainer">
            <summary>
              Looks up a localized string similar to Action import and function import &apos;{0}&apos; MUST be unique within an entity container..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.OrderByClauseNotSupported">
            <summary>
              Looks up a localized string similar to Only ordering by properties is supported for non-primitive collections. Expressions are not supported..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.OrderByDuplicateIt">
            <summary>
              Looks up a localized string similar to Multiple &apos;$it&apos; nodes are not supported in &apos;$orderby&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.OrderByDuplicateProperty">
            <summary>
              Looks up a localized string similar to Duplicate property named &apos;{0}&apos; is not supported in &apos;$orderby&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.OrderByNodeCountExceeded">
            <summary>
              Looks up a localized string similar to The number of clauses in $orderby query option exceeded the maximum number allowed. The maximum number of $orderby clauses allowed is {0}..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ParameterTemplateMustBeInCurlyBraces">
            <summary>
              Looks up a localized string similar to Parameter template &apos;{0}&apos; in segment &apos;{1}&apos; does not start with &apos;{{&apos; or ends with &apos;}}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ParameterTypeIsNotCollection">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; of the parameter &apos;{1}&apos; must be a collection..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.PropertyCannotBeConverted">
            <summary>
              Looks up a localized string similar to The value cannot be converted to type {0}..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.PropertyIsNotCollection">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; of the property &apos;{1}&apos; on type &apos;{2}&apos; must be a collection..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.PropertyMustBeBoolean">
            <summary>
              Looks up a localized string similar to The value must be a boolean..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.PropertyMustBeDateTimeOffsetOrDate">
            <summary>
              Looks up a localized string similar to The value must be a DateTimeOffset or Date..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.PropertyMustBeEnum">
            <summary>
              Looks up a localized string similar to The value with type &apos;{0}&apos; must have type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.PropertyMustBeString">
            <summary>
              Looks up a localized string similar to The value must be a string..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.PropertyMustBeStringLengthOne">
            <summary>
              Looks up a localized string similar to The value must be a string with a length of 1..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.PropertyMustBeStringMaxLengthOne">
            <summary>
              Looks up a localized string similar to The value must be a string with a maximum length of 1..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.PropertyMustBeTimeOfDay">
            <summary>
              Looks up a localized string similar to The value must be a Edm.TimeOfDay..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.PropertyMustHavePublicGetterAndSetter">
            <summary>
              Looks up a localized string similar to The PropertyInfo provided must have public &apos;get&apos; and &apos;set&apos; accessor methods..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.PropertyNotFound">
            <summary>
              Looks up a localized string similar to The EDM instance of type &apos;{0}&apos; is missing the property &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.PropertyNotFoundOnPathExpression">
            <summary>
              Looks up a localized string similar to Can not resolve the property using property path &apos;{0}&apos; from type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.PropertyOrPathWasRemovedFromContext">
            <summary>
              Looks up a localized string similar to Property or path {0} is not available in the current context. It was removed in earlier transformation..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.PropertyTypeOverflow">
            <summary>
              Looks up a localized string similar to The value has a value that is out of range of type {0}..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.PropertyUnrecognizedFormat">
            <summary>
              Looks up a localized string similar to The value has a format that is not recognized by type {0}..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.QueryCannotBeEmpty">
            <summary>
              Looks up a localized string similar to The value for OData query &apos;{0}&apos; cannot be empty..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.QueryGetModelMustNotReturnNull">
            <summary>
              Looks up a localized string similar to A model is required for querying. Consider implementing the EnableQueryAttribute.GetModel method never to return a null value..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.QueryNodeBindingNotSupported">
            <summary>
              Looks up a localized string similar to Binding OData QueryNode of kind &apos;{0}&apos; is not supported by &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.QueryNodeValidationNotSupported">
            <summary>
              Looks up a localized string similar to Validating OData QueryNode of kind {0} is not supported by {1}..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.QueryParameterNotSupported">
            <summary>
              Looks up a localized string similar to The query parameter &apos;{0}&apos; is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ReadFromStreamAsyncMustHaveRequest">
            <summary>
              Looks up a localized string similar to The OData formatter requires an attached request in order to deserialize..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ReferenceNavigationPropertyExpandFilterVisitorUnexpectedParameter">
            <summary>
              Looks up a localized string similar to Found unexpected parameter &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.RequestMustHaveModel">
            <summary>
              Looks up a localized string similar to The request must have an associated EDM model. Consider registering Edm model calling AddOData()..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.RequestNotActionInvocation">
            <summary>
              Looks up a localized string similar to The last segment of the request URI &apos;{0}&apos; was not recognized as an OData action..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.RequiredParametersNotSubsetOfFunctionParameters">
            <summary>
              Looks up a localized string similar to The input parameters &apos;{0}&apos; is not subset of function parameters &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ResourceTypeNotInModel">
            <summary>
              Looks up a localized string similar to Cannot find the resource type &apos;{0}&apos; in the model..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.RootElementNameMissing">
            <summary>
              Looks up a localized string similar to The &apos;RootElementName&apos; property is required on &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.RouteOptionDisabledKeySegment">
            <summary>
              Looks up a localized string similar to The route option disables key in parenthesis and key as segment. At least one option should enable..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.RouteOptionDisabledOperationSegment">
            <summary>
              Looks up a localized string similar to The route option disables qualified and unqualified operation call. At least one option should enable..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.RouteServicesAlreadyExist">
            <summary>
              Looks up a localized string similar to A dependency injection container for this request already exists..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.SegmentShouldBeKind">
            <summary>
              Looks up a localized string similar to The input segment should be &apos;{0}&apos; in &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.SelectExpandEmptyOrNull">
            <summary>
              Looks up a localized string similar to &apos;select&apos; and &apos;expand&apos; cannot be both null or empty..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.SelectionTypeNotSupported">
            <summary>
              Looks up a localized string similar to $select does not support selections of type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.SelectNonStructured">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; is not a structured type. Only structured types support $select and $expand..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ShouldHaveNavigationPropertyInNavigationExpandPath">
            <summary>
              Looks up a localized string similar to A navigation property expand path should have navigation property in the path..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.SingleResultHasMoreThanOneEntity">
            <summary>
              Looks up a localized string similar to The action &apos;{0}&apos; on controller &apos;{1}&apos; returned a {2} containing more than one element. {2} must have zero or one elements..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.SkipTokenParseError">
            <summary>
              Looks up a localized string similar to Unable to parse the skiptoken value &apos;{0}&apos;. Skiptoken value should always be server generated..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.SkipTopLimitExceeded">
            <summary>
              Looks up a localized string similar to The limit of &apos;{0}&apos; for {1} query has been exceeded. The value from the incoming request is &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.TargetKindNotImplemented">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; of kind &apos;{1}&apos; is not implemented..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.TypeCannotBeDeserialized">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; cannot be deserialized using the OData input formatter..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.TypeCannotBeSerialized">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; cannot be serialized using the OData output formatter..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.TypeMustBeEntity">
            <summary>
              Looks up a localized string similar to {0} is not an entity type. Only entity types are supported..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.TypeMustBeEnumOrNullableEnum">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; must be an enum or Nullable&lt;T&gt; where T is an enum type..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.TypeMustBeRelated">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; does not inherit from and is not a base type of &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.TypeMustBeResourceSet">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a resource set type. Only resource set are supported..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.TypeOfDynamicPropertyNotSupported">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; of dynamic property &apos;{1}&apos; is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.UnableToDetermineBaseUrl">
            <summary>
              Looks up a localized string similar to The OData formatter was unable to determine the base URI for the request. The request must be processed by an OData route for the OData formatter to serialize the response..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.UnableToDetermineMetadataUrl">
            <summary>
              Looks up a localized string similar to The OData formatter must be able to determine the metadata URL for a request in order to serialize the response..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.UnaryNodeValidationNotSupported">
            <summary>
              Looks up a localized string similar to Validating OData UnaryOperatorNode of kind {0} is not supported by {1}..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.UnexpectedElementType">
            <summary>
              Looks up a localized string similar to The element type &apos;{0}&apos; of the given collection type &apos;{1}&apos; is not of the type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.UnsupportedEdmType">
            <summary>
              Looks up a localized string similar to The EDM type &apos;{0}&apos; of kind &apos;{1}&apos; is not supported..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.UnsupportedEdmTypeKind">
            <summary>
              Looks up a localized string similar to Found unsupported EdmTypeKind &apos;{0}&apos; in list of available types..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.UriFunctionClrBinderAlreadyBound">
            <summary>
              Looks up a localized string similar to The function &apos;{0}&apos; is already bound to another method..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.UriQueryStringInvalid">
            <summary>
              Looks up a localized string similar to The query specified in the URI is not valid. {0}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.ValueIsInvalid">
            <summary>
              Looks up a localized string similar to The value &apos;{0}&apos; is invalid. {1}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.WriteObjectInlineNotSupported">
            <summary>
              Looks up a localized string similar to {0} does not support WriteObjectInline..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.WriteObjectNotSupported">
            <summary>
              Looks up a localized string similar to {0} does not support WriteObject..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.SRResources.WriteToResponseAsyncMustHaveRequest">
            <summary>
              Looks up a localized string similar to The OData formatter requires an attached request in order to serialize..
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.AllowedArithmeticOperators">
            <summary>
            Arithmetic operators to allow for querying using $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedArithmeticOperators.None">
            <summary>
            A value that corresponds to allowing no arithmetic operators in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedArithmeticOperators.Add">
            <summary>
            A value that corresponds to allowing 'Add' arithmetic operator in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedArithmeticOperators.Subtract">
            <summary>
            A value that corresponds to allowing 'Subtract' arithmetic operator in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedArithmeticOperators.Multiply">
            <summary>
            A value that corresponds to allowing 'Multiply' arithmetic operator in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedArithmeticOperators.Divide">
            <summary>
            A value that corresponds to allowing 'Divide' arithmetic operator in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedArithmeticOperators.Modulo">
            <summary>
            A value that corresponds to allowing 'Modulo' arithmetic operator in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedArithmeticOperators.All">
            <summary>
            A value that corresponds to allowing all arithmetic operators in $filter.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.AllowedFunctions">
            <summary>
            Functions to allow for querying using $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.None">
            <summary>
            A value that corresponds to allowing no functions in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.StartsWith">
            <summary>
            A value that corresponds to allowing 'StartsWith' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.EndsWith">
            <summary>
            A value that corresponds to allowing 'EndsWith' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.Contains">
            <summary>
            A value that corresponds to allowing 'Contains' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.Length">
            <summary>
            A value that corresponds to allowing 'Length' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.IndexOf">
            <summary>
            A value that corresponds to allowing 'IndexOf' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.Concat">
            <summary>
            A value that corresponds to allowing 'Concat' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.Substring">
            <summary>
            A value that corresponds to allowing 'Substring' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.ToLower">
            <summary>
            A value that corresponds to allowing 'ToLower' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.ToUpper">
            <summary>
            A value that corresponds to allowing 'ToUpper' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.Trim">
            <summary>
            A value that corresponds to allowing 'Trim' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.Cast">
            <summary>
            A value that corresponds to allowing 'Cast' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.Year">
            <summary>
            A value that corresponds to allowing 'Year' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.Date">
            <summary>
            A value that corresponds to allowing 'Date' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.Month">
            <summary>
            A value that corresponds to allowing 'Month' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.Time">
            <summary>
            A value that corresponds to allowing 'Time' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.Day">
            <summary>
            A value that corresponds to allowing 'Day' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.Hour">
            <summary>
            A value that corresponds to allowing 'Hour' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.Minute">
            <summary>
            A value that corresponds to allowing 'Minute' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.Second">
            <summary>
            A value that corresponds to allowing 'Second' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.FractionalSeconds">
            <summary>
            A value that corresponds to allowing 'Fractionalseconds' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.Round">
            <summary>
            A value that corresponds to allowing 'Round' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.Floor">
            <summary>
            A value that corresponds to allowing 'Floor' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.Ceiling">
            <summary>
            A value that corresponds to allowing 'Ceiling' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.IsOf">
            <summary>
            A value that corresponds to allowing 'IsOf' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.Any">
            <summary>
            A value that corresponds to allowing 'Any' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.All">
            <summary>
            A value that corresponds to allowing 'All' function in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.AllStringFunctions">
            <summary>
            A value that corresponds to allowing all string related functions in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.AllDateTimeFunctions">
            <summary>
            A value that corresponds to allowing all datetime related functions in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.AllMathFunctions">
            <summary>
            A value that corresponds to allowing math related functions in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedFunctions.AllFunctions">
            <summary>
            A value that corresponds to allowing all functions in $filter.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.AllowedLogicalOperators">
            <summary>
            Logical operators to allow for querying using $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedLogicalOperators.None">
            <summary>
            A value that corresponds to allowing no logical operators in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedLogicalOperators.Or">
            <summary>
            A value that corresponds to allowing 'Or' logical operator in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedLogicalOperators.And">
            <summary>
            A value that corresponds to allowing 'And' logical operator in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedLogicalOperators.Equal">
            <summary>
            A value that corresponds to allowing 'Equal' logical operator in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedLogicalOperators.NotEqual">
            <summary>
            A value that corresponds to allowing 'NotEqual' logical operator in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedLogicalOperators.GreaterThan">
            <summary>
            A value that corresponds to allowing 'GreaterThan' logical operator in $filter.
            </summary>   
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedLogicalOperators.GreaterThanOrEqual">
            <summary>
            A value that corresponds to allowing 'GreaterThanOrEqual' logical operator in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedLogicalOperators.LessThan">
            <summary>
            A value that corresponds to allowing 'LessThan' logical operator in $filter.
            </summary>  
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedLogicalOperators.LessThanOrEqual">
            <summary>
            A value that corresponds to allowing 'LessThanOrEqual' logical operator in $filter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedLogicalOperators.Not">
            <summary>
            A value that corresponds to allowing 'Not' logical operator in $filter.
            </summary>  
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedLogicalOperators.Has">
            <summary>
            A value that corresponds to allowing 'Has' logical operator in $filter.
            </summary>  
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedLogicalOperators.All">
            <summary>
            A value that corresponds to allowing all logical operators in $filter.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.AllowedQueryOptions">
            <summary>
            OData query options to allow for querying.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedQueryOptions.None">
            <summary>
            A value that corresponds to allowing no query options.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedQueryOptions.Filter">
            <summary>
            A value that corresponds to allowing the $filter query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedQueryOptions.Expand">
            <summary>
            A value that corresponds to allowing the $expand query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedQueryOptions.Select">
            <summary>
            A value that corresponds to allowing the $select query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedQueryOptions.OrderBy">
            <summary>
            A value that corresponds to allowing the $orderby query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedQueryOptions.Top">
            <summary>
            A value that corresponds to allowing the $top query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedQueryOptions.Skip">
            <summary>
            A value that corresponds to allowing the $skip query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedQueryOptions.Count">
            <summary>
            A value that corresponds to allowing the $count query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedQueryOptions.Format">
            <summary>
            A value that corresponds to allowing the $format query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedQueryOptions.SkipToken">
            <summary>
            A value that corresponds to allowing the $skiptoken query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedQueryOptions.DeltaToken">
            <summary>
            A value that corresponds to allowing the $deltatoken query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedQueryOptions.Apply">
            <summary>
            A value that corresponds to allowing the $apply query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedQueryOptions.Compute">
            <summary>
            A value that corresponds to allowing the $compute query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedQueryOptions.Search">
            <summary>
            A value that corresponds to allowing the $search query option.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedQueryOptions.Supported">
            <summary>
            A value that corresponds to the default query options supported.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.AllowedQueryOptions.All">
            <summary>
            A value that corresponds to allowing all query options.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.ClrSafeFunctions">
            <summary>
            This class contains safe equivalents of CLR functions that
            could throw exceptions at runtime.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Container.AggregationPropertyContainer">
            <summary>
            Represent properties used in groupby and aggregate clauses to make them accessible in further clauses/transformations
            </summary>
            <remakrs>
            When we have $apply=groupby((Prop1,Prop2, Prop3))&amp;$orderby=Prop1, Prop2
            We will have following expression in .GroupBy
            $it => new AggregationPropertyContainer() {
                Name = "Prop1", 
                Value = $it.Prop1, // string
                Next = new AggregationPropertyContainer() {
                    Name = "Prop2",
                    Value = $it.Prop2, // int
                    Next = new LastInChain() {
                        Name = "Prop3",
                        Value = $it.Prop3
                    }
                }
            }
            when in $orderby (see AggregationBinder CollectProperties method)
            Prop1 could be referenced us $it => (string)$it.Value
            Prop2 could be referenced us $it => (int)$it.Next.Value
            Prop3 could be referenced us $it => (int)$it.Next.Next.Value
            Generic type for Value is used to avoid type casts for on primitive types that not supported in EF
            
            Also we have 4 use cases and base type have all required properties to support no cast usage. 
            1. Primitive property with Next
            2. Primitive property without Next
            3. Nested property with Next
            4. Nested property without Next
            However, EF doesn't allow to set different properties for the same type in two places in an lambda-expression => using new type with just new name to workaround that issue
            
            </remakrs>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Container.IPropertyMapper">
            <summary>
            The result of a $select and $expand projection is represented as an <see cref="T:Microsoft.AspNetCore.OData.Query.Wrapper.ISelectExpandWrapper"/>
            instance. That instance can be projected into an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance by calling
            <see cref="M:Microsoft.AspNetCore.OData.Query.Wrapper.ISelectExpandWrapper.ToDictionary(System.Func{Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmStructuredType,Microsoft.AspNetCore.OData.Query.Container.IPropertyMapper})"/>.
            That method will use the function to construct an <see cref="T:Microsoft.AspNetCore.OData.Query.Container.IPropertyMapper"/> that will map the property
            names in that projection to the keys in the returned <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            The main purpose of converting an <see cref="T:Microsoft.AspNetCore.OData.Query.Wrapper.ISelectExpandWrapper"/> instance into an 
            <see cref="T:System.Collections.Generic.IDictionary`2"/> (using the method mentioned above) is to allow changing the names of the
            properties in the <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> that will be used during the serialization of the $select
            and $expand projection by a given formatter. For example, to support custom serialization attributes of a
            particular formatter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Container.IPropertyMapper.MapProperty(System.String)">
            <summary>
            Defines a mapping between the name of an <see cref="T:Microsoft.OData.Edm.IEdmProperty"/> of an <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/>
            and the name that should be used in other contexts, for example, when projecting an instance of an 
            <see cref="T:Microsoft.AspNetCore.OData.Query.Wrapper.ISelectExpandWrapper"/> into an instance of an <see cref="T:System.Collections.Generic.IDictionary`2"/>
            </summary>
            <param name="propertyName">
            The name of the property in the <see cref="T:Microsoft.OData.Edm.IEdmStructuredType" /> represented
            by this instance of <see cref="T:Microsoft.AspNetCore.OData.Query.Wrapper.ISelectExpandWrapper"/>.
            </param>
            <returns>
            The value that will be used as the key for this property in the <see cref="T:System.Collections.Generic.IDictionary`2" />
            resulting from calling ToDictionary on an <see cref="T:Microsoft.AspNetCore.OData.Query.Wrapper.ISelectExpandWrapper"/> instance.
            </returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Container.ITruncatedCollection">
            <summary>
            Represents a collection that is truncated to a given page size.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Container.ITruncatedCollection.PageSize">
            <summary>
            Gets the page size the collection is truncated to.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Container.ITruncatedCollection.IsTruncated">
            <summary>
            Gets a value representing if the collection is truncated or not.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Container.NamedPropertyExpression">
            <summary>
            Represents a container that captures a named property that is a part of the select expand query.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Container.NamedPropertyExpression.#ctor(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.Container.NamedPropertyExpression" /> class.
            </summary>
            <param name="name">Property name expression.</param>
            <param name="value">Property value expression.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Container.NamedPropertyExpression.Name">
            <summary>
            Property name expression.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Container.NamedPropertyExpression.Value">
            <summary>
            Property value expression.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Container.NamedPropertyExpression.TotalCount">
            <summary>
            The total count expression.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Container.NamedPropertyExpression.NullCheck">
            <summary>
            The null check expression.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Container.NamedPropertyExpression.PageSize">
            <summary>
            The page size value.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Container.NamedPropertyExpression.AutoSelected">
            <summary>
            The bool option to indicate if we are creating an AutoSelectedNamedProperty expression.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Container.NamedPropertyExpression.CountOption">
            <summary>
            Bool option that indicates if we have count value.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Container.PropertyContainer">
            <summary>
            A container of property names and property values.
            </summary>
            <remarks>
            EntityFramework understands only member initializations in Select expressions. Also, it doesn't understand type casts for non-primitive types. So, 
            SelectExpandBinder has to generate strongly types expressions that involve only property access. This class represents the base class for a bunch of 
            generic derived types that are used in the expressions that SelectExpandBinder generates.
            Also, Expression.Compile() could fail with stack overflow if expression is to deep and causes too many levels of recursion. To avoid that we are b-tree property container.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Container.PropertyContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.Container.PropertyContainer"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Container.PropertyContainer.ToDictionary(Microsoft.AspNetCore.OData.Query.Container.IPropertyMapper,System.Boolean)">
            <summary>
            Builds the dictionary of properties in this container keyed by the property name.
            </summary>
            <returns>The dictionary of properties in this container keyed by the property name.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Container.PropertyContainer.ToDictionaryCore(System.Collections.Generic.Dictionary{System.String,System.Object},Microsoft.AspNetCore.OData.Query.Container.IPropertyMapper,System.Boolean)">
            <summary>
            Adds the properties in this container to the given dictionary.
            </summary>
            <param name="dictionary">The dictionary to add the properties to.</param>
            <param name="includeAutoSelected">Specifies whether auto selected properties should be included.</param>
            <param name="propertyMapper">An object responsible to map the properties in this property container to the
            the value that will be used as the key in the dictionary we are adding properties to.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Container.TruncatedCollection`1">
            <summary>
            Represents a class that truncates a collection to a given page size.
            </summary>
            <typeparam name="T">The collection element type.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Container.TruncatedCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.Container.TruncatedCollection`1"/> class.
            </summary>
            <param name="source">The collection to be truncated.</param>
            <param name="pageSize">The page size.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Container.TruncatedCollection`1.#ctor(System.Linq.IQueryable{`0},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.Container.TruncatedCollection`1"/> class.
            </summary>
            <param name="source">The queryable collection to be truncated.</param>
            <param name="pageSize">The page size.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Container.TruncatedCollection`1.#ctor(System.Linq.IQueryable{`0},System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.Container.TruncatedCollection`1"/> class.
            </summary>
            <param name="source">The queryable collection to be truncated.</param>
            <param name="pageSize">The page size.</param>
            <param name="parameterize">Flag indicating whether constants should be parameterized</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Container.TruncatedCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.Container.TruncatedCollection`1"/> class.
            </summary>
            <param name="source">The queryable collection to be truncated.</param>
            <param name="pageSize">The page size.</param>
            <param name="totalCount">The total count.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Container.TruncatedCollection`1.#ctor(System.Linq.IQueryable{`0},System.Int32,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.Container.TruncatedCollection`1"/> class.
            </summary>
            <param name="source">The queryable collection to be truncated.</param>
            <param name="pageSize">The page size.</param>
            <param name="totalCount">The total count.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Container.TruncatedCollection`1.#ctor(System.Linq.IQueryable{`0},System.Int32,System.Nullable{System.Int64},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.Container.TruncatedCollection`1"/> class.
            </summary>
            <param name="source">The queryable collection to be truncated.</param>
            <param name="pageSize">The page size.</param>
            <param name="totalCount">The total count.</param>
            <param name="parameterize">Flag indicating whether constants should be parameterized</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Container.TruncatedCollection`1.PageSize">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Container.TruncatedCollection`1.IsTruncated">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Container.TruncatedCollection`1.TotalCount">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.DefaultODataQueryRequestParser">
            <summary>
            Exposes the ability to read and parse the content of a <see cref="T:Microsoft.AspNetCore.Http.HttpRequest" />
            into a query options part of an OData URL. Query options may be passed
            in the request body to a resource path ending in /$query.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.DefaultODataQueryRequestParser.CanParse(Microsoft.AspNetCore.Http.HttpRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.DefaultODataQueryRequestParser.ParseAsync(Microsoft.AspNetCore.Http.HttpRequest)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute">
            <summary>
            This partial class defines the configuration on <see cref="T:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute"/>.
            </summary>
            <summary>
            This class defines an attribute that can be applied to an action to enable querying using the OData query
            syntax. To avoid processing unexpected or malicious queries, use the validation settings on
            <see cref="T:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute"/> to validate incoming queries.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.#ctor">
            <summary>
            Enables a controller action to support OData query parameters.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.EnsureStableOrdering">
            <summary>
            Gets or sets a value indicating whether query composition should
            alter the original query when necessary to ensure a stable sort order.
            </summary>
            <value>A <c>true</c> value indicates the original query should
            be modified when necessary to guarantee a stable sort order.
            A <c>false</c> value indicates the sort order can be considered
            stable without modifying the query.  Query providers that ensure
            a stable sort order should set this value to <c>false</c>.
            The default value is <c>true</c>.</value>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.HandleNullPropagation">
            <summary>
            Gets or sets a value indicating how null propagation should
            be handled during query composition.
            </summary>
            <value>
            The default is <see cref="F:Microsoft.AspNetCore.OData.Query.HandleNullPropagationOption.Default"/>.
            </value>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.EnableConstantParameterization">
            <summary>
            Gets or sets a value indicating whether constants should be parameterized. Parameterizing constants
            would result in better performance with Entity framework.
            </summary>
            <value>The default value is <c>true</c>.</value>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.EnableCorrelatedSubqueryBuffering">
            <summary>
            Gets or sets a value indicating whether queries with expanded navigations should be formulated
            to encourage correlated sub-query results to be buffered.
            Buffering correlated sub-query results can reduce the number of queries from N + 1 to 2
            by buffering results from the sub-query.
            </summary>
            <value>The default value is <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.MaxAnyAllExpressionDepth">
            <summary>
            Gets or sets the maximum depth of the Any or All elements nested inside the query. This limit helps prevent
            Denial of Service attacks.
            </summary>
            <value>
            The maximum depth of the Any or All elements nested inside the query. The default value is 1.
            </value>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.MaxNodeCount">
            <summary>
            Gets or sets the maximum number of nodes inside the $filter syntax tree.
            </summary>
            <value>The default value is 100.</value>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.PageSize">
            <summary>
            Gets or sets the maximum number of query results to send back to clients.
            </summary>
            <value>
            The maximum number of query results to send back to clients.
            </value>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.HandleReferenceNavigationPropertyExpandFilter">
            <summary>
            Honor $filter inside $expand of non-collection navigation property.
            The expanded property is only populated when the filter evaluates to true.
            This setting is false by default.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.AllowedQueryOptions">
            <summary>
            Gets or sets the query parameters that are allowed in queries.
            </summary>
            <value>The default includes all query options: $filter, $skip, $top, $orderby, $expand, $select, $count,
            $format, $skiptoken and $deltatoken.</value>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.AllowedFunctions">
            <summary>
            Gets or sets a value that represents a list of allowed functions used in the $filter query. Supported
            functions include the following:
            <list type="definition">
            <item>
            <term>String related:</term>
            <description>contains, endswith, startswith, length, indexof, substring, tolower, toupper, trim,
            concat e.g. ~/Customers?$filter=length(CompanyName) eq 19</description>
            </item>
            <item>
            <term>DateTime related:</term>
            <description>year, month, day, hour, minute, second, fractionalseconds, date, time
            e.g. ~/Employees?$filter=year(BirthDate) eq 1971</description>
            </item>
            <item>
            <term>Math related:</term>
            <description>round, floor, ceiling</description>
            </item>
            <item>
            <term>Type related:</term>
            <description>isof, cast</description>
            </item>
            <item>
            <term>Collection related:</term>
            <description>any, all</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.AllowedArithmeticOperators">
            <summary>
            Gets or sets a value that represents a list of allowed arithmetic operators including 'add', 'sub', 'mul',
            'div', 'mod'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.AllowedLogicalOperators">
            <summary>
            Gets or sets a value that represents a list of allowed logical Operators such as 'eq', 'ne', 'gt', 'ge',
            'lt', 'le', 'and', 'or', 'not'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.AllowedOrderByProperties">
             <summary>
             <para>Gets or sets a string with comma separated list of property names. The queryable result can only be
             ordered by those properties defined in this list.</para>
            
             <para>Note, by default this string is null, which means it can be ordered by any property.</para>
            
             <para>For example, setting this value to null or empty string means that we allow ordering the queryable
             result by any properties. Setting this value to "Name" means we only allow queryable result to be ordered
             by Name property.</para>
             </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.MaxSkip">
            <summary>
            Gets or sets the max value of $skip that a client can request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.MaxTop">
            <summary>
            Gets or sets the max value of $top that a client can request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.MaxExpansionDepth">
            <summary>
            Gets or sets the max expansion depth for the $expand query option. To disable the maximum expansion depth
            check, set this property to 0.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.MaxOrderByNodeCount">
            <summary>
            Gets or sets the maximum number of expressions that can be present in the $orderby.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Performs the query composition before action is executing.
            </summary>
            <param name="actionExecutingContext">The action executing context.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            Performs the query composition after action is executed. It first tries to retrieve the IQueryable from the
            returning response message. It then validates the query from uri based on the validation settings on
            <see cref="T:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute"/>. It finally applies the query appropriately, and reset it back on
            the response message.
            </summary>
            <param name="actionExecutedContext">The context related to this action, including the response message,
            request message and HttpConfiguration etc.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,System.Object,System.Linq.IQueryable,Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Performs the query composition after action is executed. It first tries to retrieve the IQueryable from the
            returning response message. It then validates the query from uri based on the validation settings on
            <see cref="T:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute"/>. It finally applies the query appropriately, and reset it back on
            the response message.
            </summary>
            <param name="actionExecutedContext">.</param>
            <param name="responseValue">The response content value.</param>
            <param name="singleResultCollection">The content as SingleResult.Queryable.</param>
            <param name="actionDescriptor">The action context, i.e. action and controller name.</param>
            <param name="request">The internal request.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.GetModelBoundPageSize(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,System.Object,System.Linq.IQueryable,Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Get the page size.
            </summary>
            <param name="actionExecutedContext">The response value.</param>
            <param name="responseValue">The response value.</param>
            <param name="singleResultCollection">The content as SingleResult.Queryable.</param>
            <param name="actionDescriptor">The action context, i.e. action and controller name.</param>
            <param name="request">The request.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.CreateBadRequestResult(System.String,System.Exception)">
            <summary>
            Create a BadRequestObjectResult.
            </summary>
            <param name="message">The error message.</param>
            <param name="exception">The exception.</param>
            <returns>A BadRequestObjectResult.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.CreateErrorResponse(System.String,System.Exception)">
            <summary>
            Create an error response.
            </summary>
            <param name="message">The message of the error.</param>
            <param name="exception">The error exception if any.</param>
            <returns>A SerializableError.</returns>
            <remarks>This function is recursive.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.IsSuccessStatusCode(System.Int32)">
            <summary>
            Determine if the status code indicates success.
            </summary>
            <param name="statusCode">The status code.</param>
            <returns>True if the response has a success status code; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.ExecuteQuery(System.Object,System.Linq.IQueryable,Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Execute the query.
            </summary>
            <param name="responseValue">The response value.</param>
            <param name="singleResultCollection">The content as SingleResult.Queryable.</param>
            <param name="actionDescriptor">The action context, i.e. action and controller name.</param>
            <param name="request">The internal request.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.ApplyQuery(System.Linq.IQueryable,Microsoft.AspNetCore.OData.Query.ODataQueryOptions)">
            <summary>
            Applies the query to the given IQueryable based on incoming query from uri and query settings. By default,
            the implementation supports $top, $skip, $orderby and $filter. Override this method to perform additional
            query composition of the query.
            </summary>
            <param name="queryable">The original queryable instance from the response message.</param>
            <param name="queryOptions">
            The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryOptions"/> instance constructed based on the incoming request.
            </param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.ApplyQuery(System.Object,Microsoft.AspNetCore.OData.Query.ODataQueryOptions)">
            <summary>
            Applies the query to the given entity based on incoming query from uri and query settings.
            </summary>
            <param name="entity">The original entity from the response message.</param>
            <param name="queryOptions">
            The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryOptions"/> instance constructed based on the incoming request.
            </param>
            <returns>The new entity after the $select and $expand query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.CreateAndValidateQueryOptions(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.AspNetCore.OData.Query.ODataQueryContext)">
            <summary>
            Create and validate a new instance of <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryOptions"/> from a query and context.
            </summary>
            <param name="request">The incoming request.</param>
            <param name="queryContext">The query context.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.SingleOrDefault(System.Linq.IQueryable,Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor)">
            <summary>
            Get a single or default value from a collection.
            </summary>
            <param name="queryable">The response value as <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="actionDescriptor">The action context, i.e. action and controller name.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.ValidateSelectExpandOnly(Microsoft.AspNetCore.OData.Query.ODataQueryOptions)">
            <summary>
            Validate the select and expand options.
            </summary>
            <param name="queryOptions">The query options.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.GetODataQueryContext(System.Object,System.Linq.IQueryable,Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Get the ODaya query context.
            </summary>
            <param name="responseValue">The response value.</param>
            <param name="singleResultCollection">The content as SingleResult.Queryable.</param>
            <param name="actionDescriptor">The action context, i.e. action and controller name.</param>
            <param name="request">The OData path.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.GetElementType(System.Object,System.Linq.IQueryable,Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor)">
            <summary>
            Get the element type.
            </summary>
            <param name="responseValue">The response value.</param>
            <param name="singleResultCollection">The content as SingleResult.Queryable.</param>
            <param name="actionDescriptor">The action context, i.e. action and controller name.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.ValidateQuery(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.AspNetCore.OData.Query.ODataQueryOptions)">
            <summary>
            Validates the OData query in the incoming request. By default, the implementation throws an exception if
            the query contains unsupported query parameters. Override this method to perform additional validation of
            the query.
            </summary>
            <param name="request">The incoming request.</param>
            <param name="queryOptions">
            The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryOptions"/> instance constructed based on the incoming request.
            </param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.ContainsAutoSelectExpandProperty(System.Object,System.Linq.IQueryable,Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Determine if the query contains auto select and expand property.
            </summary>
            <param name="responseValue">The response value.</param>
            <param name="singleResultCollection">The content as SingleResult.Queryable.</param>
            <param name="actionDescriptor">The action context, i.e. action and controller name.</param>
            <param name="request">The Http request.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.GetModel(System.Type,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor)">
            <summary>
            Gets the EDM model for the given type and request.Override this method to customize the EDM model used for
            querying.
            </summary>
            <param name="elementClrType">The CLR type to retrieve a model for.</param>
            <param name="request">The request message to retrieve a model for.</param>
            <param name="actionDescriptor">The action descriptor for the action being queried on.</param>
            <returns>The EDM model for the given type and request.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.RequestQueryData">
            <summary>
            Holds request level query information.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.RequestQueryData.QueryValidationRunBeforeActionExecution">
            <summary>
            Gets or sets a value indicating whether query validation was run before action (controller method) is executed.
            </summary>
            <remarks>
            Marks if the query validation was run before the action execution. This is not always possible.
            For cases where the run failed before action execution. We will run validation on result.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute.RequestQueryData.ProcessedQueryOptions">
            <summary>
            Gets or sets the processed query options.
            </summary>
            <remarks>
            Stores the processed query options to be used later if OnActionExecuting was able to verify the query.
            This is because ValidateQuery internally modifies query options (expands are prime example of this).
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.ETag">
            <summary>
            The ETag parsed from request.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ETag.#ctor">
            <summary>
            Create an instance of <see cref="T:Microsoft.AspNetCore.OData.Query.ETag"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ETag.Item(System.String)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="key">The key of the value to get or set.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ETag.IsWellFormed">
            <summary>
            Gets or sets whether the ETag is well-formed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ETag.EntityType">
            <summary>
            Gets or sets an entity type of the ETag.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ETag.IsAny">
            <summary>
            Gets or sets whether the ETag is corresponding to "*".
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ETag.IsIfNoneMatch">
            <summary>
            Gets or sets whether If-None-Match set in the request header.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ETag.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            Gets a property value from the ETag.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ETag.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>
            Sets a property value to ETag.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ETag.ApplyTo(System.Linq.IQueryable)">
            <summary>
            Apply the ETag to the given IQueryable.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the ETag has been applied to.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.ETag`1">
            <summary>
            OData ETag of an entity type <typeparamref name="TEntity"/>.
            </summary>
            <typeparam name="TEntity">TEntity is the type of entity.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ETag`1.#ctor">
            <summary>
            Creates an instance of <see cref="T:Microsoft.AspNetCore.OData.Query.ETag`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ETag`1.ApplyTo(System.Linq.IQueryable)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ETag`1.ApplyTo(System.Linq.IQueryable{`0})">
            <summary>
            Apply the ETag to the given <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable`1"/>.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable`1"/> after the ETag has been applied.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.AggregationBinder.FlattenReferencedProperties(System.Linq.IQueryable)">
            <summary>
            Pre flattens properties referenced in aggregate clause to avoid generation of nested queries by EF.
            For query like groupby((A), aggregate(B/C with max as Alias1, B/D with max as Alias2)) we need to generate 
            .Select(
                $it => new FlattenninWrapper () {
                    Source = $it, // Will used in groupby stage
                    Container = new {
                        Value = $it.B.C
                        Next = new {
                            Value = $it.B.D
                        }
                    }
                }
            )
            Also we need to populate expressions to access B/C and B/D in aggregate stage. It will look like:
            B/C : $it.Container.Value
            B/D : $it.Container.Next.Value
            </summary>
            <param name="query"></param>
            <returns>Query with Select that flattens properties</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Expressions.BinderExtensions">
            <summary>
            Extension methods for Query binders
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.BinderExtensions.ApplyBind(Microsoft.AspNetCore.OData.Query.Expressions.IFilterBinder,System.Collections.IEnumerable,Microsoft.OData.UriParser.FilterClause,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Translates an OData $filter represented by <see cref="T:Microsoft.OData.UriParser.FilterClause"/> to <see cref="T:System.Linq.Expressions.Expression"/> and apply to <see cref="T:System.Collections.IEnumerable" />.
            </summary>
            <param name="binder">The given filter binder.</param>
            <param name="query">The given IEnumerable.</param>
            <param name="filterClause">The filter clause.</param>
            <param name="context">The query binder context.</param>
            <returns>The applied result.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.BinderExtensions.ApplyBind(Microsoft.AspNetCore.OData.Query.Expressions.IFilterBinder,System.Linq.IQueryable,Microsoft.OData.UriParser.FilterClause,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Translates an OData $filter represented by <see cref="T:Microsoft.OData.UriParser.FilterClause"/> to <see cref="T:System.Linq.Expressions.Expression"/> and apply to <see cref="T:System.Linq.IQueryable" />.
            </summary>
            <param name="binder">The given filter binder.</param>
            <param name="query">The given queryable.</param>
            <param name="filterClause">The filter clause.</param>
            <param name="context">The query binder context.</param>
            <returns>The applied result.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.BinderExtensions.ApplyBind(Microsoft.AspNetCore.OData.Query.Expressions.IFilterBinder,System.Linq.Expressions.Expression,Microsoft.OData.UriParser.FilterClause,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Translates an OData $filter represented by <see cref="T:Microsoft.OData.UriParser.FilterClause"/> to <see cref="T:System.Linq.Expressions.Expression"/> and apply to <see cref="T:System.Linq.Expressions.Expression" />.
            </summary>
            <param name="binder">The given filter binder.</param>
            <param name="source">The given source.</param>
            <param name="filterClause">The filter clause.</param>
            <param name="context">The query binder context.</param>
            <returns>The applied result.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.BinderExtensions.ApplyBind(Microsoft.AspNetCore.OData.Query.Expressions.IOrderByBinder,System.Linq.IQueryable,Microsoft.OData.UriParser.OrderByClause,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext,System.Boolean)">
            <summary>
            Translates an OData $orderby represented by <see cref="T:Microsoft.OData.UriParser.OrderByClause"/> to <see cref="T:System.Linq.Expressions.Expression"/> and apply to <see cref="T:System.Linq.IQueryable" />.
            </summary>
            <param name="binder">The given filter binder.</param>
            <param name="query">The given source.</param>
            <param name="orderByClause">The filter clause.</param>
            <param name="context">The query binder context.</param>
            <param name="alreadyOrdered">The boolean value indicating whether it's ordered or not.</param>
            <returns>The applied result.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.BinderExtensions.ApplyBind(Microsoft.AspNetCore.OData.Query.Expressions.IOrderByBinder,System.Linq.Expressions.Expression,Microsoft.OData.UriParser.OrderByClause,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext,System.Boolean)">
            <summary>
            Translates an OData $orderby represented by <see cref="T:Microsoft.OData.UriParser.OrderByClause"/> to <see cref="T:System.Linq.Expressions.Expression"/> and apply to <see cref="T:System.Linq.Expressions.Expression" />.
            </summary>
            <param name="binder">The given filter binder.</param>
            <param name="source">The given source.</param>
            <param name="orderByClause">The filter clause.</param>
            <param name="context">The query binder context.</param>
            <param name="alreadyOrdered">The boolean value indicating whether it's ordered or not.</param>
            <returns>The applied result.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.BinderExtensions.ApplyBind(Microsoft.AspNetCore.OData.Query.Expressions.ISelectExpandBinder,System.Linq.IQueryable,Microsoft.OData.UriParser.SelectExpandClause,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Translate an OData $select or $expand parse tree represented by <see cref="T:Microsoft.OData.UriParser.SelectExpandClause"/> to
            an <see cref="T:System.Linq.Expressions.Expression"/> and applies it to an <see cref="T:System.Linq.IQueryable"/>. ALso <see cref="T:System.Linq.IQueryable"/>
            </summary>
            <param name="binder">The built in <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.ISelectExpandBinder"/></param>
            <param name="source">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="selectExpandClause">The OData $select or $expand parse tree.</param>
            <param name="context">An instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.BinderExtensions.ApplyBind(Microsoft.AspNetCore.OData.Query.Expressions.ISelectExpandBinder,System.Object,Microsoft.OData.UriParser.SelectExpandClause,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Translate an OData $select or $expand parse tree represented by <see cref="T:Microsoft.OData.UriParser.SelectExpandClause"/> to
            an <see cref="T:System.Linq.Expressions.Expression"/> and applies it to an <see cref="T:System.Object"/>.
            </summary>
            <param name="binder">The built in <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.ISelectExpandBinder"/></param>
            <param name="source">The original <see cref="T:System.Object"/>.</param>
            <param name="selectExpandClause">The OData $select or $expand parse tree.</param>
            <param name="context">An instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.BinderExtensions.ApplyBind(Microsoft.AspNetCore.OData.Query.Expressions.ISearchBinder,System.Linq.IQueryable,Microsoft.OData.UriParser.SearchClause,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Translate an OData $search parse tree represented by <see cref="T:Microsoft.OData.UriParser.SearchClause"/> to
            an <see cref="T:System.Linq.Expressions.Expression"/> and applies it to an <see cref="T:System.Linq.IQueryable"/>.
            </summary>
            <param name="binder">The built in <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.ISelectExpandBinder"/></param>
            <param name="source">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="searchClause">The OData $search parse tree.</param>
            <param name="context">An instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext"/>.</param>
            <returns>The applied result.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Expressions.ExpressionBinderBase">
            <summary>
            The base class for all expression binders.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.Expressions.ExpressionBinderBase.BaseQuery">
            <summary>
            Base query used for the binder.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.Expressions.ExpressionBinderBase.FlattenedPropertyContainer">
            <summary>
            Flattened list of properties from base query, for case when binder is applied for aggregated query.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.ExpressionBinderBase.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.ExpressionBinderBase"/> class.
            </summary>
            <param name="requestContainer">The request container.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.ExpressionBinderBase.Bind(Microsoft.OData.UriParser.QueryNode)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.QueryNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that represents the semantics
            of the <see cref="T:Microsoft.OData.UriParser.QueryNode"/>.
            </summary>
            <param name="node">The node to bind.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Expressions.ExpressionBinderBase.Parameter">
            <summary>
            Gets $it parameter
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.ExpressionBinderBase.BindConstantNode(Microsoft.OData.UriParser.ConstantNode)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.ConstantNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.ConstantNode"/>.
            </summary>
            <param name="constantNode">The node to bind.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.ExpressionBinderBase.BindSingleValueFunctionCallNode(Microsoft.OData.UriParser.SingleValueFunctionCallNode)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.SingleValueFunctionCallNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.SingleValueFunctionCallNode"/>.
            </summary>
            <param name="node">The node to bind.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.ExpressionBinderBase.BindCollectionConstantNode(Microsoft.OData.UriParser.CollectionConstantNode)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.CollectionConstantNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.CollectionConstantNode"/>.
            </summary>
            <param name="node">The node to bind.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.ExpressionBinderBase.IsFlatteningSource(System.Linq.Expressions.Expression)">
            <summary>
            Recognize $it.Source where $it is FlatteningWrapper
            Using that do avoid wrapping it redundant into Null propagation 
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.ExpressionBinderBase.BindArguments(System.Collections.Generic.IEnumerable{Microsoft.OData.UriParser.QueryNode})">
            <summary>
            Bind function arguments
            </summary>
            <param name="nodes"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.ExpressionBinderBase.GetDynamicPropertyContainer(Microsoft.OData.UriParser.SingleValueOpenPropertyAccessNode)">
            <summary>
            Gets property for dynamic properties dictionary.
            </summary>
            <param name="openNode"></param>
            <returns>Returns CLR property for dynamic properties container.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.ExpressionBinderBase.EnsureFlattenedPropertyContainer(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Analyze previous query and extract grouped properties.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.ExpressionBinderBase.GetFlattenedPropertyExpression(System.String)">
            <summary>
            Gets expression for property from previously aggregated query
            </summary>
            <param name="propertyPath"></param>
            <returns>Returns null if no aggregations were used so far</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Expressions.ExpressionBinderHelper">
            <summary>
            The helper class for all expression binders.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Expressions.FilterBinder">
            <summary>
            The default implementation to bind an OData $filter represented by <see cref="T:Microsoft.OData.UriParser.FilterClause"/> to a <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.FilterBinder.BindFilter(Microsoft.OData.UriParser.FilterClause,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Translates an OData $filter represented by <see cref="T:Microsoft.OData.UriParser.FilterClause"/> to <see cref="T:System.Linq.Expressions.Expression"/>.
            $filter=Name eq 'Sam'
               |--  $it => $it.Name == "Sam"
            </summary>
            <param name="filterClause">The filter clause.</param>
            <param name="context">The query binder context.</param>
            <returns>The filter binder result.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Expressions.IFilterBinder">
            <summary>
            Exposes the ability to translate an OData $filter represented by <see cref="T:Microsoft.OData.UriParser.FilterClause"/> to the <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.IFilterBinder.BindFilter(Microsoft.OData.UriParser.FilterClause,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Translates an OData $filter represented by <see cref="T:Microsoft.OData.UriParser.FilterClause"/> to <see cref="T:System.Linq.Expressions.Expression"/>.
            $filter=Name eq 'Sam'
               |--  $it => $it.Name == "Sam"
            </summary>
            <param name="filterClause">The filter clause.</param>
            <param name="context">The query binder context.</param>
            <returns>The filter binder result.</returns>
            <remarks>reconsider to return "LambdaExpression"? </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Expressions.IOrderByBinder">
            <summary>
            Exposes the ability to translate an OData $orderby represented by <see cref="T:Microsoft.OData.UriParser.OrderByClause"/> to the <see cref="T:System.Linq.Expressions.Expression"/>
            wrappered in <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.OrderByBinderResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.IOrderByBinder.BindOrderBy(Microsoft.OData.UriParser.OrderByClause,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Translates an OData $orderby represented by <see cref="T:Microsoft.OData.UriParser.OrderByClause"/> to <see cref="T:System.Linq.Expressions.Expression"/>.
            $orderby=Age,Name
               |--  x => x.Age
               |--  x => x.Name
            </summary>
            <param name="orderByClause">The orderby clause.</param>
            <param name="context">The query binder context.</param>
            <returns>The OrderBy binder result, <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.OrderByBinderResult"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Expressions.ISearchBinder">
            <summary>
            Exposes the ability to translate an OData $search represented by <see cref="T:Microsoft.OData.UriParser.SearchClause"/> to the <see cref="T:System.Linq.Expressions.Expression"/>.
            The $search system query option restricts the result to include only those items matching the specified search expression.
            The definition of what it means to match is dependent upon the implementation.
            Therefore, there's no default implementation of $search binder.
            Developer should implement this interface and inject the search binder into service collection.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.ISearchBinder.BindSearch(Microsoft.OData.UriParser.SearchClause,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Translates an OData $search represented by <see cref="T:Microsoft.OData.UriParser.SearchClause"/> to <see cref="T:System.Linq.Expressions.Expression"/>.
            ~/Products?$search=mountain AND bike
            </summary>
            <param name="searchClause">The search clause.</param>
            <param name="context">The query binder context.</param>
            <returns>The search clause binder result. It should be a lambda expression.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Expressions.ISelectExpandBinder">
            <summary>
            Exposes the ability to translate an OData $select or $expand parse tree represented by <see cref="T:Microsoft.OData.UriParser.SelectExpandClause"/> to
            an <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.ISelectExpandBinder.BindSelectExpand(Microsoft.OData.UriParser.SelectExpandClause,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Translate an OData $select or $expand tree represented by <see cref="T:Microsoft.OData.UriParser.SelectExpandClause"/> to an <see cref="T:System.Linq.Expressions.Expression"/>.
            $select=Name&amp;$expand=Orders
            $it => new { .... }
            </summary>
            <param name="selectExpandClause">The original <see cref="T:Microsoft.OData.UriParser.SelectExpandClause"/>.</param>
            <param name="context">An instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext"/>.</param>
            <returns>The $select and $expand binder result.</returns>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.Expressions.Linq2ObjectsComparisonMethods.AreByteArraysEqualMethodInfo">
            <summary>Method info for byte array comparison.</summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.Expressions.Linq2ObjectsComparisonMethods.AreByteArraysNotEqualMethodInfo">
            <summary>Method info for byte array comparison.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.Linq2ObjectsComparisonMethods.AreByteArraysEqual(System.Byte[],System.Byte[])">
            <summary>Compares two byte arrays for equality.</summary>
            <param name="left">First byte array.</param>
            <param name="right">Second byte array.</param>
            <returns>true if the arrays are equal; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.Linq2ObjectsComparisonMethods.AreByteArraysNotEqual(System.Byte[],System.Byte[])">
            <summary>Compares two byte arrays for equality.</summary>
            <param name="left">First byte array.</param>
            <param name="right">Second byte array.</param>
            <returns>true if the arrays are not equal; false otherwise.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Expressions.OrderByBinder">
            <summary>
            The default implementation to bind an OData $orderby represented by <see cref="T:Microsoft.OData.UriParser.OrderByClause"/>
            an <see cref="T:System.Linq.Expressions.Expression"/> wrappered in <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.OrderByBinderResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.OrderByBinder.BindOrderBy(Microsoft.OData.UriParser.OrderByClause,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Translates an OData $orderby represented by <see cref="T:Microsoft.OData.UriParser.OrderByClause"/> to <see cref="T:System.Linq.Expressions.Expression"/>.
            $orderby=Age
               |--  x => x.Age
            </summary>
            <param name="orderByClause">The orderby clause.</param>
            <param name="context">The query binder context.</param>
            <returns>The OrderBy binder result, <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.OrderByBinderResult"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Expressions.OrderByBinderResult">
            <summary>
            Represents a single order by expression in the $orderby clause.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.OrderByBinderResult.#ctor(System.Linq.Expressions.Expression,Microsoft.OData.UriParser.OrderByDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.OrderByBinderResult"/> class.
            </summary>
            <param name="orderByExpression">The orderby expression.</param>
            <param name="direction">The orderby direction.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Expressions.OrderByBinderResult.OrderByExpression">
            <summary>
            Gets the orderby expression.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Expressions.OrderByBinderResult.Direction">
            <summary>
            Gets the orderby direction.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Expressions.OrderByBinderResult.ThenBy">
            <summary>
            Gets or sets the thenby result.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder">
            <summary>
            The base class for all expression query binders.
            </summary>
            <summary>
            The base class for all expression binders.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.Bind(Microsoft.OData.UriParser.QueryNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.QueryNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that represents the semantics of the <see cref="T:Microsoft.OData.UriParser.QueryNode"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindCollectionNode(Microsoft.OData.UriParser.CollectionNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.CollectionNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that represents the semantics of the <see cref="T:Microsoft.OData.UriParser.CollectionNode"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindSingleValueNode(Microsoft.OData.UriParser.SingleValueNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.SingleValueNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that represents the semantics of the <see cref="T:Microsoft.OData.UriParser.SingleValueNode"/>.
            </summary>
            <param name="node">The node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindNavigationPropertyNode(Microsoft.OData.UriParser.QueryNode,Microsoft.OData.Edm.IEdmNavigationProperty,System.String,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.Edm.IEdmNavigationProperty"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.Edm.IEdmNavigationProperty"/>.
            </summary>
            <param name="sourceNode">The node that represents the navigation source.</param>
            <param name="navigationProperty">The navigation property to bind.</param>
            <param name="propertyPath">The property path.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindCollectionResourceCastNode(Microsoft.OData.UriParser.CollectionResourceCastNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.CollectionResourceCastNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.CollectionResourceCastNode"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindCollectionComplexNode(Microsoft.OData.UriParser.CollectionComplexNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.CollectionComplexNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.CollectionComplexNode"/>.
            </summary>
            <param name="collectionComplexNode">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindCollectionPropertyAccessNode(Microsoft.OData.UriParser.CollectionPropertyAccessNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.CollectionPropertyAccessNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.CollectionPropertyAccessNode"/>.
            </summary>
            <param name="propertyAccessNode">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindDynamicPropertyAccessQueryNode(Microsoft.OData.UriParser.SingleValueOpenPropertyAccessNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.SingleValueOpenPropertyAccessNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.SingleValueOpenPropertyAccessNode"/>.
            </summary>
            <param name="openNode">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindPropertyAccessQueryNode(Microsoft.OData.UriParser.SingleValuePropertyAccessNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.SingleValuePropertyAccessNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.SingleValuePropertyAccessNode"/>.
            </summary>
            <param name="propertyAccessNode">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindSingleComplexNode(Microsoft.OData.UriParser.SingleComplexNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.SingleComplexNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.SingleComplexNode"/>.
            </summary>
            <param name="singleComplexNode">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindRangeVariable(Microsoft.OData.UriParser.RangeVariable,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.RangeVariable"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.RangeVariable"/>.
            </summary>
            <param name="rangeVariable">The range variable to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindBinaryOperatorNode(Microsoft.OData.UriParser.BinaryOperatorNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.BinaryOperatorNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.BinaryOperatorNode"/>.
            </summary>
            <param name="binaryOperatorNode">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindConvertNode(Microsoft.OData.UriParser.ConvertNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.ConvertNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.ConvertNode"/>.
            </summary>
            <param name="convertNode">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindCountNode(Microsoft.OData.UriParser.CountNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.CountNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.CountNode"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindInNode(Microsoft.OData.UriParser.InNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds an <see cref="T:Microsoft.OData.UriParser.InNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.InNode"/>.
            </summary>
            <param name="inNode">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindSingleResourceFunctionCallNode(Microsoft.OData.UriParser.SingleResourceFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.SingleResourceFunctionCallNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.SingleResourceFunctionCallNode"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindSingleResourceCastFunctionCall(Microsoft.OData.UriParser.SingleResourceFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.SingleResourceFunctionCallNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.SingleResourceFunctionCallNode"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindSingleResourceCastNode(Microsoft.OData.UriParser.SingleResourceCastNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.SingleResourceCastNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.SingleResourceCastNode"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindAllNode(Microsoft.OData.UriParser.AllNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.AllNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.AllNode"/>.
            </summary>
            <param name="allNode">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindAnyNode(Microsoft.OData.UriParser.AnyNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.AnyNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.AnyNode"/>.
            </summary>
            <param name="anyNode">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindUnaryOperatorNode(Microsoft.OData.UriParser.UnaryOperatorNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.UnaryOperatorNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.UnaryOperatorNode"/>.
            </summary>
            <param name="unaryOperatorNode">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindConstantNode(Microsoft.OData.UriParser.ConstantNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.ConstantNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.ConstantNode"/>.
            </summary>
            <param name="constantNode">The node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindCollectionConstantNode(Microsoft.OData.UriParser.CollectionConstantNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.CollectionConstantNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.CollectionConstantNode"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.IsFlatteningSource(System.Linq.Expressions.Expression,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Recognize $it.Source where $it is FlatteningWrapper
            Using that do avoid wrapping it redundant into Null propagation 
            </summary>
            <param name="source">The source.</param>
            <param name="context">The query binder context.</param>
            <returns>true/false.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindArguments(System.Collections.Generic.IEnumerable{Microsoft.OData.UriParser.QueryNode},Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Bind function arguments
            </summary>
            <param name="nodes">The nodes.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.GetDynamicPropertyContainer(Microsoft.OData.UriParser.SingleValueOpenPropertyAccessNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Gets property for dynamic properties dictionary.
            </summary>
            <param name="openNode"></param>
            <param name="context">The query binder context.</param>
            <returns>Returns CLR property for dynamic properties container.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.GetFlattenedPropertyExpression(System.String,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Gets expression for property from previously aggregated query
            </summary>
            <param name="propertyPath">The property path.</param>
            <param name="context">The query binder context.</param>
            <returns>Returns null if no aggregations were used so far</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.ApplyNullPropagationForFilterBody(System.Linq.Expressions.Expression,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Apply null propagation for filter body.
            </summary>
            <param name="body">The body.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindSingleValueFunctionCallNode(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a <see cref="T:Microsoft.OData.UriParser.SingleValueFunctionCallNode"/> to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/> that
            represents the semantics of the <see cref="T:Microsoft.OData.UriParser.SingleValueFunctionCallNode"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindStartsWith(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a 'startswith' function to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindEndsWith(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a 'endswith' function to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindContains(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a 'contains' function to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindSubstring(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a 'substring' function to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindLength(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a 'length' function to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindIndexOf(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a 'indexof' function to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindToLower(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a 'tolower' function to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindToUpper(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a 'toupper' function to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindTrim(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a 'trim' function to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindConcat(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a 'concat' function to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindDateRelatedProperty(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds date related functions to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindTimeRelatedProperty(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds time related functions to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindFractionalSeconds(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds 'fractionalseconds' function to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindRound(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds 'round' function to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindFloor(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds 'floor' function to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindCeiling(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds 'ceiling' function to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindCastSingleValue(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds 'cast' function to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindIsOf(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a 'isof' function to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindDate(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a 'date' function to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindTime(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a 'time' function to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindNow(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds a 'now' function to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinder.BindCustomMethodExpressionOrNull(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Binds customized function to create a LINQ <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="node">The query node to bind.</param>
            <param name="context">The query binder context.</param>
            <returns>The LINQ <see cref="T:System.Linq.Expressions.Expression"/> created.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext">
            <summary>
            Encapsulates all binder information about an individual OData query option binding.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext.DollarIt">
            <summary>
            The parameter name for root type.(it could be renamed as $root).
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext.DollarThis">
            <summary>
            The parameter name for current type.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext._lambdaParameters">
            <summary>
            All parameters present in current context.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext.#ctor(Microsoft.OData.Edm.IEdmModel,Microsoft.AspNetCore.OData.Query.ODataQuerySettings,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext" /> class.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="querySettings">The query setting.</param>
            <param name="clrType">The current element CLR type in this context (scope).</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext.#ctor(Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext,Microsoft.AspNetCore.OData.Query.ODataQuerySettings,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext" /> class.
            </summary>
            <param name="context">The parent query binder context.</param>
            <param name="querySettings">The query setting.</param>
            <param name="clrType">The current element CLR type in this context (scope).</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext.Model">
            <summary>
            Gets the Edm model.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext.QuerySettings">
            <summary>
            Gets the query settings.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext.ElementClrType">
            <summary>
            Gets the Element Clr type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext.AssembliesResolver">
            <summary>
            Gets or sets the assembly resolver.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext.ComputedProperties">
            <summary>
            Gets the compute expressions.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext.ElementType">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.IEdmType"/> of the element type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext.NavigationSource">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.IEdmNavigationSource"/> that contains the element.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext.CurrentParameter">
            <summary>
            Gets the current parameter. Current parameter is the parameter at root of this context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext.Source">
            <summary>
            Gets or sets the source.
            Basically for $compute in $select and $expand
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext.GetParameter(System.String)">
            <summary>
            Gets the parameter using parameter name.
            </summary>
            <param name="name">The parameter name.</param>
            <returns>The parameter expression.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext.RemoveParameter(System.String)">
            <summary>
            Remove the parameter.
            </summary>
            <param name="name">The parameter name.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Expressions.SelectExpandBinder">
            <summary>
            Exposes the ability to translate an OData $select or $expand parse tree represented by <see cref="T:Microsoft.OData.UriParser.SelectExpandClause"/> to
            an <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.SelectExpandBinder.#ctor(Microsoft.AspNetCore.OData.Query.Expressions.IFilterBinder,Microsoft.AspNetCore.OData.Query.Expressions.IOrderByBinder)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.SelectExpandBinder" /> class.
            Select and Expand binder depends on <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.IFilterBinder"/> and <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.IOrderByBinder"/> to process inner $filter and $orderby.
            </summary>
            <param name="filterBinder">The injected filter binder.</param>
            <param name="orderByBinder">The injected orderby binder.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.SelectExpandBinder.#ctor">
            <summary>
            For unit test only.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Expressions.SelectExpandBinder.FilterBinder">
            <summary>
            Gets the filter binder.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Expressions.SelectExpandBinder.OrderByBinder">
            <summary>
            Gets the orderby binder.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.SelectExpandBinder.BindSelectExpand(Microsoft.OData.UriParser.SelectExpandClause,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext)">
            <summary>
            Translate an OData $select or $expand tree represented by <see cref="T:Microsoft.OData.UriParser.SelectExpandClause"/> to an <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
            <param name="selectExpandClause">The original <see cref="T:Microsoft.OData.UriParser.SelectExpandClause"/>.</param>
            <param name="context">An instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext"/>.</param>
            <returns>The $select and $expand binder result.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.SelectExpandBinder.CreatePropertyNameExpression(Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext,Microsoft.OData.Edm.IEdmStructuredType,Microsoft.OData.Edm.IEdmProperty,System.Linq.Expressions.Expression)">
            <summary>
            Creates an <see cref="T:System.Linq.Expressions.Expression"/> from an <see cref="T:Microsoft.OData.Edm.IEdmProperty"/> name.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext"/>.</param>
            <param name="elementType">The <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> that contains the edmProperty.</param>
            <param name="edmProperty">The <see cref="T:Microsoft.OData.Edm.IEdmProperty"/> from which we are creating an <see cref="T:System.Linq.Expressions.Expression"/>.</param>
            <param name="source">The source <see cref="T:System.Linq.Expressions.Expression"/>.</param>
            <returns>The created <see cref="T:System.Linq.Expressions.Expression"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.SelectExpandBinder.CreatePropertyValueExpression(Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext,Microsoft.OData.Edm.IEdmStructuredType,Microsoft.OData.Edm.IEdmProperty,System.Linq.Expressions.Expression,Microsoft.OData.UriParser.FilterClause,Microsoft.OData.UriParser.ComputeClause)">
            <summary>
            Creates an <see cref="T:System.Linq.Expressions.Expression"/> from an <see cref="T:Microsoft.OData.Edm.IEdmProperty"/> name.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext"/>.</param>
            <param name="elementType">The <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> that contains the edmProperty.</param>
            <param name="edmProperty">The <see cref="T:Microsoft.OData.Edm.IEdmProperty"/> from which we are creating an <see cref="T:System.Linq.Expressions.Expression"/>.</param>
            <param name="source">The source <see cref="T:System.Linq.Expressions.Expression"/>.</param>
            <param name="filterClause">The $filter query represented by <see cref="T:Microsoft.OData.UriParser.FilterClause"/>.</param>
            <param name="computeClause">The $compute query represented by <see cref="T:Microsoft.OData.UriParser.ComputeClause"/>.</param>
            <returns>The created <see cref="T:System.Linq.Expressions.Expression"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.SelectExpandBinder.GetSelectExpandProperties(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmStructuredType,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.OData.UriParser.SelectExpandClause,System.Collections.Generic.IDictionary{Microsoft.OData.Edm.IEdmStructuralProperty,Microsoft.OData.UriParser.PathSelectItem}@,System.Collections.Generic.IDictionary{Microsoft.OData.Edm.IEdmNavigationProperty,Microsoft.OData.UriParser.ExpandedReferenceSelectItem}@,System.Collections.Generic.ISet{Microsoft.OData.Edm.IEdmStructuralProperty}@)">
            <summary>
            Gets the $select and $expand properties from the given <see cref="T:Microsoft.OData.UriParser.SelectExpandClause"/>
            </summary>
            <param name="model">The Edm model.</param>
            <param name="structuredType">The current structural type.</param>
            <param name="navigationSource">The current navigation source.</param>
            <param name="selectExpandClause">The given select and expand clause.</param>
            <param name="propertiesToInclude">The out properties to include at current level, could be null.</param>
            <param name="propertiesToExpand">The out properties to expand at current level, could be null.</param>
            <param name="autoSelectedProperties">The out auto selected properties to include at current level, could be null.</param>
            <returns>true if the select contains dynamic property selection, false if it's not.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.SelectExpandBinder.ProcessExpandedItem(Microsoft.OData.UriParser.ExpandedReferenceSelectItem,Microsoft.OData.Edm.IEdmNavigationSource,System.Collections.Generic.IDictionary{Microsoft.OData.Edm.IEdmStructuralProperty,Microsoft.AspNetCore.OData.Query.SelectExpandIncludedProperty},System.Collections.Generic.IDictionary{Microsoft.OData.Edm.IEdmNavigationProperty,Microsoft.OData.UriParser.ExpandedReferenceSelectItem}@)">
            <summary>
            Process the <see cref="T:Microsoft.OData.UriParser.ExpandedReferenceSelectItem"/>.
            </summary>
            <param name="expandedItem">The expanded item.</param>
            <param name="navigationSource">The navigation source.</param>
            <param name="currentLevelPropertiesInclude">The current level properties included.</param>
            <param name="propertiesToExpand">out/ref, the property expanded.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.SelectExpandBinder.ProcessSelectedItem(Microsoft.OData.UriParser.PathSelectItem,Microsoft.OData.Edm.IEdmNavigationSource,System.Collections.Generic.IDictionary{Microsoft.OData.Edm.IEdmStructuralProperty,Microsoft.AspNetCore.OData.Query.SelectExpandIncludedProperty})">
            <summary>
            Process the <see cref="T:Microsoft.OData.UriParser.PathSelectItem"/>.
            </summary>
            <param name="pathSelectItem">The selected item.</param>
            <param name="navigationSource">The navigation source.</param>
            <param name="currentLevelPropertiesInclude">The current level properties included.</param>
            <returns>true if it's dynamic property selection, false if it's not.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.SelectExpandBinder.CreateTotalCountExpression(Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext,System.Linq.Expressions.Expression,System.Nullable{System.Boolean})">
            <summary>
            Create an <see cref="T:System.Linq.Expressions.Expression"/> for the $count in $select or $expand
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext"/></param>
            <param name="source">Original <see cref="T:System.Linq.Expressions.Expression"/> which we will be appending the count expression.</param>
            <param name="countOption">Boolean to indicate if count value is present in $expand or $select item.</param>
            <returns>The <see cref="T:System.Linq.Expressions.Expression"/> to create.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.SelectExpandBinder.BuildExpandedProperty(Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext,System.Linq.Expressions.Expression,Microsoft.OData.Edm.IEdmStructuredType,Microsoft.OData.Edm.IEdmNavigationProperty,Microsoft.OData.UriParser.ExpandedReferenceSelectItem,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Query.Container.NamedPropertyExpression})">
            <summary>
            Build the navigation property <see cref="T:Microsoft.OData.Edm.IEdmNavigationProperty"/> into the included properties.
            The property name is the navigation property name.
            The property value is the navigation property value from the source and applied the nested query options.
            </summary>
            <param name="context">Wrapper for properties used by the <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.SelectExpandBinder"/>.</param>
            <param name="source">The source contains the navigation property.</param>
            <param name="structuredType">The structured type or its derived type contains the navigation property.</param>
            <param name="navigationProperty">The expanded navigation property.</param>
            <param name="expandedItem">The expanded navigation select item. It may contain the nested query options.</param>
            <param name="includedProperties">The container to hold the created property.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.SelectExpandBinder.BuildSelectedProperty(Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext,System.Linq.Expressions.Expression,Microsoft.OData.Edm.IEdmStructuredType,Microsoft.OData.Edm.IEdmStructuralProperty,Microsoft.OData.UriParser.PathSelectItem,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Query.Container.NamedPropertyExpression})">
            <summary>
            Build the structural property <see cref="T:Microsoft.OData.Edm.IEdmStructuralProperty"/> into the included properties.
            The property name is the structural property name.
            The property value is the structural property value from the source and applied the nested query options.
            </summary>
            <param name="context">Wrapper for properties used by the <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.SelectExpandBinder"/>.</param>
            <param name="source">The source contains the structural property.</param>
            <param name="structuredType">The structured type or its derived type contains the structural property.</param>
            <param name="structuralProperty">The selected structural property.</param>
            <param name="pathSelectItem">The selected item. It may contain the nested query options and could be null.</param>
            <param name="includedProperties">The container to hold the created property.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.SelectExpandBinder.BindComputedProperty(System.Linq.Expressions.Expression,Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext,System.String,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Query.Container.NamedPropertyExpression})">
            <summary>
            Bind the computed property.
            </summary>
            <param name="source">The source contains the compute property.</param>
            <param name="context">Wrapper for properties used by the <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.SelectExpandBinder"/>.</param>
            <param name="computedProperty">The compute property name.</param>
            <param name="includedProperties">The container to hold the created property.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.SelectExpandBinder.BuildDynamicProperty(Microsoft.AspNetCore.OData.Query.Expressions.QueryBinderContext,System.Linq.Expressions.Expression,Microsoft.OData.Edm.IEdmStructuredType,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Query.Container.NamedPropertyExpression})">
            <summary>
            Build the dynamic properties into the included properties.
            </summary>
            <param name="context">The wrapper for properties used by the <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.SelectExpandBinder"/>.</param>
            <param name="source">The source contains the dynamic property.</param>
            <param name="structuredType">The structured type contains the dynamic property.</param>
            <param name="includedProperties">The container to hold the created property.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.SelectExpandBinder.CreateTypeNameExpression(System.Linq.Expressions.Expression,Microsoft.OData.Edm.IEdmStructuredType,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Create <see cref="T:System.Linq.Expressions.Expression"/> for Derived types.
            </summary>
            <param name="source">The original <see cref="T:System.Linq.Expressions.Expression"/>.</param>
            <param name="elementType">The <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> which may contain the derived types.</param>
            <param name="model">The <see cref="T:Microsoft.OData.Edm.IEdmModel"/>.</param>
            <returns>The <see cref="T:System.Linq.Expressions.Expression"/> with derived types if any are present.</returns>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Expressions.TransformationBinderBase.ResultClrType">
            <summary>
            Gets CLR type returned from the query.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.TransformationBinderBase.IsClassicEF(System.Linq.IQueryable)">
            <summary>
            Checks IQueryable provider for need of EF6 optimization
            </summary>
            <param name="query"></param>
            <returns>True if EF6 optimization are needed.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Expressions.UriFunctionsBinder">
            <summary>
            This class helps to bind uri functions to CLR.
            For creating an Expression and apply it on a Queryable collection, we must get the CLR information,
            i.e MethodInfo of each EdmFunction which is mentioned in the EdmModel.
            If you add a custom uri function in OData.Core via 'CustomUriFunctions' class, you must bind it to it's MethodInfo.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.UriFunctionsBinder.BindUriFunctionName(System.String,System.Reflection.MethodInfo)">
            <summary>
            Bind the given function name to the given MethodInfo.
            The binding helps to create an Expression out of the method.
            You can bind a static method, a static extension method, and an instance method.
            You should be careful about binding instance methods - the declaring type of the method i.e the instance type,
            will be considered as the first argument of the function.
            </summary>
            <param name="functionName">The uri function name that appears in the OData request uri.</param>
            <param name="methodInfo">The MethodInfo to bind the given function name.</param>
            <exception cref="T:System.ArgumentNullException">Function name argument is Null or empty</exception>
            <exception cref="T:System.ArgumentNullException">MethodInfo argument is Null</exception>
            <exception cref="T:Microsoft.OData.ODataException">The given FunctionName is already binded to another MethodInfo.</exception>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.UriFunctionsBinder.UnbindUriFunctionName(System.String,System.Reflection.MethodInfo)">
            <summary>
            Unbind the given function name from the given MethodInfo.
            </summary>
            <param name="functionName">The uri function name to unbind.</param>
            <param name="methodInfo">The MethodInfo to unbind from the given function name.</param>
            <exception cref="T:System.ArgumentNullException">Function name argument is Null or empty</exception>
            <exception cref="T:System.ArgumentNullException">MethodInfo argument is Null</exception>
            <returns>'True' if function has unbind. 'False' otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.UriFunctionsBinder.GetMethodLiteralSignature(System.String,System.Reflection.MethodInfo)">
            <summary>
            Get a string describing the given method.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Expressions.UriFunctionsBinder.GetMethodLiteralSignature(System.String,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Creates a string describing the function signature.
            'methodName(argTypeName1,argTypeName2,argTypeName3..)'
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.HandleNullPropagationOption">
            <summary>
            This enum defines how to handle null propagation in queryable support.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.HandleNullPropagationOption.Default">
            <summary>
            Determine how to handle null propagation based on the
            query provider during query composition.  This is the
            default value used in <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQuerySettings"/>
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.HandleNullPropagationOption.True">
            <summary>
            Handle null propagation during query composition.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.HandleNullPropagationOption.False">
            <summary>
            Do not handle null propagation during query composition.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.HttpRequestODataQueryExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.HttpRequestODataQueryExtensions.GetETag(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Gets the OData <see cref="T:Microsoft.AspNetCore.OData.Query.ETag"/> from the given request.
            </summary>
            <param name="request">The request.</param>
            <param name="entityTagHeaderValue">The entity tag header value.</param>
            <returns>The parsed <see cref="T:Microsoft.AspNetCore.OData.Query.ETag"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.HttpRequestODataQueryExtensions.GetETag``1(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Query.ETag`1"/> from the given request.
            </summary>
            <param name="request">The request.</param>
            <param name="entityTagHeaderValue">The entity tag header value.</param>
            <returns>The parsed <see cref="T:Microsoft.AspNetCore.OData.Query.ETag`1"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.ICountOptionCollection">
            <summary>
            Represents a collection that has total count.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ICountOptionCollection.TotalCount">
            <summary>
            Gets a value representing the total count of the collection.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.IODataQueryRequestParser">
            <summary>
            Exposes the ability to read and parse the content of a <see cref="T:Microsoft.AspNetCore.Http.HttpRequest" />
            into a query options part of an OData URL. Query options may be passed
            in the request body to a resource path ending in /$query.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.IODataQueryRequestParser.CanParse(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Determines whether this <see cref="T:Microsoft.AspNetCore.OData.Query.IODataQueryRequestParser"/> can parse the http request.
            </summary>
            <param name="request">The http request.</param>
            <returns>true if this <see cref="T:Microsoft.AspNetCore.OData.Query.IODataQueryRequestParser"/> can parse the http request; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.IODataQueryRequestParser.ParseAsync(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Reads and parses the content of a <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/>
            into a query options part of an OData URL.
            </summary>
            <param name="request">A http request containing the query options.</param>
            <returns>A string representing the query options part of an OData URL.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.ModelBoundQuerySettingsExtensions">
            <summary>
            This class describes the model bound settings to use during query composition.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ModelBoundQuerySettingsExtensions.CopyExpandConfigurations(Microsoft.OData.ModelBuilder.Config.ModelBoundQuerySettings,System.Collections.Generic.Dictionary{System.String,Microsoft.OData.ModelBuilder.Config.ExpandConfiguration})">
            <summary>
            Copy the <see cref="T:Microsoft.OData.ModelBuilder.Config.ExpandConfiguration"/>s of navigation properties.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ModelBoundQuerySettingsExtensions.CopyOrderByConfigurations(Microsoft.OData.ModelBuilder.Config.ModelBoundQuerySettings,System.Collections.Generic.Dictionary{System.String,System.Boolean})">
            <summary>
            Copy the $orderby configuration of properties.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ModelBoundQuerySettingsExtensions.CopySelectConfigurations(Microsoft.OData.ModelBuilder.Config.ModelBoundQuerySettings,System.Collections.Generic.Dictionary{System.String,Microsoft.OData.ModelBuilder.SelectExpandType})">
            <summary>
            Copy the $select configuration of properties.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ModelBoundQuerySettingsExtensions.CopyFilterConfigurations(Microsoft.OData.ModelBuilder.Config.ModelBoundQuerySettings,System.Collections.Generic.Dictionary{System.String,System.Boolean})">
            <summary>
            Copy the $filter configuration of properties.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.OrderByCountNode">
            <summary>
            Represents an order by <see cref="T:Microsoft.OData.Edm.IEdmProperty"/> expression.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.OrderByCountNode.#ctor(Microsoft.OData.UriParser.OrderByClause)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.OrderByCountNode"/> class.
            </summary>
            <param name="orderByClause">The orderby clause representing property access.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.OrderByCountNode.OrderByClause">
            <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.OData.Query.OrderByCountNode.OrderByClause"/> of this node.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.OrderByItNode">
            <summary>
            Represents the order by expression '$it' in the $orderby clause.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.OrderByItNode.#ctor(Microsoft.OData.UriParser.OrderByDirection)">
            <summary>
            Instantiates a new instance of <see cref="T:Microsoft.AspNetCore.OData.Query.OrderByItNode"/> class.
            </summary>
            <param name="direction">The <see cref="T:Microsoft.OData.UriParser.OrderByDirection"/> for this node.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.OrderByNode">
            <summary>
            Represents a single order by expression in the $orderby clause.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.OrderByNode.#ctor(Microsoft.OData.UriParser.OrderByDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.OrderByNode"/> class.
            </summary>
            <param name="direction">The direction of the sort order.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.OrderByNode.#ctor(Microsoft.OData.UriParser.OrderByClause)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.OrderByNode"/> class.
            </summary>
            <param name="orderByClause">The clause of the sort order.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.OrderByNode.Direction">
            <summary>
            Gets the <see cref="T:Microsoft.OData.UriParser.OrderByDirection"/> for the current node.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.OrderByNode.CreateCollection(Microsoft.OData.UriParser.OrderByClause)">
            <summary>
            Creates a list of <see cref="T:Microsoft.AspNetCore.OData.Query.OrderByNode"/> instances from a linked list of <see cref="T:Microsoft.OData.UriParser.OrderByClause"/> instances.
            </summary>
            <param name="orderByClause">The head of the <see cref="T:Microsoft.OData.UriParser.OrderByClause"/> linked list.</param>
            <returns>The list of new <see cref="T:Microsoft.AspNetCore.OData.Query.OrderByPropertyNode"/> instances.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.OrderByOpenPropertyNode">
            <summary>
            Represents ordering on a dynamic property
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.OrderByOpenPropertyNode.#ctor(Microsoft.OData.UriParser.OrderByClause)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.OrderByOpenPropertyNode"/> class.
            </summary>
            <param name="orderByClause">The order by clause for this open property.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.OrderByOpenPropertyNode.OrderByClause">
            <summary>
            The order by clause
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.OrderByOpenPropertyNode.PropertyName">
            <summary>
            The name of the dynamic property
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.OrderByPropertyNode">
            <summary>
            Represents an order by <see cref="T:Microsoft.OData.Edm.IEdmProperty"/> expression.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.OrderByPropertyNode.#ctor(Microsoft.OData.UriParser.OrderByClause)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.OrderByPropertyNode"/> class.
            </summary>
            <param name="orderByClause">The orderby clause representing property access.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.OrderByPropertyNode.#ctor(Microsoft.OData.Edm.IEdmProperty,Microsoft.OData.UriParser.OrderByDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.OrderByPropertyNode"/> class.
            </summary>
            <param name="property">The <see cref="T:Microsoft.OData.Edm.IEdmProperty"/> for this node.</param>
            <param name="direction">The <see cref="T:Microsoft.OData.UriParser.OrderByDirection"/> for this node.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.OrderByPropertyNode.OrderByClause">
            <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.OData.Query.OrderByPropertyNode.OrderByClause"/> of this node.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.OrderByPropertyNode.Property">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.IEdmProperty"/> for the current node.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext">
            <summary>
            This defines some context information used to perform query composition.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryContext.#ctor(Microsoft.OData.Edm.IEdmModel,System.Type,Microsoft.OData.UriParser.ODataPath)">
            <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/> with <see cref="T:Microsoft.OData.Edm.IEdmModel" />, element CLR type,
            and <see cref="T:Microsoft.OData.UriParser.ODataPath" />.
            </summary>
            <param name="model">The EdmModel that includes the <see cref="T:Microsoft.OData.Edm.IEdmType"/> corresponding to
            the given <paramref name="elementClrType"/>.</param>
            <param name="elementClrType">The CLR type of the element of the collection being queried.</param>
            <param name="path">The parsed <see cref="T:Microsoft.OData.UriParser.ODataPath"/>.</param>
            <remarks>
            This is a public constructor used for stand-alone scenario; in this case, the services
            container may not be present.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryContext.#ctor(Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmType,Microsoft.OData.UriParser.ODataPath)">
            <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/> with <see cref="T:Microsoft.OData.Edm.IEdmModel" />, element EDM type,
            and <see cref="T:Microsoft.OData.UriParser.ODataPath" />.
            </summary>
            <param name="model">The EDM model the given EDM type belongs to.</param>
            <param name="elementType">The EDM type of the element of the collection being queried.</param>
            <param name="path">The parsed <see cref="T:Microsoft.OData.UriParser.ODataPath"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryContext.DefaultQuerySettings">
            <summary>
            Gets the given <see cref="P:Microsoft.AspNetCore.OData.Query.ODataQueryContext.DefaultQuerySettings"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryContext.Model">
            <summary>
            Gets the given <see cref="T:Microsoft.OData.Edm.IEdmModel"/> that contains the EntitySet.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryContext.ElementType">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.IEdmType"/> of the element.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryContext.NavigationSource">
            <summary>
            Gets the <see cref="T:Microsoft.OData.Edm.IEdmNavigationSource"/> that contains the element.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryContext.ElementClrType">
            <summary>
            Gets the CLR type of the element.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryContext.Path">
            <summary>
            Gets the <see cref="T:Microsoft.OData.UriParser.ODataPath"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryContext.RequestContainer">
            <summary>
            Gets the request container.
            </summary>
            <remarks>
            The services container may not be present. See the constructor in this file for
            use in stand-alone scenarios.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryContextExtensions.GetFilterBinder(Microsoft.AspNetCore.OData.Query.ODataQueryContext)">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.IFilterBinder"/>.
            </summary>
            <param name="context">The query context.</param>
            <returns>The built <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.IFilterBinder"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryContextExtensions.GetSearchBinder(Microsoft.AspNetCore.OData.Query.ODataQueryContext)">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.ISearchBinder"/>.
            </summary>
            <param name="context">The query context.</param>
            <returns>The built <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.ISearchBinder"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryContextExtensions.GetSelectExpandBinder(Microsoft.AspNetCore.OData.Query.ODataQueryContext)">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.ISelectExpandBinder"/>.
            </summary>
            <param name="context">The query context.</param>
            <returns>The built <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.ISelectExpandBinder"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryContextExtensions.GetOrderByBinder(Microsoft.AspNetCore.OData.Query.ODataQueryContext)">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.IOrderByBinder"/>.
            </summary>
            <param name="context">The query context.</param>
            <returns>The built <see cref="T:Microsoft.AspNetCore.OData.Query.Expressions.IOrderByBinder"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryContextExtensions.GetAssemblyResolver(Microsoft.AspNetCore.OData.Query.ODataQueryContext)">
            <summary>
            Gets the <see cref="T:Microsoft.OData.ModelBuilder.IAssemblyResolver"/>.
            </summary>
            <param name="context">The query context.</param>
            <returns>The built <see cref="T:Microsoft.OData.ModelBuilder.IAssemblyResolver"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.ODataQueryOptions">
            <summary>
            This defines a composite OData query options that can be used to perform query composition.
            Currently this only supports $filter, $orderby, $top, $skip, and $count.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.#ctor(Microsoft.AspNetCore.OData.Query.ODataQueryContext,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryOptions"/> class based on the incoming request and some metadata information from
            the <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> and some type information.</param>
            <param name="request">The incoming request message.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.Request">
            <summary>
            Gets the request message associated with this instance.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.Context">
            <summary>
             Gets the given <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.RawValues">
            <summary>
            Gets the raw string of all the OData query options
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.SelectExpand">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Query.SelectExpandQueryOption"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.Apply">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Query.ApplyQueryOption"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.Compute">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Query.ComputeQueryOption"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.Filter">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.Search">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Query.SearchQueryOption"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.OrderBy">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Query.OrderByQueryOption"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.Skip">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Query.SkipQueryOption"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.SkipToken">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Query.SkipTokenQueryOption"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.Top">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Query.TopQueryOption"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.Count">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Query.CountQueryOption"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.Validator">
            <summary>
            Gets or sets the query validator.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.IsSystemQueryOption(System.String)">
            <summary>
            Check if the given query option is an OData system query option using $-prefix-required theme.
            </summary>
            <param name="queryOptionName">The name of the query option.</param>
            <returns>Returns <c>true</c> if the query option is an OData system query option.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.IsSystemQueryOption(System.String,System.Boolean)">
            <summary>
            Check if the given query option is an OData system query option.
            </summary>
            <param name="queryOptionName">The name of the query option.</param>
            <param name="isDollarSignOptional">Whether the optional-$-prefix scheme is used for OData system query.</param>
            <returns>Returns <c>true</c> if the query option is an OData system query option.</returns>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.IfMatch">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Query.ETag"/> from IfMatch header.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.IfNoneMatch">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Query.ETag"/> from IfNoneMatch header.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.GetETag(Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Gets the EntityTagHeaderValue ETag.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.IsSupportedQueryOption(System.String)">
            <summary>
            Check if the given query option is the supported query option.
            </summary>
            <param name="queryOptionName">The name of the query option.</param>
            <returns>Returns <c>true</c> if the query option is the supported query option.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable)">
            <summary>
            Apply the individual query to the given IQueryable in the right order.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable,Microsoft.AspNetCore.OData.Query.AllowedQueryOptions)">
            <summary>
            Apply the individual query to the given IQueryable in the right order.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="ignoreQueryOptions">The query parameters that are already applied in queries.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable,Microsoft.AspNetCore.OData.Query.ODataQuerySettings,Microsoft.AspNetCore.OData.Query.AllowedQueryOptions)">
            <summary>
            Apply the individual query to the given IQueryable in the right order.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="querySettings">The settings to use in query composition.</param>
            <param name="ignoreQueryOptions">The query parameters that are already applied in queries.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable,Microsoft.AspNetCore.OData.Query.ODataQuerySettings)">
            <summary>
            Apply the individual query to the given IQueryable in the right order.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="querySettings">The settings to use in query composition.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.GenerateStableOrder">
            <summary>
            Generates the Stable OrderBy query option based on the existing OrderBy and other query options. 
            </summary>
            <returns>An order by query option that ensures stable ordering of the results.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.ApplyTo(System.Object,Microsoft.AspNetCore.OData.Query.ODataQuerySettings,Microsoft.AspNetCore.OData.Query.AllowedQueryOptions)">
            <summary>
            Apply the individual query to the given IQueryable in the right order.
            </summary>
            <param name="entity">The original entity.</param>
            <param name="querySettings">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQuerySettings"/> that contains all the query application related settings.</param>
            <param name="ignoreQueryOptions">The query parameters that are already applied in queries.</param>
            <returns>The new entity after the $select and $expand query has been applied to.</returns>
            <remarks>Only $select and $expand query options can be applied on single entities. This method throws if the query contains any other
            query options.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.ApplyTo(System.Object,Microsoft.AspNetCore.OData.Query.ODataQuerySettings)">
            <summary>
            Applies the query to the given entity using the given <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQuerySettings"/>.
            </summary>
            <param name="entity">The original entity.</param>
            <param name="querySettings">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQuerySettings"/> that contains all the query application related settings.</param>
            <returns>The new entity after the $select and $expand query has been applied to.</returns>
            <remarks>Only $select and $expand query options can be applied on single entities. This method throws if the query contains any other
            query options.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.Validate(Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Validate all OData queries, including $skip, $top, $orderby and $filter, based on the given <paramref name="validationSettings"/>.
            It throws an ODataException if validation failed.
            </summary>
            <param name="validationSettings">The <see cref="T:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings"/> instance which contains all the validation settings.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.EnsureStableSortOrderBy(Microsoft.AspNetCore.OData.Query.OrderByQueryOption,Microsoft.AspNetCore.OData.Query.ODataQueryContext,System.Collections.Generic.List{System.String})">
            <summary>
            Ensures the given <see cref="T:Microsoft.AspNetCore.OData.Query.OrderByQueryOption"/> will produce a stable sort.
            If it will, the input <paramref name="orderBy"/> will be returned
            unmodified.  If the given <see cref="T:Microsoft.AspNetCore.OData.Query.OrderByQueryOption"/> will not produce a
            stable sort, a new <see cref="T:Microsoft.AspNetCore.OData.Query.OrderByQueryOption"/> instance will be created
            and returned.
            </summary>
            <param name="orderBy">The <see cref="T:Microsoft.AspNetCore.OData.Query.OrderByQueryOption"/> to evaluate.</param>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>.</param>
            <param name="applySortOptions"></param>
            <returns>An <see cref="T:Microsoft.AspNetCore.OData.Query.OrderByQueryOption"/> that will produce a stable sort.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.LimitResults``1(System.Linq.IQueryable{``0},System.Int32,System.Boolean@)">
            <summary>
            Limits the query results to a maximum number of results.
            </summary>
            <typeparam name="T">The entity CLR type</typeparam>
            <param name="queryable">The queryable to limit.</param>
            <param name="limit">The query result limit.</param>
            <param name="resultsLimited"><c>true</c> if the query results were limited; <c>false</c> otherwise</param>
            <returns>The limited query results.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.LimitResults``1(System.Linq.IQueryable{``0},System.Int32,System.Boolean,System.Boolean@)">
            <summary>
            Limits the query results to a maximum number of results.
            </summary>
            <typeparam name="T">The entity CLR type</typeparam>
            <param name="queryable">The queryable to limit.</param>
            <param name="limit">The query result limit.</param>
            <param name="parameterize">Flag indicating whether constants should be parameterized</param>
            <param name="resultsLimited"><c>true</c> if the query results were limited; <c>false</c> otherwise</param>
            <returns>The limited query results.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryOptions.Initialize(Microsoft.AspNetCore.OData.Query.ODataQueryContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryOptions"/> class based on the incoming request and some metadata information from
            the <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> and some type information.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.ODataQueryOptions`1">
            <summary>
            This defines a composite OData query options that can be used to perform query composition.
            Currently this only supports $filter, $orderby, $top, $skip.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryOptions`1.#ctor(Microsoft.AspNetCore.OData.Query.ODataQueryContext,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryOptions"/> class based on the incoming request and some metadata information from
            the <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> and some type information</param>
            <param name="request">The incoming request message</param>
            <remarks>This signature uses types that are AspNetCore-specific.</remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryOptions`1.IfMatch">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Query.ETag`1"/> from IfMatch header.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQueryOptions`1.IfNoneMatch">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.OData.Query.ETag`1"/> from IfNoneMatch header.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryOptions`1.GetETag(Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Gets the EntityTagHeaderValue ETag>.
            </summary>
            <remarks>This signature uses types that are AspNetCore-specific.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryOptions`1.ApplyTo(System.Linq.IQueryable)">
            <summary>
            Apply the individual query to the given IQueryable in the right order.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryOptions`1.ApplyTo(System.Linq.IQueryable,Microsoft.AspNetCore.OData.Query.ODataQuerySettings)">
            <summary>
            Apply the individual query to the given IQueryable in the right order.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="querySettings">The settings to use in query composition.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the query has been applied to.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.ODataQueryParameterBindingAttribute">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinderAttribute"/> to bind parameters of type <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryOptions"/> to the OData query from the incoming request.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryParameterBindingAttribute.#ctor">
            <summary>
            Instantiates a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryParameterBindingAttribute"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.ODataQueryRequestMiddleware">
            <summary>
            Defines the middleware for handling OData $query requests.
            This middleware essentially transforms the incoming request (Post) to a "Get" request.
            Be noted: should put this middle ware before "UseRouting()".
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryRequestMiddleware.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.OData.Query.IODataQueryRequestParser},Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Instantiates a new instance of <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryRequestMiddleware"/>.
            </summary>
            <param name="queryRequestParsers">The query request parsers.</param>
            <param name="next">The next middleware.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryRequestMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invoke the OData $query middleware.
            </summary>
            <param name="context">The http context.</param>
            <returns>A task that can be awaited.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQueryRequestMiddleware.TransformQueryRequestAsync(Microsoft.AspNetCore.OData.Query.IODataQueryRequestParser,Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Transforms a POST request targeted at a resource path ending in $query into a GET request.
            The query options are parsed from the request body and appended to the request URL.
            </summary>
            <param name="parser">The query request parser.</param>
            <param name="request">The Http request.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.ODataQuerySettings">
            <summary>
            This class describes the settings to use during query composition.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ODataQuerySettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQuerySettings" /> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQuerySettings.TimeZone">
            <summary>
            Gets or sets the <see cref="T:System.TimeZoneInfo"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQuerySettings.ModelBoundPageSize">
            <summary>
            Gets or sets the maximum number of query results to return based on the type or property.
            </summary>
            <value>
            The maximum number of query results to return based on the type or property,
            or <c>null</c> if there is no limit.
            </value>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQuerySettings.EnsureStableOrdering">
            <summary>
            Gets or sets a value indicating whether query composition should
            alter the original query when necessary to ensure a stable sort order.
            </summary>
            <value>A <c>true</c> value indicates the original query should
            be modified when necessary to guarantee a stable sort order.
            A <c>false</c> value indicates the sort order can be considered
            stable without modifying the query.  Query providers that ensure
            a stable sort order should set this value to <c>false</c>.
            The default value is <c>true</c>.</value>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQuerySettings.HandleNullPropagation">
            <summary>
            Gets or sets a value indicating how null propagation should
            be handled during query composition.
            </summary>
            <value>
            The default is <see cref="F:Microsoft.AspNetCore.OData.Query.HandleNullPropagationOption.Default"/>.
            </value>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQuerySettings.EnableConstantParameterization">
            <summary>
            Gets or sets a value indicating whether constants should be parameterized. Parameterizing constants
            would result in better performance with Entity framework.
            </summary>
            <value>The default value is <c>true</c>.</value>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQuerySettings.EnableCorrelatedSubqueryBuffering">
            <summary>
            Gets or sets a value indicating whether queries with expanded navigations should be formulated
            to encourage correlated sub-query results to be buffered.
            Buffering correlated sub-query results can reduce the number of queries from N + 1 to 2
            by buffering results from the sub-query.
            </summary>
            <value>The default value is <c>false</c>.</value>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQuerySettings.PageSize">
            <summary>
            Gets or sets the maximum number of query results to return.
            </summary>
            <value>
            The maximum number of query results to return, or <c>null</c> if there is no limit.
            </value>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataQuerySettings.HandleReferenceNavigationPropertyExpandFilter">
            <summary>
            Honor $filter inside $expand of non-collection navigation property.
            The expanded property is only populated when the filter evaluates to true.
            This setting is false by default.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator">
            <summary>
            This defines a translator to translate parameter alias nodes.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.#ctor(System.Collections.Generic.IDictionary{System.String,Microsoft.OData.UriParser.SingleValueNode})">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator"/>.
            </summary>
            <param name="parameterAliasNodes">Parameter alias nodes mapping.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.AllNode)">
            <summary>
            Translate an AllNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.AnyNode)">
            <summary>
            Translate an AnyNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.BinaryOperatorNode)">
            <summary>
            Translate a BinaryOperatorNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.InNode)">
            <summary>
            Translate an InNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.CollectionFunctionCallNode)">
            <summary>
            Translate a CollectionFunctionCallNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.CollectionNavigationNode)">
            <summary>
            Translate a CollectionNavigationNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.CollectionOpenPropertyAccessNode)">
            <summary>
            Translate a CollectionOpenPropertyAccessNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.CollectionComplexNode)">
            <summary>
            Translate a CollectionComplexNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.CollectionPropertyAccessNode)">
            <summary>
            Translate a CollectionPropertyAccessNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.ConstantNode)">
            <summary>
            Translate a ConstantNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The original node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.CollectionConstantNode)">
            <summary>
            Translate a CollectionConstantNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The original node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.ConvertNode)">
            <summary>
            Translate a ConvertNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.CollectionResourceCastNode)">
            <summary>
            Translate an CollectionResourceCastNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.CollectionResourceFunctionCallNode)">
            <summary>
            Translate an CollectionResourceFunctionCallNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.ResourceRangeVariableReferenceNode)">
            <summary>
            Translate an ResourceRangeVariableReferenceNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The original node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.NamedFunctionParameterNode)">
            <summary>
            Translate a NamedFunctionParameterNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.NonResourceRangeVariableReferenceNode)">
            <summary>
            Translate a NonResourceRangeVariableReferenceNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The original node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.ParameterAliasNode)">
            <summary>
            Translate a ParameterAliasNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.SearchTermNode)">
            <summary>
            Translate a SearchTermNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The original node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.SingleResourceCastNode)">
            <summary>
            Translate a SingleResourceCastNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.SingleResourceFunctionCallNode)">
            <summary>
            Translate a SingleResourceFunctionCallNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.SingleNavigationNode)">
            <summary>
            Translate a SingleNavigationNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.SingleValueFunctionCallNode)">
            <summary>
            Translate a SingleValueFunctionCallNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.SingleValueOpenPropertyAccessNode)">
            <summary>
            Translate a SingleValueOpenPropertyAccessNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.SingleValuePropertyAccessNode)">
            <summary>
            Translate a SingleValuePropertyAccessNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.SingleComplexNode)">
            <summary>
            Translate a SingleComplexNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.UnaryOperatorNode)">
            <summary>
            Translate an UnaryOperatorNode.
            </summary>
            <param name="nodeIn">The node to be translated.</param>
            <returns>The translated node.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ParameterAliasNodeTranslator.Visit(Microsoft.OData.UriParser.CountNode)">
            <summary> 
            Translate a CountNode. 
            </summary> 
            <param name="nodeIn">The node to be translated.</param> 
            <returns>The translated node.</returns> 
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.QueryFilterProvider">
            <summary>
            An implementation of <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterProvider" /> that applies an action filter to
            any action with an <see cref="T:System.Linq.IQueryable" /> or <see cref="T:System.Linq.IQueryable`1" /> return type
            that doesn't bind a parameter of type <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryOptions" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.QueryFilterProvider.#ctor(Microsoft.AspNetCore.Mvc.Filters.IActionFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.QueryFilterProvider" /> class.
            </summary>
            <param name="queryFilter">The action filter that executes the query.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.QueryFilterProvider.QueryFilter">
            <summary>
            Gets the action filter that executes the query.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.QueryFilterProvider.Order">
            <summary>
            Gets the order value for determining the order of execution of providers. Providers
            execute in ascending numeric value of the Microsoft.AspNetCore.Mvc.Filters.IFilterProvider.Order
            property.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.QueryFilterProvider.OnProvidersExecuting(Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext)">
            <summary>
            Provides filters to apply to the specified action.
            </summary>
            <param name="context">The filter context.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.QueryFilterProvider.OnProvidersExecuted(Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext)">
            <summary>
            Summary:
            Called in decreasing Microsoft.AspNetCore.Mvc.Filters.IFilterProvider.Order,
            after all Microsoft.AspNetCore.Mvc.Filters.IFilterProviders have executed once.
            </summary>
            <param name="context">The Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.QueryFilterProvider.IsIQueryable(System.Type)">
            <summary>
            Determines whether the given type is IQueryable.
            </summary>
            <param name="type">The type</param>
            <returns><c>true</c> if the type is IQueryable.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.ApplyQueryOption">
            <summary>
            This defines a $apply OData query option for querying.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ApplyQueryOption.#ctor(System.String,Microsoft.AspNetCore.OData.Query.ODataQueryContext,Microsoft.OData.UriParser.ODataQueryOptionParser)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.AspNetCore.OData.Query.ApplyQueryOption"/> based on the raw $apply value and
            an EdmModel from <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>.
            </summary>
            <param name="rawValue">The raw value for $filter query. It can be null or empty.</param>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> and some type information</param>
            <param name="queryOptionParser">The <see cref="T:Microsoft.OData.UriParser.ODataQueryOptionParser"/> which is used to parse the query option.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ApplyQueryOption.Context">
            <summary>
             Gets the given <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ApplyQueryOption.ResultClrType">
            <summary>
            ClrType for result of transformations
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ApplyQueryOption.ApplyClause">
            <summary>
            Gets the parsed <see cref="P:Microsoft.AspNetCore.OData.Query.ApplyQueryOption.ApplyClause"/> for this query option.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ApplyQueryOption.RawValue">
            <summary>
             Gets the raw $apply value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ApplyQueryOption.ApplyTo(System.Linq.IQueryable,Microsoft.AspNetCore.OData.Query.ODataQuerySettings)">
            <summary>
            Apply the apply query to the given IQueryable.
            </summary>
            <remarks>
            The <see cref="P:Microsoft.AspNetCore.OData.Query.ODataQuerySettings.HandleNullPropagation"/> property specifies
            how this method should handle null propagation.
            </remarks>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="querySettings">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQuerySettings"/> that contains all the query application related settings.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the filter query has been applied to.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.ComputeQueryOption">
            <summary>
            This defines a $compute OData query option for querying.
            The $compute system query option allows clients to define computed properties that can be used in a $select or within a $filter or $orderby expression.
            Computed properties SHOULD be included as dynamic properties in the result and MUST be included if $select is specified with the computed property name, or star (*).
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.ComputeQueryOption.#ctor(System.String,Microsoft.AspNetCore.OData.Query.ODataQueryContext,Microsoft.OData.UriParser.ODataQueryOptionParser)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.AspNetCore.OData.Query.ComputeQueryOption"/> based on the raw $compute value and
            an EdmModel from <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>.
            </summary>
            <param name="rawValue">The raw value for $compute query. It can be null or empty.</param>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> and some type information</param>
            <param name="queryOptionParser">The <see cref="T:Microsoft.OData.UriParser.ODataQueryOptionParser"/> which is used to parse the query option.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ComputeQueryOption.Context">
            <summary>
            Gets the given <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ComputeQueryOption.ResultClrType">
            <summary>
            ClrType for result of transformations
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ComputeQueryOption.ComputeClause">
            <summary>
            Gets the parsed <see cref="P:Microsoft.AspNetCore.OData.Query.ComputeQueryOption.ComputeClause"/> for this query option.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ComputeQueryOption.RawValue">
            <summary>
             Gets the raw $compute value.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.CountQueryOption">
            <summary>
            Represents the value of the $count query option and exposes a way to retrieve the number of entities that satisfy a query.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.CountQueryOption.#ctor(System.String,Microsoft.AspNetCore.OData.Query.ODataQueryContext,Microsoft.OData.UriParser.ODataQueryOptionParser)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.CountQueryOption" /> class.
            </summary>
            <param name="rawValue">The raw value for the $count query option.</param>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/> which contains the query context.</param>
            <param name="queryOptionParser">The <see cref="T:Microsoft.OData.UriParser.ODataQueryOptionParser"/> which is used to parse the query option.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.CountQueryOption.Context">
            <summary>
            Gets the given <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.CountQueryOption.RawValue">
            <summary>
            Gets the raw $count value.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.CountQueryOption.Value">
            <summary>
            Gets the value of the $count in a parsed form.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.CountQueryOption.Validator">
            <summary>
            Gets or sets the $count query validator.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.CountQueryOption.Validate(Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Validate the count query based on the given <paramref name="validationSettings"/>.
            It throws an ODataException if validation failed.
            </summary>
            <param name="validationSettings">The <see cref="T:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings"/> instance
            which contains all the validation settings.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.CountQueryOption.GetEntityCount(System.Linq.IQueryable)">
            <summary>
            Gets the number of entities that satisfy the given query if the response should include a count query option, or <c>null</c> otherwise.
            </summary>
            <param name="query">The query to compute the count for.</param>
            <returns>The number of entities that satisfy the specified query if the response should include a count query option, or <c>null</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.CountQueryOption.GetEntityCountFunc(System.Linq.IQueryable)">
            <summary>
            Gets the Func of entities number that satisfy the given query if the response should include a count query option, or <c>null</c> otherwise.
            </summary>
            <param name="query">The query to compute the count for.</param>
            <returns>The Func of entities number that satisfy the specified query if the response should include a count query option, or <c>null</c> otherwise.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.DefaultSkipTokenHandler">
            <summary>
            Default implementation of SkipTokenHandler for the service.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.DefaultSkipTokenHandler.GenerateNextPageLink(System.Uri,System.Int32,System.Object,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Returns the URI for NextPageLink
            </summary>
            <param name="baseUri">BaseUri for nextlink. It should be request URI for top level resource and navigation link for nested resource.</param>
            <param name="pageSize">Maximum number of records in the set of partial results for a resource.</param>
            <param name="instance">Instance based on which SkipToken value will be generated.</param>
            <param name="context">Serializer context</param>
            <returns>Returns the URI for NextPageLink. If a null object is passed for the instance, resorts to the default paging mechanism of using $skip and $top.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.DefaultSkipTokenHandler.GenerateSkipTokenValue(System.Object,Microsoft.OData.Edm.IEdmModel,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Query.OrderByNode},System.TimeZoneInfo)">
            <summary>
            Generates a string to be used as the skip token value within the next link.
            </summary>
            <param name="lastMember"> Object based on which SkipToken value will be generated.</param>
            <param name="model">The edm model.</param>
            <param name="orderByNodes">List of orderByNodes used to generate the skiptoken value.</param>
            <param name="timeZoneInfo">The timezone info.</param>
            <returns>Value for the skiptoken to be used in the next link.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.DefaultSkipTokenHandler.ApplyTo``1(System.Linq.IQueryable{``0},Microsoft.AspNetCore.OData.Query.SkipTokenQueryOption,Microsoft.AspNetCore.OData.Query.ODataQuerySettings,Microsoft.AspNetCore.OData.Query.ODataQueryOptions)">
            <summary>
            Apply the $skiptoken query to the given IQueryable.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="skipTokenQueryOption">The skiptoken query option which needs to be applied to this query option.</param>
            <param name="querySettings">The query settings to use while applying this query option.</param>
            <param name="queryOptions">Information about the other query options.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the skiptoken query has been applied to, could be null.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.DefaultSkipTokenHandler.ApplyTo(System.Linq.IQueryable,Microsoft.AspNetCore.OData.Query.SkipTokenQueryOption,Microsoft.AspNetCore.OData.Query.ODataQuerySettings,Microsoft.AspNetCore.OData.Query.ODataQueryOptions)">
            <summary>
            Apply the $skiptoken query to the given IQueryable.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>, not null.</param>
            <param name="skipTokenQueryOption">The skiptoken query option which needs to be applied to this query option, not null.</param>
            <param name="querySettings">The query settings to use while applying this query option, not null.</param>
            <param name="queryOptions">Information about the other query options, could be null.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the skiptoken query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.DefaultSkipTokenHandler.ApplyToCore(System.Linq.IQueryable,Microsoft.AspNetCore.OData.Query.ODataQuerySettings,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Query.OrderByNode},Microsoft.AspNetCore.OData.Query.ODataQueryContext,System.String)">
            <summary>
            Core logic for applying the query option to the IQueryable. 
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="querySettings">Query setting used for validating the query option.</param>
            <param name="orderByNodes">OrderBy information required to correctly apply the query option for default implementation.</param>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> and some type information</param>
            <param name="skipTokenRawValue">The raw string value of the skiptoken query parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.DefaultSkipTokenHandler.PopulatePropertyValuePairs(System.String,Microsoft.AspNetCore.OData.Query.ODataQueryContext)">
            <summary>
            Generates a dictionary with property name and property values specified in the skiptoken value.
            </summary>
            <param name="value">The skiptoken string value.</param>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> and some type information</param>
            <returns>Dictionary with property name and property value in the skiptoken value.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.DefaultSkipTokenHandler.GetPropertiesForSkipToken(System.Object,Microsoft.OData.Edm.IEdmModel,System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Query.OrderByNode})">
            <summary>
            Returns the list of properties that should be used for generating the skiptoken value. 
            </summary>
            <param name="lastMember">The last record that will be returned in the response.</param>
            <param name="model">IEdmModel</param>
            <param name="orderByNodes">OrderBy nodes in the original request.</param>
            <returns>List of properties that should be used for generating the skiptoken value.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.DefaultSkipTokenHandler.GetTypeFromObject(System.Object,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Gets the EdmType from the Instance which may be a select expand wrapper.
            </summary>
            <param name="value">Instance for which the edmType needs to be computed.</param>
            <param name="model">IEdmModel</param>
            <returns>The EdmType of the underlying instance.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption">
            <summary>
            This defines a $filter OData query option for querying.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.FilterQueryOption.#ctor(System.String,Microsoft.AspNetCore.OData.Query.ODataQueryContext,Microsoft.OData.UriParser.ODataQueryOptionParser)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption"/> based on the raw $filter value and
            an EdmModel from <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>.
            </summary>
            <param name="rawValue">The raw value for $filter query. It can be null or empty.</param>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> and some type information</param>
            <param name="queryOptionParser">The <see cref="T:Microsoft.OData.UriParser.ODataQueryOptionParser"/> which is used to parse the query option.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.FilterQueryOption.Context">
            <summary>
             Gets the given <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.FilterQueryOption.Validator">
            <summary>
            Gets or sets the Filter Query Validator
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.FilterQueryOption.Compute">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.OData.Query.ComputeQueryOption"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.FilterQueryOption.FilterClause">
            <summary>
            Gets the parsed <see cref="P:Microsoft.AspNetCore.OData.Query.FilterQueryOption.FilterClause"/> for this query option.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.FilterQueryOption.RawValue">
            <summary>
             Gets the raw $filter value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.FilterQueryOption.ApplyTo(System.Linq.IQueryable,Microsoft.AspNetCore.OData.Query.ODataQuerySettings)">
            <summary>
            Apply the filter query to the given IQueryable.
            </summary>
            <remarks>
            The <see cref="P:Microsoft.AspNetCore.OData.Query.ODataQuerySettings.HandleNullPropagation"/> property specifies
            how this method should handle null propagation.
            </remarks>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="querySettings">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQuerySettings"/> that contains all the query application related settings.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the filter query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.FilterQueryOption.Validate(Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Validate the filter query based on the given <paramref name="validationSettings"/>. It throws an ODataException if validation failed.
            </summary>
            <param name="validationSettings">The <see cref="T:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings"/> instance which contains all the validation settings.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.ODataRawQueryOptions">
            <summary>
            Represents the raw query values in the string format from the incoming request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataRawQueryOptions.Filter">
            <summary>
             Gets the raw $filter query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataRawQueryOptions.Apply">
            <summary>
             Gets the raw $apply query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataRawQueryOptions.Compute">
            <summary>
             Gets the raw $compute query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataRawQueryOptions.Search">
            <summary>
             Gets the raw $search query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataRawQueryOptions.OrderBy">
            <summary>
             Gets the raw $orderby query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataRawQueryOptions.Top">
            <summary>
             Gets the raw $top query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataRawQueryOptions.Skip">
            <summary>
             Gets the raw $skip query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataRawQueryOptions.Select">
            <summary>
             Gets the raw $select query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataRawQueryOptions.Expand">
            <summary>
             Gets the raw $expand query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataRawQueryOptions.Count">
            <summary>
             Gets the raw $count query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataRawQueryOptions.Format">
            <summary>
             Gets the raw $format query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataRawQueryOptions.SkipToken">
            <summary>
             Gets the raw $skiptoken query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.ODataRawQueryOptions.DeltaToken">
            <summary>
             Gets the raw $deltatoken query value from the incoming request Uri if exists.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.OrderByQueryOption">
            <summary>
            This defines a $orderby OData query option for querying.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.OrderByQueryOption.#ctor(System.String,Microsoft.AspNetCore.OData.Query.ODataQueryContext,Microsoft.OData.UriParser.ODataQueryOptionParser)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.AspNetCore.OData.Query.OrderByQueryOption"/> based on the raw $orderby value and
            an EdmModel from <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>.
            </summary>
            <param name="rawValue">The raw value for $orderby query. It can be null or empty.</param>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> and some type information</param>
            <param name="queryOptionParser">The <see cref="T:Microsoft.OData.UriParser.ODataQueryOptionParser"/> which is used to parse the query option.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.OrderByQueryOption.Context">
            <summary>
             Gets the given <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.OrderByQueryOption.OrderByNodes">
            <summary>
            Gets the mutable list of <see cref="T:Microsoft.AspNetCore.OData.Query.OrderByPropertyNode"/> instances for this query option.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.OrderByQueryOption.RawValue">
            <summary>
             Gets the raw $orderby value.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.OrderByQueryOption.Validator">
            <summary>
            Gets or sets the OrderBy Query Validator.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.OrderByQueryOption.Compute">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.OData.Query.ComputeQueryOption"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.OrderByQueryOption.OrderByClause">
            <summary>
            Gets the parsed <see cref="P:Microsoft.AspNetCore.OData.Query.OrderByQueryOption.OrderByClause"/> for this query option.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.OrderByQueryOption.ApplyTo``1(System.Linq.IQueryable{``0})">
            <summary>
            Apply the $orderby query to the given IQueryable.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the orderby query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.OrderByQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},Microsoft.AspNetCore.OData.Query.ODataQuerySettings)">
            <summary>
            Apply the $orderby query to the given IQueryable.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="querySettings">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQuerySettings"/> that contains all the query application related settings.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the orderby query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.OrderByQueryOption.ApplyTo(System.Linq.IQueryable)">
            <summary>
            Apply the $orderby query to the given IQueryable.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the orderby query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.OrderByQueryOption.ApplyTo(System.Linq.IQueryable,Microsoft.AspNetCore.OData.Query.ODataQuerySettings)">
            <summary>
            Apply the $orderby query to the given IQueryable.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="querySettings">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQuerySettings"/> that contains all the query application related settings.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the orderby query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.OrderByQueryOption.Validate(Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Validate the orderby query based on the given <paramref name="validationSettings"/>. It throws an ODataException if validation failed.
            </summary>
            <param name="validationSettings">The <see cref="T:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings"/> instance which contains all the validation settings.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.SearchQueryOption">
            <summary>
            This defines a $search OData query option for querying.
            The $search system query option restricts the result to include only those items matching the specified search expression.
            The definition of what it means to match is dependent upon the implementation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SearchQueryOption.#ctor(System.String,Microsoft.AspNetCore.OData.Query.ODataQueryContext,Microsoft.OData.UriParser.ODataQueryOptionParser)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.AspNetCore.OData.Query.SearchQueryOption"/> based on the raw $search value and
            an EdmModel from <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>.
            </summary>
            <param name="rawValue">The raw value for $search query. It can be null or empty.</param>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> and some type information</param>
            <param name="queryOptionParser">The <see cref="T:Microsoft.OData.UriParser.ODataQueryOptionParser"/> which is used to parse the query option.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.SearchQueryOption.Context">
            <summary>
            Gets the given <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.SearchQueryOption.ResultClrType">
            <summary>
            ClrType for result of transformations
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.SearchQueryOption.SearchClause">
            <summary>
            Gets the parsed <see cref="P:Microsoft.AspNetCore.OData.Query.SearchQueryOption.SearchClause"/> for this query option.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.SearchQueryOption.RawValue">
            <summary>
             Gets the raw $search value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SearchQueryOption.ApplyTo(System.Linq.IQueryable,Microsoft.AspNetCore.OData.Query.ODataQuerySettings)">
            <summary>
            Apply the $search query to the given IQueryable.
            </summary>
            <remarks>
            The <see cref="P:Microsoft.AspNetCore.OData.Query.ODataQuerySettings.HandleNullPropagation"/> property specifies how this method should handle null propagation.
            </remarks>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="querySettings">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQuerySettings"/> that contains all the query application related settings.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the filter query has been applied to.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.SelectExpandQueryOption">
            <summary>
            Represents the OData $select and $expand query options.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SelectExpandQueryOption.#ctor(System.String,System.String,Microsoft.AspNetCore.OData.Query.ODataQueryContext,Microsoft.OData.UriParser.ODataQueryOptionParser)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.SelectExpandQueryOption"/> class.
            </summary>
            <param name="select">The $select query parameter value.</param>
            <param name="expand">The $expand query parameter value.</param>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> and some type information.</param>
            <param name="queryOptionParser">The <see cref="T:Microsoft.OData.UriParser.ODataQueryOptionParser"/> which is used to parse the query option.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.SelectExpandQueryOption.Context">
            <summary>
             Gets the given <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.SelectExpandQueryOption.RawSelect">
            <summary>
            Gets the raw $select value.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.SelectExpandQueryOption.RawExpand">
            <summary>
            Gets the raw $expand value.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.SelectExpandQueryOption.Compute">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.OData.Query.ComputeQueryOption"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.SelectExpandQueryOption.Validator">
            <summary>
            Gets or sets the $select and $expand query validator.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.SelectExpandQueryOption.SelectExpandClause">
            <summary>
            Gets the parsed <see cref="P:Microsoft.AspNetCore.OData.Query.SelectExpandQueryOption.SelectExpandClause"/> for this query option.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.SelectExpandQueryOption.LevelsMaxLiteralExpansionDepth">
            <summary>
            Gets or sets the number of levels that a top level $expand=NavigationProperty($levels=max)
            will be expanded.
            This value will decrease by one with each nesting level in the $expand clause.
            For example, with a property value 5, the following query $expand=A($expand=B($expand=C($levels=max)))
            will be interpreted as $expand=A($expand=B($expand=C($levels=3))).
            If the query gets validated, the <see cref="P:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings.MaxExpansionDepth"/> value
            must be greater than or equal to this value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SelectExpandQueryOption.ApplyTo(System.Linq.IQueryable,Microsoft.AspNetCore.OData.Query.ODataQuerySettings)">
            <summary>
            Applies the $select and $expand query options to the given <see cref="T:System.Linq.IQueryable"/> using the given
            <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQuerySettings"/>.
            </summary>
            <param name="queryable">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="settings">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQuerySettings"/> that contains all the query application related settings.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the filter query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SelectExpandQueryOption.ApplyTo(System.Object,Microsoft.AspNetCore.OData.Query.ODataQuerySettings)">
            <summary>
            Applies the $select and $expand query options to the given entity using the given <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQuerySettings"/>.
            </summary>
            <param name="entity">The original entity.</param>
            <param name="settings">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQuerySettings"/> that contains all the query application related settings.</param>
            <returns>The new entity after the $select and $expand query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SelectExpandQueryOption.Validate(Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Validate the $select and $expand query based on the given <paramref name="validationSettings"/>. It throws an ODataException if validation failed.
            </summary>
            <param name="validationSettings">The <see cref="T:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings"/> instance which contains all the validation settings.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.SkipQueryOption">
            <summary>
            This defines a $skip OData query option for querying.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SkipQueryOption.#ctor(System.String,Microsoft.AspNetCore.OData.Query.ODataQueryContext,Microsoft.OData.UriParser.ODataQueryOptionParser)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.AspNetCore.OData.Query.SkipQueryOption"/> based on the raw $skip value and
            an EdmModel from <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>.
            </summary>
            <param name="rawValue">The raw value for $skip query. It can be null or empty.</param>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> and some type information</param>
            <param name="queryOptionParser">The <see cref="T:Microsoft.OData.UriParser.ODataQueryOptionParser"/> which is used to parse the query option.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.SkipQueryOption.Context">
            <summary>
            Gets the given <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.SkipQueryOption.RawValue">
            <summary>
            Gets the raw $skip value.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.SkipQueryOption.Value">
            <summary>
            Gets the value of the $skip as a parsed integer.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.SkipQueryOption.Validator">
            <summary>
            Gets or sets the Skip Query Validator.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SkipQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},Microsoft.AspNetCore.OData.Query.ODataQuerySettings)">
            <summary>
            Apply the $skip query to the given IQueryable.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="querySettings">The query settings to use while applying this query option.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the skip query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SkipQueryOption.ApplyTo(System.Linq.IQueryable,Microsoft.AspNetCore.OData.Query.ODataQuerySettings)">
            <summary>
            Apply the $skip query to the given IQueryable.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="querySettings">The query settings to use while applying this query option.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the skip query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SkipQueryOption.Validate(Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Validate the skip query based on the given <paramref name="validationSettings"/>. It throws an ODataException if validation failed.
            </summary>
            <param name="validationSettings">The <see cref="T:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings"/> instance which contains all the validation settings.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.SkipTokenHandler">
            <summary>
            Represents how NextLink for paging is generated.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SkipTokenHandler.ApplyTo``1(System.Linq.IQueryable{``0},Microsoft.AspNetCore.OData.Query.SkipTokenQueryOption,Microsoft.AspNetCore.OData.Query.ODataQuerySettings,Microsoft.AspNetCore.OData.Query.ODataQueryOptions)">
            <summary>
            Apply the $skiptoken query to the given IQueryable.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="skipTokenQueryOption">The query option that contains all the relevant information for applying skiptoken.</param>
            <param name="querySettings">The query settings to use while applying this query option.</param>
            <param name="queryOptions">Information about the other query options.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the skiptoken query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SkipTokenHandler.ApplyTo(System.Linq.IQueryable,Microsoft.AspNetCore.OData.Query.SkipTokenQueryOption,Microsoft.AspNetCore.OData.Query.ODataQuerySettings,Microsoft.AspNetCore.OData.Query.ODataQueryOptions)">
            <summary>
            Apply the $skiptoken query to the given IQueryable.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="skipTokenQueryOption">The query option that contains all the relevant information for applying skiptoken.</param>
            <param name="querySettings">The query settings to use while applying this query option.</param>
            <param name="queryOptions">Information about the other query options.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the skiptoken query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SkipTokenHandler.GenerateNextPageLink(System.Uri,System.Int32,System.Object,Microsoft.AspNetCore.OData.Formatter.Serialization.ODataSerializerContext)">
            <summary>
            Returns the URI for NextPageLink
            </summary>
            <param name="baseUri">BaseUri for nextlink.</param>
            <param name="pageSize">Maximum number of records in the set of partial results for a resource.</param>
            <param name="instance">Instance based on which SkipToken value will be generated.</param>
            <param name="context">Serializer context</param>
            <returns>URI for the NextPageLink.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.SkipTokenQueryOption">
            <summary>
            This defines a $skiptoken OData query option for querying.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SkipTokenQueryOption.#ctor(System.String,Microsoft.AspNetCore.OData.Query.ODataQueryContext)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.AspNetCore.OData.Query.SkipQueryOption"/> based on the raw $skiptoken value and
            an EdmModel from <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>.
            </summary>
            <param name="rawValue">The raw value for $skiptoken query.</param>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> and some type information.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.SkipTokenQueryOption.RawValue">
            <summary>
            Gets the raw $skiptoken value.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.SkipTokenQueryOption.Context">
            <summary>
            Gets the given <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.SkipTokenQueryOption.Validator">
            <summary>
            Gets the SkipToken Query Validator.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.SkipTokenQueryOption.Handler">
            <summary>
            Gets the skip token handler.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SkipTokenQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},Microsoft.AspNetCore.OData.Query.ODataQuerySettings,Microsoft.AspNetCore.OData.Query.ODataQueryOptions)">
            <summary>
            Apply the $skiptoken query to the given IQueryable.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="querySettings">The query settings to use while applying this query option.</param>
            <param name="queryOptions">Information about the other query options.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the skiptoken query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SkipTokenQueryOption.ApplyTo(System.Linq.IQueryable,Microsoft.AspNetCore.OData.Query.ODataQuerySettings,Microsoft.AspNetCore.OData.Query.ODataQueryOptions)">
            <summary>
            Apply the $skiptoken query to the given IQueryable.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="querySettings">The query settings to use while applying this query option.</param>
            <param name="queryOptions">Information about the other query options.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the skiptoken query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SkipTokenQueryOption.Validate(Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Validate the skiptoken query based on the given <paramref name="validationSettings"/>. It throws an ODataException if validation failed.
            </summary>
            <param name="validationSettings">The <see cref="T:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings"/> instance which contains all the validation settings.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.TopQueryOption">
            <summary>
            This defines a $top OData query option for querying.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.TopQueryOption.#ctor(System.String,Microsoft.AspNetCore.OData.Query.ODataQueryContext,Microsoft.OData.UriParser.ODataQueryOptionParser)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.AspNetCore.OData.Query.TopQueryOption"/> based on the raw $top value and 
            an EdmModel from <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>.
            </summary>
            <param name="rawValue">The raw value for $top query. It can be null or empty.</param>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/> which contains the <see cref="T:Microsoft.OData.Edm.IEdmModel"/> and some type information</param>
            <param name="queryOptionParser">The <see cref="T:Microsoft.OData.UriParser.ODataQueryOptionParser"/> which is used to parse the query option.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.TopQueryOption.Context">
            <summary>
            Gets the given <see cref="T:Microsoft.AspNetCore.OData.Query.ODataQueryContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.TopQueryOption.RawValue">
            <summary>
            Gets the raw $top value.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.TopQueryOption.Value">
            <summary>
            Gets the value of the $top as a parsed integer.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.TopQueryOption.Validator">
            <summary>
            Gets or sets the Top Query Validator.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.TopQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},Microsoft.AspNetCore.OData.Query.ODataQuerySettings)">
            <summary>
            Apply the $top query to the given IQueryable.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="querySettings">The query settings to use while applying this query option.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the top query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.TopQueryOption.ApplyTo(System.Linq.IQueryable,Microsoft.AspNetCore.OData.Query.ODataQuerySettings)">
            <summary>
            Apply the $top query to the given IQueryable.
            </summary>
            <param name="query">The original <see cref="T:System.Linq.IQueryable"/>.</param>
            <param name="querySettings">The query settings to use while applying this query option.</param>
            <returns>The new <see cref="T:System.Linq.IQueryable"/> after the top query has been applied to.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.TopQueryOption.Validate(Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Validate the top query based on the given <paramref name="validationSettings"/>. It throws an ODataException if validation failed.
            </summary>
            <param name="validationSettings">The <see cref="T:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings"/> instance which contains all the validation settings.</param>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.SelectExpandIncludedProperty._propertySegment">
            <summary>
            the corresponding property segment.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.SelectExpandIncludedProperty._navigationSource">
            <summary>
            the corresponding navigation source. maybe useless
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.SelectExpandIncludedProperty._propertySelectItem">
            <summary>
            the path select item for this property.
            for example: $select=abc or $select=NS.Type/abc
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Query.SelectExpandIncludedProperty._subSelectItems">
            <summary>
            the sub $select and $expand for this property.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SelectExpandIncludedProperty.#ctor(Microsoft.OData.UriParser.PropertySegment)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.SelectExpandIncludedProperty"/> class.
            </summary>
            <param name="propertySegment">The property segment that has this select expand item.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SelectExpandIncludedProperty.#ctor(Microsoft.OData.UriParser.PropertySegment,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.SelectExpandIncludedProperty"/> class.
            </summary>
            <param name="propertySegment">The property segment that has this select expand item.</param>
            <param name="navigationSource">The target navigation source of this property segment.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SelectExpandIncludedProperty.ToPathSelectItem">
            <summary>
            Gets the merged <see cref="T:Microsoft.OData.UriParser.PathSelectItem"/> for this property.
            </summary>
            <returns>Null or the created <see cref="T:Microsoft.OData.UriParser.PathSelectItem"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SelectExpandIncludedProperty.AddSubSelectItem(System.Collections.Generic.IList{Microsoft.OData.UriParser.ODataPathSegment},Microsoft.OData.UriParser.PathSelectItem)">
            <summary>
            Add sub $select item for this include property.
            </summary>
            <param name="remainingSegments">The remaining segments star from this include property.</param>
            <param name="oldSelectItem">The old $select item.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SelectExpandIncludedProperty.AddSubExpandItem(System.Collections.Generic.IList{Microsoft.OData.UriParser.ODataPathSegment},Microsoft.OData.UriParser.ExpandedReferenceSelectItem)">
            <summary>
            Add sub $expand item for this include property.
            </summary>
            <param name="remainingSegments">The remaining segments star from this include property.</param>
            <param name="oldRefItem">The old $expand item.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SelectExpandPathExtensions.GetFirstNonTypeCastSegment(Microsoft.OData.UriParser.ODataSelectPath,System.Collections.Generic.IList{Microsoft.OData.UriParser.ODataPathSegment}@)">
            <summary>
            Verify the $select path and gets the first non type cast segment in a select path.
            For example: $select=NS.SubType1/abc/NS.SubType2/xyz
            => firstPropertySegment: "abc"
            => remainingSegments:  NS.SubType2/xyz
            </summary>
            <param name="selectPath">The input $select path.</param>
            <param name="remainingSegments">The remaining segments after the first non type segment.</param>
            <returns>First non-type cast segment.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.SelectExpandPathExtensions.GetFirstNonTypeCastSegment(Microsoft.OData.UriParser.ODataExpandPath,System.Collections.Generic.IList{Microsoft.OData.UriParser.ODataPathSegment}@)">
            <summary>
            Verify the $expand path and gets the first non type cast segment in this expand path.
            For example: $expand=NS.SubType1/abc/NS.SubType2/nav
            => firstPropertySegment: "abc"
            => remainingSegments:  NS.SubType2/nav
            => leadingTypeSegment: NS.SubType1
            </summary>
            <param name="expandPath">The input $expand path.</param>
            <param name="remainingSegments">The remaining segments after the first non type segment.</param>
            <returns>First non-type cast segment.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Validator.CountQueryValidator">
            <summary>
            Represents a validator used to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.CountQueryOption"/> 
            based on the <see cref="T:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.CountQueryValidator.Validate(Microsoft.AspNetCore.OData.Query.CountQueryOption,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Validates a <see cref="T:Microsoft.AspNetCore.OData.Query.CountQueryOption" />.
            </summary>
            <param name="countQueryOption">The $count query.</param>
            <param name="validationSettings">The validation settings.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator">
            <summary>
            Represents a validator used to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption" /> based on the <see cref="T:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings"/>.
            </summary>
            <remarks>
            Please note this class is not thread safe.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.Validate(Microsoft.AspNetCore.OData.Query.FilterQueryOption,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Validates a <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption" />.
            </summary>
            <param name="filterQueryOption">The $filter query.</param>
            <param name="settings">The validation settings.</param>
            <remarks>
            Please note this method is not thread safe.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.Validate(Microsoft.OData.UriParser.FilterClause,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Validates a <see cref="T:Microsoft.OData.UriParser.FilterClause" />.
            </summary>
            <param name="filterClause">The <see cref="T:Microsoft.OData.UriParser.FilterClause" />.</param>
            <param name="settings">The validation settings.</param>
            <param name="model">The EdmModel.</param>
            <remarks>
            Please note this method is not thread safe.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.ValidateAllNode(Microsoft.OData.UriParser.AllNode,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Override this method to restrict the 'all' query inside the filter query.
            </summary>
            <remarks>
            This method is intended to be called from method overrides in subclasses. This method also supports unit-testing scenarios and is not intended to be called from user code.
            Call the Validate method to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption"/> instance.
            </remarks>
            <param name="allNode">The all node to validate.</param>
            <param name="settings">The validation settings.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.ValidateAnyNode(Microsoft.OData.UriParser.AnyNode,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Override this method to restrict the 'any' query inside the filter query.
            </summary>
            <remarks>
            This method is intended to be called from method overrides in subclasses. This method also supports unit-testing scenarios and is not intended to be called from user code.
            Call the Validate method to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption"/> instance.
            </remarks>
            <param name="anyNode">The any node to validate.</param>
            <param name="settings">The validation settings.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.ValidateBinaryOperatorNode(Microsoft.OData.UriParser.BinaryOperatorNode,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            override this method to restrict the binary operators inside the filter query. That includes all the logical operators except 'not' and all math operators.
            </summary>
            <remarks>
            This method is intended to be called from method overrides in subclasses. This method also supports unit-testing scenarios and is not intended to be called from user code.
            Call the Validate method to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption"/> instance.
            </remarks>
            <param name="binaryOperatorNode">The binary operator node to validate.</param>
            <param name="settings">The validation settings.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.ValidateLogicalOperator(Microsoft.OData.UriParser.BinaryOperatorNode,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Override this method to validate the LogicalOperators such as 'eq', 'ne', 'gt', 'ge', 'lt', 'le', 'and', 'or'.
            
            Please note that 'not' is not included here. Please override ValidateUnaryOperatorNode to customize 'not'.
            </summary>
            <remarks>
            This method is intended to be called from method overrides in subclasses. This method also supports unit-testing scenarios and is not intended to be called from user code.
            Call the Validate method to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption"/> instance.
            </remarks>
            <param name="binaryNode">The binary operator node to validate.</param>
            <param name="settings">The validation settings.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.ValidateArithmeticOperator(Microsoft.OData.UriParser.BinaryOperatorNode,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Override this method for the Arithmetic operators, including add, sub, mul, div, mod.
            </summary>
            <remarks>
            This method is intended to be called from method overrides in subclasses. This method also supports unit-testing scenarios and is not intended to be called from user code.
            Call the Validate method to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption"/> instance.
            </remarks>
            <param name="binaryNode">The binary operator node to validate.</param>
            <param name="settings">The validation settings.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.ValidateConstantNode(Microsoft.OData.UriParser.ConstantNode,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Override this method to restrict the 'constant' inside the filter query.
            </summary>
            <remarks>
            This method is intended to be called from method overrides in subclasses. This method also supports unit-testing scenarios and is not intended to be called from user code.
            Call the Validate method to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption"/> instance.
            </remarks>
            <param name="constantNode">The constant node to validate.</param>
            <param name="settings">The validation settings.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.ValidateConvertNode(Microsoft.OData.UriParser.ConvertNode,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Override this method to restrict the 'cast' inside the filter query.
            </summary>
            <remarks>
            This method is intended to be called from method overrides in subclasses. This method also supports unit-testing scenarios and is not intended to be called from user code.
            Call the Validate method to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption"/> instance.
            </remarks>
            <param name="convertNode">The convert node to validate.</param>
            <param name="settings">The validation settings.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.ValidateCountNode(Microsoft.OData.UriParser.CountNode,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Override this method to restrict the '$count' inside the filter query.
            </summary>
            <param name="countNode">The count node to validate.</param>
            <param name="settings">The validation settings.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.ValidateNavigationPropertyNode(Microsoft.OData.UriParser.QueryNode,Microsoft.OData.Edm.IEdmNavigationProperty,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Override this method for the navigation property node.
            </summary>
            <remarks>
            This method is intended to be called from method overrides in subclasses. This method also supports unit-testing scenarios and is not intended to be called from user code.
            Call the Validate method to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption"/> instance.
            </remarks>
            <param name="sourceNode">The source node to validate.</param>
            <param name="navigationProperty">The navigation property.</param>
            <param name="settings">The validation settings.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.ValidateRangeVariable(Microsoft.OData.UriParser.RangeVariable,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Override this method to validate the parameter used in the filter query.
            </summary>
            <remarks>
            This method is intended to be called from method overrides in subclasses. This method also supports unit-testing scenarios and is not intended to be called from user code.
            Call the Validate method to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption"/> instance.
            </remarks>
            <param name="rangeVariable">The range variable node to validate.</param>
            <param name="settings">The validation settings.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.ValidateSingleValuePropertyAccessNode(Microsoft.OData.UriParser.SingleValuePropertyAccessNode,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Override this method to validate property accessors.
            </summary>
            <remarks>
            This method is intended to be called from method overrides in subclasses. This method also supports unit-testing scenarios and is not intended to be called from user code.
            Call the Validate method to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption"/> instance.
            </remarks>
            <param name="propertyAccessNode">The single value property access node.</param>
            <param name="settings">The validation settings.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.ValidateSingleComplexNode(Microsoft.OData.UriParser.SingleComplexNode,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Override this method to validate single complex property accessors.
            </summary>
            <remarks>
            This method is intended to be called from method overrides in subclasses. This method also supports unit-testing scenarios and is not intended to be called from user code.
            Call the Validate method to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption"/> instance.
            </remarks>
            <param name="singleComplexNode">The single complex node to validate.</param>
            <param name="settings">The validation settings.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.ValidateCollectionPropertyAccessNode(Microsoft.OData.UriParser.CollectionPropertyAccessNode,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Override this method to validate collection property accessors.
            </summary>
            <remarks>
            This method is intended to be called from method overrides in subclasses. This method also supports unit-testing scenarios and is not intended to be called from user code.
            Call the Validate method to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption"/> instance.
            </remarks>
            <param name="propertyAccessNode">The collection property access node to validate.</param>
            <param name="settings">The validation settings.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.ValidateCollectionComplexNode(Microsoft.OData.UriParser.CollectionComplexNode,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Override this method to validate collection complex property accessors.
            </summary>
            <remarks>
            This method is intended to be called from method overrides in subclasses. This method also supports unit-testing scenarios and is not intended to be called from user code.
            Call the Validate method to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption"/> instance.
            </remarks>
            <param name="collectionComplexNode">The collection complex node to validate.</param>
            <param name="settings">The validation settings.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.ValidateSingleValueFunctionCallNode(Microsoft.OData.UriParser.SingleValueFunctionCallNode,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Override this method to validate Function calls, such as 'length', 'year', etc.
            </summary>
            <remarks>
            This method is intended to be called from method overrides in subclasses. This method also supports unit-testing scenarios and is not intended to be called from user code.
            Call the Validate method to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption"/> instance.
            </remarks>
            <param name="node">The single value function call node to validate.</param>
            <param name="settings">The validation settings.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.ValidateSingleResourceFunctionCallNode(Microsoft.OData.UriParser.SingleResourceFunctionCallNode,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Override this method to validate single resource function calls, such as 'cast'.
            </summary>
            <param name="node">The node to validate.</param>
            <param name="settings">The settings to use while validating.</param>
            <remarks>
            This method is intended to be called from method overrides in subclasses. This method also supports unit
            testing scenarios and is not intended to be called from user code. Call the Validate method to validate a
            <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption" /> instance.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.ValidateUnaryOperatorNode(Microsoft.OData.UriParser.UnaryOperatorNode,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Override this method to validate the Not operator.
            </summary>
            <remarks>
            This method is intended to be called from method overrides in subclasses. This method also supports unit-testing scenarios and is not intended to be called from user code.
            Call the Validate method to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption"/> instance.
            </remarks>
            <param name="unaryOperatorNode">The unary operator node.</param>
            <param name="settings">The validation settings.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.ValidateQueryNode(Microsoft.OData.UriParser.QueryNode,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Override this method if you want to visit each query node. 
            </summary>
            <remarks>
            This method is intended to be called from method overrides in subclasses. This method also supports unit-testing scenarios and is not intended to be called from user code.
            Call the Validate method to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption"/> instance.
            </remarks>
            <param name="node">The query node.</param>
            <param name="settings">The validation settings.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.ValidateCollectionResourceCastNode(Microsoft.OData.UriParser.CollectionResourceCastNode,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Override this method if you want to validate casts on resource collections.
            </summary>
            <remarks>
            This method is intended to be called from method overrides in subclasses. This method also supports unit-testing scenarios and is not intended to be called from user code.
            Call the Validate method to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption"/> instance.
            </remarks>
            <param name="collectionResourceCastNode">The collection resource cast node.</param>
            <param name="settings">The validation settings.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.ValidateSingleResourceCastNode(Microsoft.OData.UriParser.SingleResourceCastNode,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Override this method if you want to validate casts on single resource.
            </summary>
            <remarks>
            This method is intended to be called from method overrides in subclasses. This method also supports unit-testing scenarios and is not intended to be called from user code.
            Call the Validate method to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.FilterQueryOption"/> instance.
            </remarks>
            <param name="singleResourceCastNode">The single resource cast node.</param>
            <param name="settings">The validation settings.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.FilterQueryValidator.ValidateSingleValueNode(Microsoft.OData.UriParser.SingleValueNode,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            The recursive method that validate most of the query node type is of SingleValueNode type.
            </summary>
            <param name="node"></param>
            <param name="settings"></param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Validator.ODataQueryValidator">
            <summary>
            Represents a validator used to validate OData queries based on the <see cref="T:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.ODataQueryValidator.Validate(Microsoft.AspNetCore.OData.Query.ODataQueryOptions,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Validates the OData query.
            </summary>
            <param name="options">The OData query to validate.</param>
            <param name="validationSettings">The validation settings.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings">
            <summary>
            This class describes the validation settings for querying.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings.AllowedArithmeticOperators">
            <summary>
            Gets or sets a list of allowed arithmetic operators including 'add', 'sub', 'mul', 'div', 'mod'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings.AllowedFunctions">
             <summary>
             Gets or sets a list of allowed functions used in the $filter query.
            
             The allowed functions include the following:
            
             String related: contains, endswith, startswith, length, indexof, substring, tolower, toupper, trim, concat
            
             e.g. ~/Customers?$filter=length(CompanyName) eq 19
            
             Date and Time related: year, month, day, hour, minute, second, fractionalseconds, date, time
            
             e.g. ~/Employees?$filter=year(BirthDate) eq 1971
            
             Math related: round, floor, ceiling
            
             Type related:isof, cast,
            
             Collection related: any, all
            
             </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings.AllowedLogicalOperators">
            <summary>
            Gets or sets a list of allowed logical operators such as 'eq', 'ne', 'gt', 'ge', 'lt', 'le', 'and', 'or', 'not'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings.AllowedOrderByProperties">
             <summary>
             Gets a list of properties one can orderby the result with. Note, by default this list is empty,
             it means it can be ordered by any property.
            
             For example, having an empty collection means client can order the queryable result by any properties.
             Adding "Name" to this list means that it only allows queryable result to be ordered by Name property.
             </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings.AllowedQueryOptions">
            <summary>
            Gets or sets the query parameters that are allowed inside query. The default is all query options,
            including $filter, $skip, $top, $orderby, $expand, $select, $count, $format, $skiptoken and $deltatoken.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings.MaxOrderByNodeCount">
            <summary>
            Gets or sets the maximum number of expressions that can be present in the $orderby.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings.MaxAnyAllExpressionDepth">
            <summary>
            Gets or sets the maximum depth of the Any or All elements nested inside the query.
            </summary>
            <remarks>
            The default value is 1.
            </remarks>
            <value>
            The maximum depth of the Any or All elements nested inside the query.
            </value>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings.MaxNodeCount">
            <summary>
            Gets or sets the maximum number of the nodes inside the $filter syntax tree.
            </summary>
            <remarks>
            The default value is 100.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings.MaxSkip">
            <summary>
            Gets or sets the max value of $skip that a client can request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings.MaxTop">
            <summary>
            Gets or sets the max value of $top that a client can request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings.MaxExpansionDepth">
            <summary>
            Gets or sets the max expansion depth for the $expand query option.
            </summary>
            <remarks>To disable the maximum expansion depth check, set this property to 0.</remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Validator.OrderByQueryValidator">
            <summary>
            Represents a validator used to validate an <see cref="T:Microsoft.AspNetCore.OData.Query.OrderByQueryOption"/> based on the <see cref="T:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.OrderByQueryValidator.Validate(Microsoft.AspNetCore.OData.Query.OrderByQueryOption,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Validates an <see cref="T:Microsoft.AspNetCore.OData.Query.OrderByQueryOption" />.
            </summary>
            <param name="orderByOption">The $orderby query.</param>
            <param name="validationSettings">The validation settings.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Validator.SelectExpandQueryValidator">
            <summary>
            Represents a validator used to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.SelectExpandQueryOption" /> based on the <see cref="T:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.SelectExpandQueryValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Query.Validator.SelectExpandQueryValidator" /> class
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.SelectExpandQueryValidator.Validate(Microsoft.AspNetCore.OData.Query.SelectExpandQueryOption,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Validates a <see cref="T:Microsoft.AspNetCore.OData.Query.SelectExpandQueryOption" />.
            </summary>
            <param name="selectExpandQueryOption">The $select and $expand query.</param>
            <param name="validationSettings">The validation settings.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Validator.SkipQueryValidator">
            <summary>
            Represents a validator used to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.SkipQueryOption"/> based on the <see cref="T:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.SkipQueryValidator.Validate(Microsoft.AspNetCore.OData.Query.SkipQueryOption,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Validates a <see cref="T:Microsoft.AspNetCore.OData.Query.SkipQueryOption" />.
            </summary>
            <param name="skipQueryOption">The $skip query.</param>
            <param name="validationSettings">The validation settings.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Validator.SkipTokenQueryValidator">
            <summary>
            Represents a validator used to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.SkipTokenQueryOption"/> based on the <see cref="T:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.SkipTokenQueryValidator.Validate(Microsoft.AspNetCore.OData.Query.SkipTokenQueryOption,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Validates a <see cref="T:Microsoft.AspNetCore.OData.Query.SkipTokenQueryOption" />.
            </summary>
            <param name="skipToken">The $skiptoken query.</param>
            <param name="validationSettings">The validation settings.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Validator.TopQueryValidator">
            <summary>
            Represents a validator used to validate a <see cref="T:Microsoft.AspNetCore.OData.Query.TopQueryOption"/> based on the <see cref="T:Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Validator.TopQueryValidator.Validate(Microsoft.AspNetCore.OData.Query.TopQueryOption,Microsoft.AspNetCore.OData.Query.Validator.ODataValidationSettings)">
            <summary>
            Validates a <see cref="T:Microsoft.AspNetCore.OData.Query.TopQueryOption" />.
            </summary>
            <param name="topQueryOption">The $top query.</param>
            <param name="validationSettings">The validation settings.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Wrapper.ComputeWrapper`1.Model">
            <summary>
            The Edm Model associated with the wrapper.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Wrapper.DynamicTypeWrapper">
            <summary>
            Represents a container class that contains properties that are grouped by using $apply.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Wrapper.DynamicTypeWrapper.Values">
            <summary>
            Gets values stored in the wrapper
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Wrapper.DynamicTypeWrapper.TryGetPropertyValue(System.String,System.Object@)">
            <summary>
            Attempts to get the value of the Property called <paramref name="propertyName"/> from the underlying Entity.
            </summary>
            <param name="propertyName">The name of the Property</param>
            <param name="value">The new value of the Property</param>
            <returns>True if successful</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Wrapper.DynamicTypeWrapperConverter">
            <summary>
            Supports converting <see cref="T:Microsoft.AspNetCore.OData.Query.Wrapper.DynamicTypeWrapper"/> types by using a factory pattern.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Wrapper.DynamicTypeWrapperConverter.CanConvert(System.Type)">
            <summary>
            determines whether the converter instance can convert the specified object type.
            </summary>
            <param name="typeToConvert">The type of the object to check whether it can be converted by this converter instance.</param>
            <returns>true if the instance can convert the specified object type; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Wrapper.DynamicTypeWrapperConverter.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Creates a converter for a specified type.
            </summary>
            <param name="type">The type handled by the converter.</param>
            <param name="options">The serialization options to use.</param>
            <returns>A converter for which T is compatible with typeToConvert.</returns>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Wrapper.GroupByWrapper.GroupByContainer">
            <summary>
            Gets or sets the property container that contains the properties being expanded. 
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Wrapper.GroupByWrapper.Container">
            <summary>
            Gets or sets the property container that contains the properties being expanded. 
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Wrapper.GroupByWrapper.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Wrapper.GroupByWrapper.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Wrapper.ISelectExpandWrapper">
            <summary>
            Represents the result of a $select and $expand query operation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Wrapper.ISelectExpandWrapper.ToDictionary">
            <summary>
            Projects the result of a $select and $expand query to a <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IDictionary`2"/> representing the $select and $expand result.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Wrapper.ISelectExpandWrapper.ToDictionary(System.Func{Microsoft.OData.Edm.IEdmModel,Microsoft.OData.Edm.IEdmStructuredType,Microsoft.AspNetCore.OData.Query.Container.IPropertyMapper})">
            <summary>
            Projects the result of a $select and/or $expand query to an <see cref="T:System.Collections.Generic.IDictionary`2" /> using 
            the given <paramref name="propertyMapperProvider"/>. The <paramref name="propertyMapperProvider"/> is used 
            to obtain an <see cref="T:Microsoft.AspNetCore.OData.Query.Container.IPropertyMapper"/> for the <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> that this 
            <see cref="T:Microsoft.AspNetCore.OData.Query.Wrapper.ISelectExpandWrapper"/> instance represents. This <see cref="T:Microsoft.AspNetCore.OData.Query.Container.IPropertyMapper"/> will be used to 
            map the properties of the <see cref="T:Microsoft.AspNetCore.OData.Query.Wrapper.ISelectExpandWrapper"/> instance to the keys of the 
            returned <see cref="T:System.Collections.Generic.IDictionary`2"/>. This method can be used, for example, to map the property 
            names in the <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> to the names that should be used to serialize the properties 
            that this projection contains.
            </summary>
            <param name="propertyMapperProvider">
            A function that provides a new instance of an <see cref="T:Microsoft.AspNetCore.OData.Query.Container.IPropertyMapper"/> for a given 
            <see cref="T:Microsoft.OData.Edm.IEdmStructuredType"/> and a given <see cref="T:Microsoft.OData.Edm.IEdmModel"/>.
            </param>
            <returns>An <see cref="T:System.Collections.Generic.IDictionary`2"/> representing the $select and $expand result.</returns>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Wrapper.SelectExpandWrapper.Container">
            <summary>
            Gets or sets the property container that contains the properties being expanded. 
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Wrapper.SelectExpandWrapper.Model">
            <summary>
            The Edm Model associated with the wrapper.
            EntityFramework does not let us inject non primitive constant values (like IEdmModel).
            However, we can always 'parameterize" this non-constant value.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Wrapper.SelectExpandWrapper.UntypedInstance">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Wrapper.SelectExpandWrapper.InstanceType">
            <summary>
            Gets or sets the instance type name
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Wrapper.SelectExpandWrapper.UseInstanceForProperties">
            <summary>
            Indicates whether the underlying instance can be used to obtain property values.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Wrapper.SelectExpandWrapper.GetEdmType">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Wrapper.SelectExpandWrapper.TryGetPropertyValue(System.String,System.Object@)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Wrapper.SelectExpandWrapperConverter">
            <summary>
            Supports converting <see cref="T:Microsoft.AspNetCore.OData.Query.Wrapper.SelectExpandWrapper`1"/> types by using a factory pattern.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Wrapper.SelectExpandWrapperConverter.CanConvert(System.Type)">
            <summary>
            determines whether the converter instance can convert the specified object type.
            </summary>
            <param name="typeToConvert">The type of the object to check whether it can be converted by this converter instance.</param>
            <returns>true if the instance can convert the specified object type; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Query.Wrapper.SelectExpandWrapperConverter.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Creates a converter for a specified type.
            </summary>
            <param name="type">The type handled by the converter.</param>
            <param name="options">The serialization options to use.</param>
            <returns>A converter for which T is compatible with typeToConvert.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Query.Wrapper.SelectExpandWrapper`1">
            <summary>
            Represents a container class that contains properties that are either selected or expanded using $select and $expand.
            </summary>
            <typeparam name="TElement">The element being selected and expanded.</typeparam>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Query.Wrapper.SelectExpandWrapper`1.Instance">
            <summary>
            Gets or sets the instance of the element being selected and expanded.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Results.CreatedODataResult`1">
            <summary>
            Represents an action result that is a response to a create operation that adds an entity to an entity set.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
            <remarks>This action result handles content negotiation and the HTTP prefer header. It generates a location
            header containing the edit link of the created entity and, if response has status code: NoContent, also
            generates an OData-EntityId header.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Results.CreatedODataResult`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Results.CreatedODataResult`1"/> class.
            </summary>
            <param name="entity">The created entity.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Results.CreatedODataResult`1.Entity">
            <summary>
            Gets the entity that was created.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Results.CreatedODataResult`1.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Results.PageResult">
            <summary>
            Represents a feed of entities that includes additional information that OData formats support.
            </summary>
            <remarks>
            Currently limited to:
            <list type="bullet">
            <item><description>The Count of all matching entities on the server (requested using $count=true).</description></item>
            <item><description>The NextLink to retrieve the next page of results (added if the server enforces Server Driven Paging).</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Results.PageResult.#ctor(System.Uri,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Results.PageResult"/> class.
            </summary>
            <param name="nextPageLink">The link for the next page of items in the feed.</param>
            <param name="count">The total count of items in the feed.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Results.PageResult.NextPageLink">
            <summary>
            Gets the link for the next page of items in the feed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Results.PageResult.Count">
            <summary>
            Gets the total count of items in the feed.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Results.PageResult.ToDictionary">
            <summary>
            Projects the result to a <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IDictionary`2"/> representing the page result.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Results.PageResult`1">
            <summary>Represents a feed of entities that includes additional information that OData formats support.</summary>
            <remarks>
            Currently limited to:
            <list type="bullet">
            <item><description>The Count of all matching entities on the server (requested using $count=true).</description></item>
            <item><description>The NextLink to retrieve the next page of results (added if the server enforces Server Driven Paging).</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Results.PageResult`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Uri,System.Nullable{System.Int64})">
            <summary>
            Creates a partial set of results - used when server driven paging is enabled.
            </summary>
            <param name="items">The subset of matching results that should be serialized in this page.</param>
            <param name="nextPageLink">A link to the next page of matching results (if more exists).</param>
            <param name="count">A total count of matching results so clients can know the number of matches on the server.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Results.PageResult`1.Items">
            <summary>
            Gets the collection of entities for this feed.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Results.PageResult`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Results.PageResult`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Results.PageResult`1.ToDictionary">
            <summary>
            Projects the result to a <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IDictionary`2"/> representing the page result.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Results.PageResultValueConverter.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Creates a converter for a specified type.
            </summary>
            <param name="type">The type handled by the converter.</param>
            <param name="options">The serialization options to use.</param>
            <returns>A converter for which T is compatible with typeToConvert.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Results.ResultHelpers.GenerateODataLink(Microsoft.AspNetCore.Http.HttpRequest,System.Object,System.Boolean)">
            <remarks>This signature uses types that are AspNetCore-specific.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Results.ResultHelpers.AddEntityId(Microsoft.AspNetCore.Http.HttpResponse,System.Func{System.Uri})">
            <remarks>This signature uses types that are AspNetCore-specific.</remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Results.SingleResult">
            <summary>
            Represents an <see cref="T:System.Linq.IQueryable"/> containing zero or one entities. Use together with an
            <c>[EnableQuery]</c>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Results.SingleResult.#ctor(System.Linq.IQueryable)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Results.SingleResult"/> class.
            </summary>
            <param name="queryable">The <see cref="T:System.Linq.IQueryable"/> containing zero or one entities.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Results.SingleResult.Queryable">
            <summary>
            The <see cref="T:System.Linq.IQueryable"/> containing zero or one entities.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Results.SingleResult.Create``1(System.Linq.IQueryable{``0})">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.OData.Results.SingleResult`1"/> from an <see cref="T:System.Linq.IQueryable`1"/>. A helper method to instantiate
            a <see cref="T:Microsoft.AspNetCore.OData.Results.SingleResult`1"/> object without having to explicitly specify the type
            <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of the data in the data source.</typeparam>
            <param name="queryable">The <see cref="T:System.Linq.IQueryable`1"/> containing zero or one entities.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.OData.Results.SingleResult`1"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Results.SingleResult`1">
            <summary>
            Represents an <see cref="T:System.Linq.IQueryable`1"/> containing zero or one entities. Use together with an
            <c>[EnableQuery]</c>.
            </summary>
            <typeparam name="T">The type of the data in the data source.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Results.SingleResult`1.#ctor(System.Linq.IQueryable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Results.SingleResult`1"/> class.
            </summary>
            <param name="queryable">The <see cref="T:System.Linq.IQueryable`1"/> containing zero or one entities.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Results.SingleResult`1.Queryable">
            <summary>
            The <see cref="T:System.Linq.IQueryable`1"/> containing zero or one entities.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Results.SingleResultValueConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Results.SingleResultValueConverter.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Creates a converter for a specified type.
            </summary>
            <param name="type">The type handled by the converter.</param>
            <param name="options">The serialization options to use.</param>
            <returns>A converter for which T is compatible with typeToConvert.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Results.UpdatedODataResult`1">
            <summary>
            Represents an action result that is a response to a PUT, PATCH, or a MERGE operation on an OData entity.
            </summary>
            <typeparam name="T">The entity type.</typeparam>
            <remarks>This action result handles content negotiation and the HTTP prefer header.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Results.UpdatedODataResult`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Results.UpdatedODataResult`1"/> class.
            </summary>
            <param name="entity">The updated entity.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Results.UpdatedODataResult`1.Entity">
            <summary>
            Gets the entity that was updated.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Results.UpdatedODataResult`1.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Attributes.ODataAttributeRoutingAttribute">
            <summary>
            When used to decorate a <see cref="T:Microsoft.AspNetCore.Mvc.Controller"/> or Controller method, automatically opts that item into 
            OData routing conventions. 
            </summary>
            <remarks>
            <para>
            NOTE: If your Controller inherits from <see cref="T:Microsoft.AspNetCore.OData.Routing.Controllers.ODataController"/>, this attribute is NOT required.
            </para>
            <para>
            To allow individual methods to opt out of the OData routing conventions, add the [<see cref="T:Microsoft.AspNetCore.OData.Routing.Attributes.ODataIgnoredAttribute">ODataIgnored</see>] attribute 
            to that method.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Attributes.ODataIgnoredAttribute">
            <summary>
            When used to decorate a <see cref="T:Microsoft.AspNetCore.Mvc.Controller"/> or Controller method, instructs OData to exclude that 
            item from the OData routing conventions.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Attributes.ODataRouteComponentAttribute">
            <summary>
            When used to decorate a <see cref="T:Microsoft.AspNetCore.Mvc.Controller"/> or Controller method (including <see cref="T:Microsoft.AspNetCore.OData.Routing.Controllers.ODataController"/>),
            instructs OData which set of <see cref="P:Microsoft.AspNetCore.OData.ODataOptions.RouteComponents"/> to use.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Attributes.ODataRouteComponentAttribute.#ctor">
            <summary>
            Instructs OData to use the default <see cref="P:Microsoft.AspNetCore.OData.ODataOptions.RouteComponents"/> RoutePrefix, which equals 
            <see cref="F:System.String.Empty"/>, for the decorated Controller or Controller method.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Attributes.ODataRouteComponentAttribute.#ctor(System.String)">
            <summary>
            Instructs OData to use the specified <paramref name="routePrefix"/> for the decorated Controller or Controller method.
            </summary>
            <param name="routePrefix">The key in <see cref="P:Microsoft.AspNetCore.OData.ODataOptions.RouteComponents"/> to use .</param>
            <remarks>
            Ensure this model is registered with OData by calling 
            services.AddOData(options => options.AddRouteComponent()).
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Attributes.ODataRouteComponentAttribute.RoutePrefix">
            <summary>
            Gets the specified model name.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Controllers.MetadataController">
            <summary>
            Represents a controller for generating OData service and metadata ($metadata) documents.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Controllers.MetadataController.GetMetadata">
            <summary>
            Generates the OData $metadata document.
            </summary>
            <returns>The <see cref="T:Microsoft.OData.Edm.IEdmModel"/> representing $metadata.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Controllers.MetadataController.GetServiceDocument">
            <summary>
            Generates the OData service document.
            </summary>
            <returns>The service document for the service.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Controllers.ODataController">
            <summary>
            The base controller class for OData.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Controllers.ODataController.Created``1(``0)">
            <summary>
            Creates an action result with the specified values that is a response to a POST operation with an entity
            to an entity set.
            </summary>
            <typeparam name="TEntity">The created entity type.</typeparam>
            <param name="entity">The created entity.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.OData.Results.CreatedODataResult`1"/> with the specified values.</returns>
            <remarks>This function uses types that are AspNetCore-specific.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Controllers.ODataController.Updated``1(``0)">
            <summary>
            Creates an action result with the specified values that is a response to a PUT, PATCH, or a MERGE operation
            on an OData entity.
            </summary>
            <typeparam name="TEntity">The updated entity type.</typeparam>
            <param name="entity">The updated entity.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.OData.Results.UpdatedODataResult`1"/> with the specified values.</returns>
            <remarks>This function uses types that are AspNetCore-specific.</remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.ActionRoutingConvention">
            <summary>
            The convention for <see cref="T:Microsoft.OData.Edm.IEdmAction"/>.
            Post ~/entityset|singleton/action,  ~/entityset|singleton/cast/action
            Post ~/entityset|singleton/key/action,  ~/entityset|singleton/key/cast/action
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.ActionRoutingConvention.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.ActionRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.ActionRoutingConvention.IsOperationParameterMatched(Microsoft.OData.Edm.IEdmOperation,Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.AttributeRoutingConvention">
            <summary>
            The convention for an OData template string.
            It looks for the <see cref="T:Microsoft.AspNetCore.OData.Routing.Attributes.ODataAttributeRoutingAttribute"/> on controller
            and <see cref="T:Microsoft.AspNetCore.OData.Routing.Attributes.ODataAttributeRoutingAttribute"/> or other Http Verb attribute, for example <see cref="T:Microsoft.AspNetCore.Mvc.HttpGetAttribute"/> on action.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.AttributeRoutingConvention.#ctor(Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.OData.Routing.Conventions.AttributeRoutingConvention},Microsoft.AspNetCore.OData.Routing.Parser.IODataPathTemplateParser)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Conventions.AttributeRoutingConvention"/> class.
            </summary>
            <param name="logger">The registered logger.</param>
            <param name="parser">The registered parser.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.AttributeRoutingConvention.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.AttributeRoutingConvention.AppliesToController(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.AttributeRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.EntityRoutingConvention">
            <summary>
            The convention for <see cref="T:Microsoft.OData.Edm.IEdmEntitySet"/> with key.
            It supports key in parenthesis and key as segment if it's a single key.
            Conventions:
            GET ~/entityset/key
            GET ~/entityset/key/cast
            PUT ~/entityset/key
            PUT ~/entityset/key/cast
            PATCH ~/entityset/key
            PATCH ~/entityset/key/cast
            DELETE ~/entityset/key
            DELETE ~/entityset/key/cast
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.EntityRoutingConvention.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.EntityRoutingConvention.AppliesToController(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.EntityRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.EntitySetRoutingConvention">
            <summary>
            The convention for <see cref="T:Microsoft.OData.Edm.IEdmEntitySet"/>.
            Conventions:
            GET ~/entityset
            GET ~/entityset/$count
            GET ~/entityset/cast
            GET ~/entityset/cast/$count
            POST ~/entityset
            POST ~/entityset/cast
            PATCH ~/entityset ==> Delta resource set patch
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.EntitySetRoutingConvention.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.EntitySetRoutingConvention.AppliesToController(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.EntitySetRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.FunctionRoutingConvention">
            <summary>
            The convention for <see cref="T:Microsoft.OData.Edm.IEdmFunction"/>.
            Get ~/entityset|singleton/function,  ~/entityset|singleton/cast/function
            Get ~/entityset|singleton/key/function, ~/entityset|singleton/key/cast/function
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.FunctionRoutingConvention.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.FunctionRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.FunctionRoutingConvention.IsOperationParameterMatched(Microsoft.OData.Edm.IEdmOperation,Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.IODataControllerActionConvention">
            <summary>
            The interface for all OData convention routing.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.IODataControllerActionConvention.Order">
            <summary>
            Gets the order value for determining the order of execution of conventions.
            Conventions execute in ascending numeric value of the <see cref="P:Microsoft.AspNetCore.OData.Routing.Conventions.IODataControllerActionConvention.Order"/> property.
            </summary>
            <para>
            If two conventions have the same numeric value of <see cref="P:Microsoft.AspNetCore.OData.Routing.Conventions.IODataControllerActionConvention.Order"/>, then their relative execution order
            is undefined.
            </para>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.IODataControllerActionConvention.AppliesToController(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <summary>
            Applies the convention on controller
            </summary>
            <param name="context">The controller action context.</param>
            <returns>
            True: applies the convention on the actions of this controller.
            False: no, please skip this convention on the actions of this controller.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.IODataControllerActionConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <summary>
            Applies the convention on action of this controller.
            </summary>
            <param name="context">The controller action context.</param>
            <returns>
            True: yes, apply the convention, please stop executing the remaining conventions.
            False: no, please continue to execute the remaining conventions.
            </returns>
            <remarks>
            The OData action convention should not put limitation on the action parameters.
            That's, if an action has extra parameter that's not required for a certain convention,
            we consider this action is valid for this convention.
            For example, entity convention requires the key(s) parameters, doesn't care about other parameters.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.MetadataRoutingConvention">
            <summary>
            The convention for $metadata.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.MetadataRoutingConvention.Order">
            <summary>
            Gets the order value for determining the order of execution of conventions.
            Metadata routing convention has 0 order.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.MetadataRoutingConvention.AppliesToController(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.MetadataRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.NavigationRoutingConvention">
            <summary>
            Conventions for <see cref="T:Microsoft.OData.Edm.IEdmNavigationProperty"/>.
            Action name convention should follow this: {HttpMethodName}{NavigationPropertyName}[From{DeclaringTypeName}]
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.NavigationRoutingConvention.#ctor(Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.OData.Routing.Conventions.NavigationRoutingConvention})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Conventions.NavigationRoutingConvention"/> class.
            </summary>
            <param name="logger">The injected logger.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.NavigationRoutingConvention.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.NavigationRoutingConvention.AppliesToController(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.NavigationRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.NavigationRoutingConvention.SplitActionName(System.String,System.String@,System.String@)">
            <summary>
            split action using navigation action name convention.
            For example: PostToOrdersFromVipOrder
            => Method Name: PostTo
            => property : Orders
            => declaring: VipOrder
            </summary>
            <param name="actionName">The input action name.</param>
            <param name="property">The property name (out).</param>
            <param name="declaring">The declaring name (out).</param>
            <returns>The http method name or null.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext">
            <summary>
            A context object for <see cref="T:Microsoft.AspNetCore.OData.Routing.Conventions.IODataControllerActionConvention"/>.
            </summary>
            <remarks>
            Why do i design "ControllerActionContext", not "ControllerContext" and "ActionContext".
            It's because a controller may have a bound of actions, and i don't want to create an ActionContext for all of these actions.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext" /> class.
            For unit test only
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.#ctor(System.String,Microsoft.OData.Edm.IEdmModel,Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext" /> class.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="model">The Edm model.</param>
            <param name="controller">The controller model.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.Prefix">
            <summary>
            Gets the associated model name for this model, it's also used as the routing prefix.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.Model">
            <summary>
            Gets the Edm model.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.Controller">
            <summary>
            Gets the related controller model in this context. This property should never be "null".
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.NavigationSource">
            <summary>
            Gets/sets the navigation source associated with controller.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.Action">
            <summary>
            Gets/sets the related action model in this context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.EntitySet">
            <summary>
            Gets the associated <see cref="T:Microsoft.OData.Edm.IEdmEntitySet"/> for this controller.
            It might be null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.EntityType">
            <summary>
            Gets the associated <see cref="T:Microsoft.OData.Edm.IEdmEntityType"/>.
            It might be null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.Singleton">
            <summary>
            Gets the associated <see cref="T:Microsoft.OData.Edm.IEdmSingleton"/> for this controller.
            It might be null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext.Options">
            <summary>
            Gets/sets the OData Options.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.OperationImportRoutingConvention">
            <summary>
            The convention for <see cref="T:Microsoft.OData.Edm.IEdmOperationImport"/>.
            Get ~/functionimport(....)
            Post ~/actionimport
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.OperationImportRoutingConvention.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.OperationImportRoutingConvention.AppliesToController(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.OperationImportRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.OperationRoutingConvention">
            <summary>
            Conventions for <see cref="T:Microsoft.OData.Edm.IEdmAction"/> and <see cref="T:Microsoft.OData.Edm.IEdmFunction"/>.
            Get ~/entityset|singleton/function,  ~/entityset|singleton/cast/function
            Get ~/entityset|singleton/key/function, ~/entityset|singleton/key/cast/function
            Post ~/entityset|singleton/action,  ~/entityset|singleton/cast/action
            Post ~/entityset|singleton/key/action,  ~/entityset|singleton/key/cast/action
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.OperationRoutingConvention.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.OperationRoutingConvention.AppliesToController(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.OperationRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.OperationRoutingConvention.ProcessOperations(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext,Microsoft.OData.Edm.IEdmEntityType,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Process the operation candidates using the information.
            </summary>
            <param name="context">The controller and action context.</param>
            <param name="entityType">The Edm entity type.</param>
            <param name="navigationSource">The Edm navigation source.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.OperationRoutingConvention.SplitActionName(System.String,System.String@,System.Boolean@)">
            <summary>
            Split the action based on supporting pattern.
            </summary>
            <param name="actionName">The input action name.</param>
            <param name="cast">The out of cast type name.</param>
            <param name="isOnCollection">The out of collection binding flag.</param>
            <returns>The operation name.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.OperationRoutingConvention.IsOperationParameterMatched(Microsoft.OData.Edm.IEdmOperation,Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            Verify the parameter of the Edm operation matches the parameter defined in action.
            </summary>
            <param name="operation">The Edm operation.</param>
            <param name="action">The action model.</param>
            <returns>true if the parameter of the Edm operation matches the parameter defined in the action; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.OperationRoutingConvention.AddSelector(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext,Microsoft.OData.Edm.IEdmOperation,System.Boolean,Microsoft.OData.Edm.IEdmEntityType,Microsoft.OData.Edm.IEdmNavigationSource,Microsoft.OData.Edm.IEdmEntityType)">
            <summary>
            Add the template to the action
            </summary>
            <param name="context">The context.</param>
            <param name="edmOperation">The Edm operation.</param>
            <param name="hasKeyParameter">Has key parameter or not.</param>
            <param name="entityType">The entity type.</param>
            <param name="navigationSource">The navigation source.</param>
            <param name="castType">The type cast.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.PropertyRoutingConvention">
            <summary>
            The convention for the property access.
            Get|PostTo|PutTo|PatchTo|DeleteTo ~/entityset/key/property
            GET|PostTo|PutTo|PatchTo|DeleteTo ~/singleton/property
            Get|PostTo|PutTo|PatchTo|DeleteTo ~/entityset/key/cast/property/
            GET|PostTo|PutTo|PatchTo|DeleteTo ~/singleton/cast/property
            Get|PostTo|PutTo|PatchTo|DeleteTo ~/entityset/key/property/cast
            GET|PostTo|PutTo|PatchTo|DeleteTo ~/singleton/property/cast
            Get|PostTo|PutTo|PatchTo|DeleteTo ~/entityset/key/cast/property/cast
            GET|PostTo|PutTo|PatchTo|DeleteTo ~/singleton/cast/property/cast
            GET ~/entityset/key/property/$value
            GET ~/entityset/key/cast/property/$value
            GET ~/singleton/property/$value
            GET ~/singleton/cast/property/$value
            GET ~/entityset/key/property/$count
            GET ~/entityset/key/cast/property/$count
            GET ~/singleton/property/$count
            GET ~/singleton/cast/property/$count
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.PropertyRoutingConvention.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.PropertyRoutingConvention.AppliesToController(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.PropertyRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.RefRoutingConvention">
            <summary>
            An implementation of <see cref="T:Microsoft.AspNetCore.OData.Routing.Conventions.IODataControllerActionConvention"/> that handles entity reference manipulations.
            Conventions:
            GET|DELETE ~/entityset/key/navigationproperty/$ref
            GET|POST|PUT|DELETE ~/entityset/key/navigationproperty/key/$ref
            GET|POST|PUT|DELETE ~/entityset/key/cast/navigationproperty/key/$ref
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.RefRoutingConvention.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.RefRoutingConvention.AppliesToController(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.RefRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Conventions.SingletonRoutingConvention">
            <summary>
            The convention for <see cref="T:Microsoft.OData.Edm.IEdmSingleton"/>.
            The Conventions:
            Get|Put|Patch ~/singleton
            Get|Put|Patch ~/singleton/cast
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Conventions.SingletonRoutingConvention.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.SingletonRoutingConvention.AppliesToController(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Conventions.SingletonRoutingConvention.AppliesToAction(Microsoft.AspNetCore.OData.Routing.Conventions.ODataControllerActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.IODataRoutingMetadata">
            <summary>
            Defines a contract use to specify the OData routing related metadata in <see cref="P:Microsoft.AspNetCore.Http.Endpoint.Metadata"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.IODataRoutingMetadata.Prefix">
            <summary>
            Gets the prefix string.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.IODataRoutingMetadata.Model">
            <summary>
            Gets the Edm model.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.IODataRoutingMetadata.Template">
            <summary>
            Gets the OData path template
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.ODataPathExtensions">
            <summary>
             Extension methods for <see cref="T:Microsoft.OData.UriParser.ODataPath"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathExtensions.IsStreamPropertyPath(Microsoft.OData.UriParser.ODataPath)">
            <summary>
            Gets a boolean value indicating whether the given path is a stream property path.
            </summary>
            <param name="path">The given odata path.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathExtensions.GetEdmType(Microsoft.OData.UriParser.ODataPath)">
            <summary>
            Computes the <see cref="T:Microsoft.OData.Edm.IEdmType"/> of the resource identified by this <see cref="T:Microsoft.OData.UriParser.ODataPath"/>.
            </summary>
            <param name="path">Path to compute the type for.</param>
            <returns>The <see cref="T:Microsoft.OData.Edm.IEdmType"/> of the resource, or null if the path does not identify a resource with a type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathExtensions.GetNavigationSource(Microsoft.OData.UriParser.ODataPath)">
            <summary>
            Computes the <see cref="T:Microsoft.OData.Edm.IEdmNavigationSource"/> of the resource identified by this <see cref="T:Microsoft.OData.UriParser.ODataPath"/>.
            </summary>
            <param name="path">Path to compute the set for.</param>
            <returns>The <see cref="T:Microsoft.OData.Edm.IEdmNavigationSource"/> of the resource, or null if the path does not identify a resource that is part of a set.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathExtensions.GetPathString(Microsoft.OData.UriParser.ODataPath)">
            <summary>
            Get the string representation of <see cref="T:Microsoft.OData.UriParser.ODataPath"/> mainly translate Context Url path.
            </summary>
            <param name="path">Path to compute the set for.</param>
            <returns>The string representation of the Context Url path.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathExtensions.GetPathString(System.Collections.Generic.IList{Microsoft.OData.UriParser.ODataPathSegment})">
            <summary>
            Get the string representation of <see cref="T:Microsoft.OData.UriParser.ODataPath"/> mainly translate Context Url path.
            </summary>
            <param name="segments">The path segments.</param>
            <returns>The string representation of the Context Url path.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathExtensions.GetPropertyAndStructuredTypeFromPath(Microsoft.OData.UriParser.ODataPath)">
            <summary>
            Gets the property and structured type from <see cref="T:Microsoft.OData.UriParser.ODataPath"/>.
            TODO: The logic implenetation is not good and do need refactor it later.
            </summary>
            <param name="path">The OData path.</param>
            <returns>The property, structured type and the name.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.ODataPathNavigationSourceHandler">
            <summary>
            A handler used to calculate some values based on the odata path.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathNavigationSourceHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.ODataPathNavigationSourceHandler"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataPathNavigationSourceHandler.NavigationSource">
            <summary>
            Gets the path navigation source.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataPathNavigationSourceHandler.Path">
            <summary>
            Gets the path template.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathNavigationSourceHandler.Handle(Microsoft.OData.UriParser.EntitySetSegment)">
            <summary>
            Handle an <see cref="T:Microsoft.OData.UriParser.EntitySetSegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathNavigationSourceHandler.Handle(Microsoft.OData.UriParser.KeySegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.KeySegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathNavigationSourceHandler.Handle(Microsoft.OData.UriParser.NavigationPropertyLinkSegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.NavigationPropertyLinkSegment"/>.
            </summary>
            <param name="segment">The segment to handle</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathNavigationSourceHandler.Handle(Microsoft.OData.UriParser.NavigationPropertySegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.NavigationPropertySegment"/>.
            </summary>
            <param name="segment">the segment to Handle</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathNavigationSourceHandler.Handle(Microsoft.OData.UriParser.DynamicPathSegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.DynamicPathSegment"/>.
            </summary>
            <param name="segment">the segment to Handle</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathNavigationSourceHandler.Handle(Microsoft.OData.UriParser.OperationImportSegment)">
            <summary>
            Handle an <see cref="T:Microsoft.OData.UriParser.OperationImportSegment"/>.
            </summary>
            <param name="segment">the segment to Handle</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathNavigationSourceHandler.Handle(Microsoft.OData.UriParser.OperationSegment)">
            <summary>
            Handle an <see cref="T:Microsoft.OData.UriParser.OperationSegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathNavigationSourceHandler.Handle(Microsoft.OData.UriParser.PathTemplateSegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.PathTemplateSegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathNavigationSourceHandler.Handle(Microsoft.OData.UriParser.PropertySegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.PropertySegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathNavigationSourceHandler.Handle(Microsoft.OData.UriParser.SingletonSegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.SingletonSegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathNavigationSourceHandler.Handle(Microsoft.OData.UriParser.TypeSegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.TypeSegment"/>, we use "cast" for type segment.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathNavigationSourceHandler.Handle(Microsoft.OData.UriParser.ValueSegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.ValueSegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathNavigationSourceHandler.Handle(Microsoft.OData.UriParser.CountSegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.CountSegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathNavigationSourceHandler.Handle(Microsoft.OData.UriParser.BatchSegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.BatchSegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathNavigationSourceHandler.Handle(Microsoft.OData.UriParser.MetadataSegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.MetadataSegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathNavigationSourceHandler.Handle(Microsoft.OData.UriParser.ODataPathSegment)">
            <summary>
            Handle a general path segment.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.ODataPathSegmentHandler">
            <summary>
            A handler used to calculate some values based on the odata path.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathSegmentHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.ODataPathSegmentHandler"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataPathSegmentHandler.NavigationSource">
            <summary>
            Gets the path navigation source.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataPathSegmentHandler.PathLiteral">
            <summary>
            Gets the path Uri literal.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.EntitySetSegment)">
            <summary>
            Handle an <see cref="T:Microsoft.OData.UriParser.EntitySetSegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.KeySegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.KeySegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.NavigationPropertyLinkSegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.NavigationPropertyLinkSegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.NavigationPropertySegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.NavigationPropertySegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.DynamicPathSegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.DynamicPathSegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.OperationImportSegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.OperationImportSegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.OperationSegment)">
            <summary>
            Handle an <see cref="T:Microsoft.OData.UriParser.OperationSegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.PathTemplateSegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.PathTemplateSegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.PropertySegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.PropertySegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.SingletonSegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.SingletonSegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.TypeSegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.TypeSegment"/>, we use "cast" for type segment.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.ValueSegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.ValueSegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.CountSegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.CountSegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.BatchSegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.BatchSegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathSegmentHandler.Handle(Microsoft.OData.UriParser.MetadataSegment)">
            <summary>
            Handle a <see cref="T:Microsoft.OData.UriParser.MetadataSegment"/>.
            </summary>
            <param name="segment">The segment to handle.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.ODataPathSegmentTranslator">
            <summary>
            Translator the parameter alias, convert node, returned entity set into OData path segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataPathSegmentTranslator.TranslateParameterAlias(Microsoft.OData.UriParser.SingleValueNode,System.Collections.Generic.IDictionary{System.String,Microsoft.OData.UriParser.SingleValueNode})">
            <summary>
            
            </summary>
            <param name="node"></param>
            <param name="parameterAliasNodes"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.ODataRouteDebugMiddleware">
            <summary>
            An OData route debug middleware
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRouteDebugMiddleware.#ctor(System.String,Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.ODataRouteDebugMiddleware"/> class.
            </summary>
            <param name="routePattern">The route pattern.</param>
            <param name="next">The next middleware.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRouteDebugMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invoke the OData Route debug middleware.
            </summary>
            <param name="context">The http context.</param>
            <returns>A task that can be awaited.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.ODataRouteOptions">
            <summary>
            Represents the configurable options on a conventional routing template building.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRouteOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.ODataRouteOptions" /> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRouteOptions.EnableControllerNameCaseInsensitive">
            <summary>
            Gets/sets a value indicating whether to enable case insensitive for the controller name in conventional routing.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRouteOptions.EnablePropertyNameCaseInsensitive">
            <summary>
            Gets/sets a value indicating whether to enable case insensitive for the property name in conventional routing.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRouteOptions.EnableKeyInParenthesis">
            <summary>
            Gets or sets a value indicating whether to generate odata path template as ~/entityset({key}).
            Used in conventional routing.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRouteOptions.EnableKeyAsSegment">
            <summary>
            Gets or sets a value indicating whether to generate odata path template as ~/entityset/{key}
            Used in conventional routing.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRouteOptions.EnableQualifiedOperationCall">
            <summary>
            Gets or sets a value indicating whether to generate odata path template as ~/Namespace.MyFunction(parameters...)
            Used in conventional routing.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRouteOptions.EnableUnqualifiedOperationCall">
            <summary>
            Gets or sets a value indicating whether to generate odata path template as ~/MyFunction(parameters...)
            Used in conventional routing.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRouteOptions.EnableNonParenthesisForEmptyParameterFunction">
            <summary>
            Gets or sets a value indicating whether to generate non parenthesis for non-parameter function.
            Used in conventional routing.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.ODataRoutingApplicationModelProvider">
            <summary>
            Builds or modifies <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel" /> for OData convention action discovery.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingApplicationModelProvider.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.OData.ODataOptions})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.ODataRoutingApplicationModelProvider" /> class.
            </summary>
            <param name="options">The registered OData options.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRoutingApplicationModelProvider.Order">
            <summary>
            Gets the order value for determining the order of execution of providers.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingApplicationModelProvider.OnProvidersExecuted(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext)">
            <summary>
            Executed for the second pass of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel"/> built.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingApplicationModelProvider.OnProvidersExecuting(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext)">
            <summary>
            Executed for the first pass of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel"/> building.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingApplicationModelProvider.ApplyAttributeRouting(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel})">
            <summary>
            Apply Default OData attribute routing
            </summary>
            <param name="controllers">The controller models</param>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.ODataRoutingMatcherPolicy">
            <summary>
            Defines a policy that applies behaviors to the OData Uri matcher.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingMatcherPolicy.#ctor(Microsoft.AspNetCore.OData.Routing.Template.IODataTemplateTranslator)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.ODataRoutingMatcherPolicy" /> class.
            </summary>
            <param name="translator">The registered path template translator.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRoutingMatcherPolicy.Order">
            <summary>
            Gets a value that determines the order of this policy.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingMatcherPolicy.AppliesToEndpoints(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Http.Endpoint})">
            <summary>
            Returns a value that indicates whether the matcher applies to any endpoint in endpoints.
            </summary>
            <param name="endpoints">The set of candidate values.</param>
            <returns>true if the policy applies to any endpoint in endpoints, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingMatcherPolicy.ApplyAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.Matching.CandidateSet)">
            <summary>
            Applies the policy to the CandidateSet.
            </summary>
            <param name="httpContext">The context associated with the current request.</param>
            <param name="candidates">The CandidateSet.</param>
            <returns>The task.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.ODataRoutingMetadata">
            <summary>
            Represents OData Endpoint metadata used during routing.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingMetadata.#ctor(System.String,Microsoft.OData.Edm.IEdmModel,Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.ODataRoutingMetadata"/> class.
            </summary>
            <param name="prefix">The prefix string.</param>
            <param name="model">The Edm model.</param>
            <param name="template">The Routing path template.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.ODataRoutingMetadata.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.ODataRoutingMetadata"/> class.
            For unit test only
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRoutingMetadata.Prefix">
            <summary>
            Gets the prefix string.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRoutingMetadata.Model">
            <summary>
            Gets the Edm model.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.ODataRoutingMetadata.Template">
            <summary>
            Gets the OData path template
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.ODataSegmentKinds">
            <summary>
            Provides the values of segment kinds for implementations of odata path template.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataSegmentKinds.ServiceBase">
            <summary>
            Represents the service root segment (for OData service document).
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataSegmentKinds.Batch">
            <summary>
            Represents the OData $batch segment.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataSegmentKinds.Ref">
            <summary>
            Represents the OData $ref segment.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataSegmentKinds.Metadata">
            <summary>
            Represents the OData $metadata segment.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataSegmentKinds.Value">
            <summary>
            Represents the OData $value segment.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataSegmentKinds.Count">
            <summary>
            Represents the OData $count segment.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataSegmentKinds.Action">
            <summary>
            Represents a segment indicating a bound OData action.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataSegmentKinds.Function">
            <summary>
            Represents a segment indicating a bound OData function.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataSegmentKinds.UnboundAction">
            <summary>
            Represents a segment indicating an unbound OData action.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataSegmentKinds.UnboundFunction">
            <summary>
            Represents a segment indicating an unbound OData function.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataSegmentKinds.Cast">
            <summary>
            Represents a segment indicating a type cast.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataSegmentKinds.EntitySet">
            <summary>
            Represents a segment indicating an entity set.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataSegmentKinds.Singleton">
            <summary>
            Represents a segment indicating a singleton.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataSegmentKinds.Key">
            <summary>
            Represents a segment indicating an index by key operation.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataSegmentKinds.Navigation">
            <summary>
            Represents a segment indicating a navigation.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataSegmentKinds.PathTemplate">
            <summary>
            Represents a segment indicating a navigation link.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataSegmentKinds.Property">
            <summary>
            Represents a segment indicating a property access.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataSegmentKinds.DynamicProperty">
            <summary>
            Represents a segment indicating an dynamic property access.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.OData.Routing.ODataSegmentKinds.Unresolved">
            <summary>
            Represents a segment that is not understood.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Parser.DefaultODataPathParser">
            <summary>
            Exposes the ability to parse an OData path template as an <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.DefaultODataPathParser.Parse(Microsoft.OData.Edm.IEdmModel,System.Uri,System.Uri,System.IServiceProvider)">
            <summary>
            Parse the string like "/users/1/contactFolders/..."
            to segments
            </summary>
            <param name="model">the Edm model.</param>
            <param name="serviceRoot">The service root uri.</param>
            <param name="odataPath">the setting.</param>
            <param name="requestProvider">The service provider.</param>
            <returns>Null or <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Parser.DefaultODataPathTemplateParser">
            <summary>
            Exposes the ability to parse an OData path template as an <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.DefaultODataPathTemplateParser.Parse(Microsoft.OData.Edm.IEdmModel,System.String,System.IServiceProvider)">
            <summary>
            Parse the string like "/users/{id}/contactFolders/{contactFolderId}/contacts"
            to segments
            </summary>
            <param name="model">the Edm model.</param>
            <param name="odataPath">the OData path.</param>
            <param name="requestProvider">The service provider.</param>
            <returns>Null or <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.IODataPathParser.Parse(Microsoft.OData.Edm.IEdmModel,System.Uri,System.Uri,System.IServiceProvider)">
            <summary>
            Parses the specified OData path template as an <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate"/>.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="serviceRoot">The service root uri.</param>
            <param name="odataPath">The OData path template to parse.</param>
            <param name="requestProvider">The OData service provider.</param>
            <returns>A parsed representation of the template, or <c>null</c> if the template does not match the model.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Parser.IODataPathTemplateParser">
            <summary>
            Exposes the ability to parse an OData path template as an <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.IODataPathTemplateParser.Parse(Microsoft.OData.Edm.IEdmModel,System.String,System.IServiceProvider)">
            <summary>
            Parses the specified OData path template as an <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate"/>.
            </summary>
            <param name="model">The Edm model.</param>
            <param name="odataPath">The OData path template to parse.</param>
            <param name="requestProvider">The OData service provider.</param>
            <returns>A parsed representation of the template, or <c>null</c> if the template does not match the model.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Parser.ODataPathSegmentToTemplateHandler">
            <summary>
            Handle an OData path to a path segment templates.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.ODataPathSegmentToTemplateHandler.#ctor(Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Parser.ODataPathSegmentToTemplateHandler" /> class.
            </summary>
            <param name="model">The Edm model.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Parser.ODataPathSegmentToTemplateHandler.Templates">
            <summary>
            Gets the templates.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.ODataPathSegmentToTemplateHandler.Handle(Microsoft.OData.UriParser.MetadataSegment)">
            <summary>
            Translate a <see cref="T:Microsoft.OData.UriParser.MetadataSegment"/>
            </summary>
            <param name="segment">the segment to Translate</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.ODataPathSegmentToTemplateHandler.Handle(Microsoft.OData.UriParser.ValueSegment)">
            <summary>
            Translate a <see cref="T:Microsoft.OData.UriParser.ValueSegment"/>.
            </summary>
            <param name="segment">the segment to Translate</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.ODataPathSegmentToTemplateHandler.Handle(Microsoft.OData.UriParser.NavigationPropertyLinkSegment)">
            <summary>
            Translate a <see cref="T:Microsoft.OData.UriParser.NavigationPropertyLinkSegment"/>.
            </summary>
            <param name="segment">the segment to Translate</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.ODataPathSegmentToTemplateHandler.Handle(Microsoft.OData.UriParser.CountSegment)">
            <summary>
            Translate a <see cref="T:Microsoft.OData.UriParser.CountSegment"/>.
            </summary>
            <param name="segment">the segment to Translate</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.ODataPathSegmentToTemplateHandler.Handle(Microsoft.OData.UriParser.DynamicPathSegment)">
            <summary>
            Translate a <see cref="T:Microsoft.OData.UriParser.DynamicPathSegment"/>.
            </summary>
            <param name="segment">the segment to Translate</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.ODataPathSegmentToTemplateHandler.Handle(Microsoft.OData.UriParser.OperationSegment)">
            <summary>
            Translate a <see cref="T:Microsoft.OData.UriParser.OperationSegment"/>.
            </summary>
            <param name="segment">the segment to Translate</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.ODataPathSegmentToTemplateHandler.Handle(Microsoft.OData.UriParser.OperationImportSegment)">
            <summary>
            Translate a <see cref="T:Microsoft.OData.UriParser.OperationImportSegment"/>.
            </summary>
            <param name="segment">the segment to Translate</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.ODataPathSegmentToTemplateHandler.Handle(Microsoft.OData.UriParser.PropertySegment)">
            <summary>
            Translate a <see cref="T:Microsoft.OData.UriParser.PropertySegment"/>.
            </summary>
            <param name="segment">the segment to Translate</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.ODataPathSegmentToTemplateHandler.Handle(Microsoft.OData.UriParser.KeySegment)">
            <summary>
            Translate a <see cref="T:Microsoft.OData.UriParser.KeySegment"/>.
            </summary>
            <param name="segment">the segment to Translate</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.ODataPathSegmentToTemplateHandler.Handle(Microsoft.OData.UriParser.SingletonSegment)">
            <summary>
            Translate a <see cref="T:Microsoft.OData.UriParser.SingletonSegment"/>.
            </summary>
            <param name="segment">the segment to Translate</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.ODataPathSegmentToTemplateHandler.Handle(Microsoft.OData.UriParser.EntitySetSegment)">
            <summary>
            Translate a <see cref="T:Microsoft.OData.UriParser.EntitySetSegment"/>.
            </summary>
            <param name="segment">the segment to Translate</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.ODataPathSegmentToTemplateHandler.Handle(Microsoft.OData.UriParser.NavigationPropertySegment)">
            <summary>
            Translate a <see cref="T:Microsoft.OData.UriParser.NavigationPropertySegment"/>.
            </summary>
            <param name="segment">the segment to Translate</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.ODataPathSegmentToTemplateHandler.Handle(Microsoft.OData.UriParser.TypeSegment)">
            <summary>
            Translate a <see cref="T:Microsoft.OData.UriParser.TypeSegment"/>.
            </summary>
            <param name="segment">the segment to Translate</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.ODataPathSegmentToTemplateHandler.Handle(Microsoft.OData.UriParser.PathTemplateSegment)">
            <summary>
            Translate a <see cref="T:Microsoft.OData.UriParser.PathTemplateSegment"/>.
            </summary>
            <param name="segment">the segment to Translate</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.ODataPathSegmentToTemplateHandler.Handle(Microsoft.OData.UriParser.BatchSegment)">
            <summary>
            Translate a <see cref="T:Microsoft.OData.UriParser.BatchSegment"/>.
            </summary>
            <param name="segment">the segment to Translate</param>
            <returns>Translated the path segment template.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.ODataPathSegmentToTemplateHandler.Handle(Microsoft.OData.UriParser.BatchReferenceSegment)">
            <summary>
            Translate a <see cref="T:Microsoft.OData.UriParser.BatchReferenceSegment"/>.
            </summary>
            <param name="segment">the segment to Translate</param>
            <returns>Translated the path segment template.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Parser.UnqualifiedCallAndAlternateKeyResolver">
            <summary>
            The OData uri resolver wrapper for alternate key and unqualified function call.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Parser.UnqualifiedCallAndAlternateKeyResolver.EnableCaseInsensitive">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.UnqualifiedCallAndAlternateKeyResolver.ResolveUnboundOperations(Microsoft.OData.Edm.IEdmModel,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.UnqualifiedCallAndAlternateKeyResolver.ResolveBoundOperations(Microsoft.OData.Edm.IEdmModel,System.String,Microsoft.OData.Edm.IEdmType)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Parser.UnqualifiedCallAndAlternateKeyResolver.ResolveKeys(Microsoft.OData.Edm.IEdmEntityType,System.Collections.Generic.IDictionary{System.String,System.String},System.Func{Microsoft.OData.Edm.IEdmTypeReference,System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.ActionImportSegmentTemplate">
            <summary>
            Represents a template that could match an <see cref="T:Microsoft.OData.Edm.IEdmActionImport"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ActionImportSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmActionImport,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ActionImportSegmentTemplate" /> class.
            </summary>
            <param name="actionImport">The wrapper action import.</param>
            <param name="navigationSource">The target navigation source. it could be null.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ActionImportSegmentTemplate.#ctor(Microsoft.OData.UriParser.OperationImportSegment)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ActionImportSegmentTemplate" /> class.
            </summary>
            <param name="segment">The operation import segment.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ActionImportSegmentTemplate.ActionImport">
            <summary>
            Gets the wrapped action import.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ActionImportSegmentTemplate.Segment">
            <summary>
            Gets the action import segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ActionImportSegmentTemplate.GetTemplates(Microsoft.AspNetCore.OData.Routing.ODataRouteOptions)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ActionImportSegmentTemplate.TryTranslate(Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.ActionSegmentTemplate">
            <summary>
            Represents a template that could match an <see cref="T:Microsoft.OData.Edm.IEdmAction"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ActionSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmAction,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ActionSegmentTemplate" /> class.
            </summary>
            <param name="action">The Edm action.</param>
            <param name="navigationSource">The Edm navigation source.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ActionSegmentTemplate.#ctor(Microsoft.OData.UriParser.OperationSegment)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ActionSegmentTemplate" /> class.
            </summary>
            <param name="segment">The operation segment.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ActionSegmentTemplate.Action">
            <summary>
            Gets the wrapped Edm action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ActionSegmentTemplate.NavigationSource">
            <summary>
            Gets the wrapped Edm navigation source.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ActionSegmentTemplate.Segment">
            <summary>
            Gets the action segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ActionSegmentTemplate.GetTemplates(Microsoft.AspNetCore.OData.Routing.ODataRouteOptions)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ActionSegmentTemplate.TryTranslate(Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate">
            <summary>
            Represents a template that could match a type cast segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmType,Microsoft.OData.Edm.IEdmType,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate" /> class.
            </summary>
            <param name="castType">The cast Edm type.</param>
            <param name="expectedType">The expected Edm type.</param>
            <param name="navigationSource">The target navigation source. it could be null.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate.#ctor(Microsoft.OData.UriParser.TypeSegment)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate" /> class.
            </summary>
            <param name="typeSegment">The type segment.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate.CastType">
            <summary>
            Gets the cast type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate.ExpectedType">
            <summary>
            Gets the expected type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate.TypeSegment">
            <summary>
            Gets the expected type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate.GetTemplates(Microsoft.AspNetCore.OData.Routing.ODataRouteOptions)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.CastSegmentTemplate.TryTranslate(Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.CountSegmentTemplate">
            <summary>
            Represents a template that could match a $count segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.CountSegmentTemplate.Instance">
            <summary>
            Gets the static instance of <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.CountSegmentTemplate"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.CountSegmentTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.CountSegmentTemplate" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.CountSegmentTemplate.GetTemplates(Microsoft.AspNetCore.OData.Routing.ODataRouteOptions)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.CountSegmentTemplate.TryTranslate(Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.DefaultODataTemplateTranslator">
            <summary>
            Default implementation for <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.IODataTemplateTranslator"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.DefaultODataTemplateTranslator.Translate(Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate,Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.DynamicSegmentTemplate">
            <summary>
            Represents a template that can match a <see cref="T:Microsoft.OData.UriParser.DynamicPathSegment"/>.
            Be noted:
            a dynamic path segment is a real segment (not a template), its literal is dynamic property name.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.DynamicSegmentTemplate.#ctor(Microsoft.OData.UriParser.DynamicPathSegment)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.DynamicSegmentTemplate"/> class.
            </summary>
            <param name="segment">The open property segment</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.DynamicSegmentTemplate.Segment">
            <summary>
            Gets or sets the open property segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.DynamicSegmentTemplate.GetTemplates(Microsoft.AspNetCore.OData.Routing.ODataRouteOptions)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.DynamicSegmentTemplate.TryTranslate(Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.EntitySetSegmentTemplate">
            <summary>
            Represents a template that could match an <see cref="T:Microsoft.OData.Edm.IEdmEntitySet"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.EntitySetSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmEntitySet)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.EntitySetSegmentTemplate" /> class.
            </summary>
            <param name="entitySet">The Edm entity set.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.EntitySetSegmentTemplate.#ctor(Microsoft.OData.UriParser.EntitySetSegment)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.EntitySetSegmentTemplate" /> class.
            </summary>
            <param name="segment">The entity set segment.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.EntitySetSegmentTemplate.EntitySet">
            <summary>
            Gets the wrapped Edm entityset.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.EntitySetSegmentTemplate.Segment">
            <summary>
            Gets the entity set segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.EntitySetSegmentTemplate.GetTemplates(Microsoft.AspNetCore.OData.Routing.ODataRouteOptions)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.EntitySetSegmentTemplate.TryTranslate(Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.FunctionImportSegmentTemplate">
            <summary>
            Represents a template that could match an <see cref="T:Microsoft.OData.Edm.IEdmFunctionImport"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.FunctionImportSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmFunctionImport,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.FunctionImportSegmentTemplate" /> class.
            </summary>
            <param name="functionImport">The Edm function import.</param>
            <param name="navigationSource">The target navigation source, it could be null.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.FunctionImportSegmentTemplate.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.OData.Edm.IEdmFunctionImport,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.FunctionImportSegmentTemplate" /> class.
            </summary>
            <param name="parameters">The function parameter template mappings.The key string is case-sensitive, the value string should wrapper with { and }.</param>
            <param name="functionImport">The Edm function import.</param>
            <param name="navigationSource">The target navigation source, it could be null.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.FunctionImportSegmentTemplate.#ctor(Microsoft.OData.UriParser.OperationImportSegment)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.FunctionImportSegmentTemplate" /> class.
            </summary>
            <param name="segment">The input function import segment.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.FunctionImportSegmentTemplate.ParameterMappings">
            <summary>
            Gets the dictionary representing the mappings from the parameter names in the current function segment to the 
            parameter names in route data.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.FunctionImportSegmentTemplate.NavigationSource">
            <summary>
            Gets the target Navigation source of this segment.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.FunctionImportSegmentTemplate.FunctionImport">
            <summary>
            Gets the wrapped Edm function import.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.FunctionImportSegmentTemplate.GetTemplates(Microsoft.AspNetCore.OData.Routing.ODataRouteOptions)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.FunctionImportSegmentTemplate.TryTranslate(Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate">
            <summary>
            Represents a template that could match a bound <see cref="T:Microsoft.OData.Edm.IEdmFunction"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmFunction,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate" /> class.
            </summary>
            <param name="function">The Edm function, it should be bound function.</param>
            <param name="navigationSource">The Edm navigation source of this function return. It could be null.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.OData.Edm.IEdmFunction,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate" /> class.
            </summary>
            <param name="parameters">The function parameter template mappings.The key string is case-sensitive, the value string should wrapper with { and }.</param>
            <param name="function">The Edm function, it should be bound function.</param>
            <param name="navigationSource">The Edm navigation source of this function return. It could be null.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate.#ctor(Microsoft.OData.UriParser.OperationSegment)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate" /> class.
            </summary>
            <param name="operationSegment">The operation segment, it should be a function segment and the parameters are template.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate.ParameterMappings">
            <summary>
            Gets the dictionary representing the mappings from the parameter names in the current function segment to the 
            parameter names in route data.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate.Function">
            <summary>
            Gets the wrapped Edm function.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate.NavigationSource">
            <summary>
            Gets the wrapped navigation source.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate.GetTemplates(Microsoft.AspNetCore.OData.Routing.ODataRouteOptions)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.FunctionSegmentTemplate.TryTranslate(Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.IODataTemplateTranslator">
            <summary>
            Defines a contract used to translate the OData path template to OData path.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.IODataTemplateTranslator.Translate(Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate,Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext)">
            <summary>
            Translate the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate"/> to <see cref="T:Microsoft.OData.UriParser.ODataPath"/>
            </summary>
            <param name="path">The OData path template.</param>
            <param name="context">The translate context.</param>
            <returns>The OData Path.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate">
            <summary>
            Represents a template that could match a key segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.OData.Edm.IEdmEntityType,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate" /> class.
            </summary>
            <param name="keys">The input key mappings, the key string is case-sensitive, the value string should wrapper with { and }.</param>
            <param name="entityType">The declaring type contains the key.</param>
            <param name="navigationSource">The navigation source. It could be null.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.#ctor(Microsoft.OData.UriParser.KeySegment)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate" /> class.
            </summary>
            <param name="segment">The key segment, it should be a template key segment.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.#ctor(Microsoft.OData.UriParser.KeySegment,System.Collections.Generic.IDictionary{System.String,Microsoft.OData.Edm.IEdmProperty})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate" /> class.
            Typically, it's for alternate key scenario.
            </summary>
            <param name="segment">The key segment, it should be a template key segment.</param>
            <param name="keyProperties">The key properties, the key is the alias,
            the value is the property list, it could be a property from the complex property. For example: address/city.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.KeyMappings">
            <summary>
            Gets the dictionary representing the mappings from the key names in the current key segment to the 
            key names in route data.
            the key in dict could be the string used in request
            the value in dict could be the string used in action of controller
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.KeyProperties">
            <summary>
            Gets the keys.
            The key of dictionary is the key name or alias.
            The value of dictionary is the key property, it could be property on entity type or sub property on complex property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.NavigationSource">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.EntityType">
            <summary>
            Gets the entity type declaring this key.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.Count">
            <summary>
            Gets the key count
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.GetTemplates(Microsoft.AspNetCore.OData.Routing.ODataRouteOptions)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.TryTranslate(Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.CreateKeySegment(Microsoft.OData.Edm.IEdmEntityType,Microsoft.OData.Edm.IEdmNavigationSource,System.String)">
            <summary>
            Create <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate"/> based on the given entity type and navigation source.
            </summary>
            <param name="entityType">The given entity type.</param>
            <param name="navigationSource">The given navigation source.</param>
            <param name="keyPrefix">The prefix used before key template.</param>
            <returns>The built <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.KeySegmentTemplate.BuildKeyMappings(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},Microsoft.OData.Edm.IEdmEntityType,System.Collections.Generic.IDictionary{System.String,Microsoft.OData.Edm.IEdmProperty})">
            <summary>
            Build the key mappings
            </summary>
            <param name="keys">The Uri template parsing result. for example: SSN={ssnKey}</param>
            <param name="entityType">The Edm entity type.</param>
            <param name="keyProperties">The key properties.</param>
            <returns>The mapping</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.MetadataSegmentTemplate">
            <summary>
            Represents a template that could match "$metadata".
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.MetadataSegmentTemplate.Instance">
            <summary>
            Gets the static instance of $metadata
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.MetadataSegmentTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.MetadataSegmentTemplate" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.MetadataSegmentTemplate.GetTemplates(Microsoft.AspNetCore.OData.Routing.ODataRouteOptions)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.MetadataSegmentTemplate.TryTranslate(Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.NavigationLinkSegmentTemplate">
            <summary>
            Represents a template that can match a <see cref="T:Microsoft.OData.UriParser.NavigationPropertyLinkSegment"/> and a potential key.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.NavigationLinkSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmNavigationProperty,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.NavigationLinkSegmentTemplate" /> class.
            </summary>
            <param name="navigationProperty">The Edm navigation property.</param>
            <param name="navigationSource">The Edm navigation source. This could be null.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.NavigationLinkSegmentTemplate.#ctor(Microsoft.OData.UriParser.NavigationPropertyLinkSegment)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.NavigationLinkSegmentTemplate" /> class.
            </summary>
            <param name="segment">The navigation link segment.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.NavigationLinkSegmentTemplate.Key">
            <summary>
            Gets/sets the related key template.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.NavigationLinkSegmentTemplate.NavigationProperty">
            <summary>
            Gets the Edm navigation property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.NavigationLinkSegmentTemplate.NavigationSource">
            <summary>
            Gets the navigation source.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.NavigationLinkSegmentTemplate.Segment">
            <summary>
            Gets the navigation property link segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.NavigationLinkSegmentTemplate.GetTemplates(Microsoft.AspNetCore.OData.Routing.ODataRouteOptions)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.NavigationLinkSegmentTemplate.TryTranslate(Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.NavigationLinkTemplateSegmentTemplate">
            <summary>
            Represents a template that could match a $ref on a generic navigation segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.NavigationLinkTemplateSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmStructuredType,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.NavigationLinkTemplateSegmentTemplate" /> class.
            </summary>
            <param name="declaringType">The declaring type.</param>
            <param name="navigationSource">The Edm navigation source.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.NavigationLinkTemplateSegmentTemplate.RelatedKey">
            <summary>
            Gets the related key mapping.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.NavigationLinkTemplateSegmentTemplate.DeclaringType">
            <summary>
            Gets the declaring type for this property template.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.NavigationLinkTemplateSegmentTemplate.NavigationSource">
            <summary>
            Gets the navigation source.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.NavigationLinkTemplateSegmentTemplate.GetTemplates(Microsoft.AspNetCore.OData.Routing.ODataRouteOptions)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.NavigationLinkTemplateSegmentTemplate.TryTranslate(Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.NavigationSegmentTemplate">
            <summary>
            Represents a template that could match an <see cref="T:Microsoft.OData.Edm.IEdmNavigationProperty"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.NavigationSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmNavigationProperty,Microsoft.OData.Edm.IEdmNavigationSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.NavigationSegmentTemplate" /> class.
            </summary>
            <param name="navigationProperty">The Edm navigation property.</param>
            <param name="navigationSource">The target navigation source.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.NavigationSegmentTemplate.#ctor(Microsoft.OData.UriParser.NavigationPropertySegment)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.NavigationSegmentTemplate" /> class.
            </summary>
            <param name="segment">The navigation property segment.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.NavigationSegmentTemplate.NavigationProperty">
            <summary>
            Gets the wrapped Edm navigation property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.NavigationSegmentTemplate.Segment">
            <summary>
            Gets the navigation property segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.NavigationSegmentTemplate.GetTemplates(Microsoft.AspNetCore.OData.Routing.ODataRouteOptions)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.NavigationSegmentTemplate.TryTranslate(Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate">
            <summary>
            Represents a path template that could contains a list of <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate.#ctor(Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate" /> class.
            </summary>
            <param name="segments">The path segment templates for the path.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate" /> class.
            </summary>
            <param name="segments">The path segment templates for the path.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate.#ctor(System.Collections.Generic.IList{Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate" /> class.
            </summary>
            <param name="segments">The path segments for the path.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate.GetTemplates(Microsoft.AspNetCore.OData.Routing.ODataRouteOptions)">
            <summary>
            Generates all templates for the given <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataPathTemplate"/> using the given <see cref="T:Microsoft.AspNetCore.OData.Routing.ODataRouteOptions"/>.
            All templates mean:
            1) for key segment, we have key in parenthesis and key as segment.
            2) for bound function/action segment, we have qualified function call and unqualified function call.
            All of such might be based on route options.
            </summary>
            <param name="options">The route options.</param>
            <returns>All path templates.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate">
            <summary>
            Base class for OData segment template
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate.GetTemplates(Microsoft.AspNetCore.OData.Routing.ODataRouteOptions)">
            <summary>
            Gets the templates. It's case-insensitive template.
            It's used to build the routing template in conventional routing.
            It's not used in attribute routing.
            The template string should include the leading "/" if apply.
            </summary>
            <param name="options">The route options.</param>
            <returns>The built segment templates.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate.TryTranslate(Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext)">
            <summary>
            Translate the template into a real OData path segment <see cref="T:Microsoft.OData.UriParser.ODataPathSegment"/>
            </summary>
            <param name="context">The translate context.</param>
            <returns>True if translated. False if no.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ODataSegmentTemplate.GetTemplates">
            <summary>
            Gets the templates by default. It's case-insensitive template.
            It's used to build the routing template in conventional routing.
            It's not used in attribute routing.
            The template string should include the leading "/" if apply.
            </summary>
            <remarks>Used in Unit test.</remarks>
            <returns>The built segment templates.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext">
            <summary>
            The context used to generate the <see cref="T:Microsoft.OData.UriParser.ODataPathSegment"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext" /> class.
            For Unit test only.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Http.Endpoint,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.OData.Edm.IEdmModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext" /> class.
            </summary>
            <param name="context">The current HttpContext.</param>
            <param name="endpoint">The current endpoint to match.</param>
            <param name="routeValues">The current route values.</param>
            <param name="model">The current Edm model.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext.Endpoint">
            <summary>
            Gets the current Endpoint <see cref="P:Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext.Endpoint"/>.
            </summary>
            <remarks>
            The internal setter is provided for unit test purposes only.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext.HttpContext">
            <summary>
            Gets the current HttpContext <see cref="P:Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext.HttpContext"/>.
            </summary>
            <remarks>
            The internal setter is provided for unit test purposes only.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext.RouteValues">
            <summary>
            Gets the route values <see cref="T:Microsoft.AspNetCore.Routing.RouteValueDictionary"/>.
            </summary>
            <remarks>
            The internal setter is provided for unit test purposes only.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext.Model">
            <summary>
            Gets the Edm model <see cref="T:Microsoft.OData.Edm.IEdmModel"/>.
            </summary>
            <remarks>
            The internal setter is provided for unit test purposes only.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext.UpdatedValues">
            <summary>
            Gets the updated route values. This will include the updated route values.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext.Segments">
            <summary>
            Gets the generated path segments.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext.GetParameterAliasOrSelf(System.String)">
            <summary>
            Gets the parameter alias or the alias name itself.
            </summary>
            <param name="alias">The potential alias name.</param>
            <returns>The parameter alias name.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.PathTemplateSegmentTemplate">
            <summary>
             Represents a template that can match a <see cref="T:Microsoft.OData.UriParser.PathTemplateSegment"/>.
             From OData Lib:
             If template parsing enabled, any literal wrapped with "{" and "}" is considered as PathTemplateSegment.
             So, here's the design (so far, we can add more later):
             {property} ==> declared property
             {dynamicproperty} => dynamic property
             TODO: we can change to use route constraint, for example:
             {name:odataproperty}
             {name:odatadynamic}
             {name:odatacast}
             {name:odataentityset} ...
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.PathTemplateSegmentTemplate.#ctor(Microsoft.OData.UriParser.PathTemplateSegment)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.PathTemplateSegmentTemplate"/> class.
            </summary>
            <param name="segment">The path template segment to be parsed as a template.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.PathTemplateSegmentTemplate.ParameterName">
            <summary>
            Gets the segment name
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.PathTemplateSegmentTemplate.Segment">
            <summary>
            The parameter name of the dynamic property.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.PathTemplateSegmentTemplate.GetTemplates(Microsoft.AspNetCore.OData.Routing.ODataRouteOptions)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.PathTemplateSegmentTemplate.TryTranslate(Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.PropertyCatchAllSegmentTemplate">
            <summary>
            Represents a template that could match '{property}' segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.PropertyCatchAllSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmStructuredType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.PropertyCatchAllSegmentTemplate" /> class.
            </summary>
            <param name="declaredType">The declared type.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.PropertyCatchAllSegmentTemplate.StructuredType">
            <summary>
            Gets the declared type for this property template.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.PropertyCatchAllSegmentTemplate.GetTemplates(Microsoft.AspNetCore.OData.Routing.ODataRouteOptions)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.PropertyCatchAllSegmentTemplate.TryTranslate(Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.PropertySegmentTemplate">
            <summary>
            Represents a template that could match an <see cref="T:Microsoft.OData.Edm.IEdmStructuralProperty"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.PropertySegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmStructuralProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.PropertySegmentTemplate" /> class.
            </summary>
            <param name="property">The wrapped Edm property.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.PropertySegmentTemplate.#ctor(Microsoft.OData.UriParser.PropertySegment)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.PropertySegmentTemplate" /> class.
            </summary>
            <param name="segment">The property segment.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.PropertySegmentTemplate.Property">
            <summary>
            Gets the wrapped Edm property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.PropertySegmentTemplate.Segment">
            <summary>
            Gets the property segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.PropertySegmentTemplate.GetTemplates(Microsoft.AspNetCore.OData.Routing.ODataRouteOptions)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.PropertySegmentTemplate.TryTranslate(Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.SegmentTemplateHelpers">
            <summary>
            Helper methods for segment template
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.SegmentTemplateHelpers.Match(Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext,Microsoft.OData.Edm.IEdmFunction,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Match the function parameter
            </summary>
            <param name="context">The context.</param>
            <param name="function">The Edm function.</param>
            <param name="parameterMappings">The parameter mapping.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.SegmentTemplateHelpers.IsMatchParameters(Microsoft.AspNetCore.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Match the parameters
            </summary>
            <param name="routeValues">The route values</param>
            <param name="parameterMappings">The parameter mappings.</param>
            <returns>True/False.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.SingletonSegmentTemplate">
            <summary>
            Represents a template that could match an <see cref="T:Microsoft.OData.Edm.IEdmSingleton"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.SingletonSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmSingleton)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.SingletonSegmentTemplate" /> class.
            </summary>
            <param name="singleton">The Edm singleton.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.SingletonSegmentTemplate.#ctor(Microsoft.OData.UriParser.SingletonSegment)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.SingletonSegmentTemplate" /> class.
            </summary>
            <param name="segment">The singleton segment.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.SingletonSegmentTemplate.Singleton">
            <summary>
            Gets the wrapped Edm singleton.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.SingletonSegmentTemplate.Segment">
            <summary>
            Gets the wrapped singleton segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.SingletonSegmentTemplate.GetTemplates(Microsoft.AspNetCore.OData.Routing.ODataRouteOptions)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.SingletonSegmentTemplate.TryTranslate(Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.OData.Routing.Template.ValueSegmentTemplate">
            <summary>
            Represents a template that could match a "/$value" segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ValueSegmentTemplate.#ctor(Microsoft.OData.Edm.IEdmType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ValueSegmentTemplate" /> class.
            </summary>
            <param name="previousType">The value segment Edm type.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ValueSegmentTemplate.#ctor(Microsoft.OData.UriParser.ValueSegment)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.OData.Routing.Template.ValueSegmentTemplate" /> class.
            </summary>
            <param name="segment">The value segment.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.OData.Routing.Template.ValueSegmentTemplate.Segment">
            <summary>
            Gets the value segment.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ValueSegmentTemplate.GetTemplates(Microsoft.AspNetCore.OData.Routing.ODataRouteOptions)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.OData.Routing.Template.ValueSegmentTemplate.TryTranslate(Microsoft.AspNetCore.OData.Routing.Template.ODataTemplateTranslateContext)">
            <inheritdoc />
        </member>
    </members>
</doc>
