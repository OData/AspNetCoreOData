<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NullContainer" xml:space="preserve">
    <value>The container built by the container builder must not be null.</value>
  </data>
  <data name="MissingODataContainer" xml:space="preserve">
    <value>Cannot find the services container for route '{0}'. This should not happen and represents a bug.</value>
  </data>
  <data name="MissingNonODataContainer" xml:space="preserve">
    <value>Cannot find the services container for the non-OData route. This can occur when using OData components on the non-OData route and is usually a configuration issue. Call EnableDependencyInjection() to enable OData components on non-OData routes. This may also occur when a request was mistakenly handled by the ASP.NET Core routing layer instead of the OData routing layer, for instance the URL does not include the OData route prefix configured via a call to MapODataServiceRoute().</value>
  </data>
  <data name="MissingODataServices" xml:space="preserve">
    <value>Cannot find '{0}'. The OData services have not been configured. Are you missing a call to AddOData()?</value>
  </data>
  <data name="RequestMustHaveModel" xml:space="preserve">
    <value>The request must have an associated EDM model. Consider registering Edm model calling AddOData().</value>
  </data>
  <data name="ArgumentMustBeGreaterThanOrEqualTo" xml:space="preserve">
    <value>Value must be greater than or equal to {0}.</value>
  </data>
  <data name="ArgumentMustBeLessThanOrEqualTo" xml:space="preserve">
    <value>Value must be less than or equal to {0}.</value>
  </data>
  <data name="InvalidODataRouteOnAction" xml:space="preserve">
    <value>The path template '{0}' on the action '{1}' in controller '{2}' is not a valid OData path template. {3}</value>
  </data>
  <data name="InputKeyNotMatchEntityTypeKey" xml:space="preserve">
    <value>The input key count '{0}' does not match the number '{1}' of the key of entity type '{2}'.</value>
  </data>
  <data name="CannotFindKeyInEntityType" xml:space="preserve">
    <value>Cannot find key '{0}' in the '{1}' type.</value>
  </data>
  <data name="InvalidKeyInUriFound" xml:space="preserve">
    <value>The key value ({0}) from request is not valid. The key value should be format of type '{1}'.</value>
  </data>
  <data name="InvalidParameterValueInUriFound" xml:space="preserve">
    <value>The parameter value ({0}) from request is not valid. The parameter value should be format of type '{1}'.</value>
  </data>
  <data name="InputCastTypeKindNotMatch" xml:space="preserve">
    <value>The input cast type '{0}' does not match the expected type kind '{1}'.</value>
  </data>
  <data name="TypeMustBeRelated" xml:space="preserve">
    <value>The type '{0}' does not inherit from and is not a base type of '{1}'.</value>
  </data>
  <data name="MultipleMatchingClrTypesForEdmType" xml:space="preserve">
    <value>More than one matching CLR type found for the EDM type {0}.\nThe matching CLR types are {1}.</value>
  </data>
  <data name="PropertyMustBeTimeOfDay" xml:space="preserve">
    <value>The value must be a Edm.TimeOfDay.</value>
  </data>
  <data name="PropertyMustBeStringLengthOne" xml:space="preserve">
    <value>The value must be a string with a length of 1.</value>
  </data>
  <data name="PropertyMustBeStringMaxLengthOne" xml:space="preserve">
    <value>The value must be a string with a maximum length of 1.</value>
  </data>
  <data name="PropertyMustBeString" xml:space="preserve">
    <value>The value must be a string.</value>
  </data>
  <data name="PropertyMustBeDateTimeOffsetOrDate" xml:space="preserve">
    <value>The value must be a DateTimeOffset or Date.</value>
  </data>
  <data name="PropertyMustBeBoolean" xml:space="preserve">
    <value>The value must be a boolean.</value>
  </data>
  <data name="PropertyMustBeEnum" xml:space="preserve">
    <value>The value with type '{0}' must have type '{1}'.</value>
  </data>
  <data name="TypeMustBeEnumOrNullableEnum" xml:space="preserve">
    <value>The type '{0}' must be an enum or Nullable&lt;T&gt; where T is an enum type.</value>
  </data>
  <data name="EdmTypeNotSupported" xml:space="preserve">
    <value>{0} is not a supported EDM type.</value>
  </data>
  <data name="DeltaTypeMismatch" xml:space="preserve">
    <value>Cannot use Delta of type '{0}' on an entity of type '{1}'.</value>
  </data>
  <data name="DeltaNestedResourceNameNotFound" xml:space="preserve">
    <value>Cannot find nested resource name '{0}' in parent resource type '{1}'</value>
  </data>
  <data name="CannotSetDynamicPropertyDictionary" xml:space="preserve">
    <value>The dynamic dictionary property '{0}' of type '{1}' cannot be set. The dynamic property dictionary must have a setter.</value>
  </data>
  <data name="DeltaEntityTypeNotAssignable" xml:space="preserve">
    <value>The actual entity type '{0}' is not assignable to the expected type '{1}'.</value>
  </data>
  <data name="UnexpectedElementType" xml:space="preserve">
    <value>The element type '{0}' of the given collection type '{1}' is not of the type '{2}'.</value>
  </data>
  <data name="EdmComplexObjectNullRef" xml:space="preserve">
    <value>Cannot get property '{0}' of a null EDM object of type '{1}'.</value>
  </data>
  <data name="UnsupportedEdmType" xml:space="preserve">
    <value>The EDM type '{0}' of kind '{1}' is not supported.</value>
  </data>
  <data name="UnsupportedEdmTypeKind" xml:space="preserve">
    <value>Found unsupported EdmTypeKind '{0}' in list of available types.</value>
  </data>
  <data name="CannotWriteType" xml:space="preserve">
    <value>{0} cannot write an object of type '{1}'.</value>
  </data>
  <data name="WriteObjectInlineNotSupported" xml:space="preserve">
    <value>{0} does not support WriteObjectInline.</value>
  </data>
  <data name="CreateODataValueNotSupported" xml:space="preserve">
    <value>{0} does not support CreateODataValue.</value>
  </data>
  <data name="TypeCannotBeSerialized" xml:space="preserve">
    <value>'{0}' cannot be serialized using the OData output formatter.</value>
  </data>
  <data name="NullElementInCollection" xml:space="preserve">
    <value>Collections cannot contain null elements.</value>
  </data>
  <data name="ArgumentMustBeOfType" xml:space="preserve">
    <value>The argument must be of type '{0}'.</value>
  </data>
  <data name="WriteObjectNotSupported" xml:space="preserve">
    <value>{0} does not support WriteObject.</value>
  </data>
  <data name="WriteToResponseAsyncMustHaveRequest" xml:space="preserve">
    <value>The OData formatter requires an attached request in order to serialize.</value>
  </data>
  <data name="ReadFromStreamAsyncMustHaveRequest" xml:space="preserve">
    <value>The OData formatter requires an attached request in order to deserialize.</value>
  </data>
  <data name="DeserializerDoesNotSupportRead" xml:space="preserve">
    <value>'{0}' does not support Read.</value>
  </data>
  <data name="DoesNotSupportReadInLine" xml:space="preserve">
    <value>Type '{0}' does not support ReadInline.</value>
  </data>
  <data name="TypeCannotBeDeserialized" xml:space="preserve">
    <value>'{0}' cannot be deserialized using the OData input formatter.</value>
  </data>
  <data name="CollectionShouldHaveAddMethod" xml:space="preserve">
    <value>The type '{0}' of the property '{1}' on type '{2}' does not have an Add method. Consider using a collection type that does have an Add method - for example IList&lt;T&gt; or ICollection&lt;T&gt;.</value>
  </data>
  <data name="GetOnlyCollectionCannotBeArray" xml:space="preserve">
    <value>The value of the property '{0}' on type '{1}' is an array. Consider adding a setter for the property.</value>
  </data>
  <data name="CollectionParameterShouldHaveAddMethod" xml:space="preserve">
    <value>The type '{0}' of the parameter '{1}' does not have an Add method. Consider using a collection type that does have an Add method - for example IList&lt;T&gt; or ICollection&lt;T&gt;.</value>
  </data>
  <data name="CollectionShouldHaveClearMethod" xml:space="preserve">
    <value>The type '{0}' of the property '{1}' on type '{2}' does not have a Clear method. Consider using a collection type that does have a Clear method, such as IList&lt;T&gt; or ICollection&lt;T&gt;.</value>
  </data>
  <data name="NestedCollectionsNotSupported" xml:space="preserve">
    <value>The type '{0}' is a nested collection type. Nested collection types are not allowed.</value>
  </data>
  <data name="CannotAddToNullCollection" xml:space="preserve">
    <value>The property '{0}' on type '{1}' returned a null value. The input stream contains collection items which cannot be added if the instance is null.</value>
  </data>
  <data name="DuplicateDynamicPropertyNameFound" xml:space="preserve">
    <value>Duplicate dynamic property name '{0}' found in open type '{1}'. Each dynamic property name must be unique.</value>
  </data>
  <data name="InvalidODataUntypedValue" xml:space="preserve">
    <value>The given untyped value '{0}' in payload is invalid. Consider using a OData type annotation explicitly.</value>
  </data>
  <data name="PropertyIsNotCollection" xml:space="preserve">
    <value>The type '{0}' of the property '{1}' on type '{2}' must be a collection.</value>
  </data>
  <data name="CannotDeserializeUnknownProperty" xml:space="preserve">
    <value>The property '{0}' does not exist on type '{1}'. Make sure to only use property names that are defined by the type.</value>
  </data>
  <data name="AmbiguousPropertyNameFound" xml:space="preserve">
    <value>Ambiguous property name '{0}' found. Please use correct property name case.</value>
  </data>
  <data name="AmbiguousTypeNameFound" xml:space="preserve">
    <value>Ambiguous type name '{0}' found. Please use correct type name case.</value>
  </data>
  <data name="AmbiguousNavigationSourceNameFound" xml:space="preserve">
    <value>Ambiguous navigation source (entity set or singleton) name '{0}' found. Please use correct navigation source name case.</value>
  </data>
  <data name="ODataPathMissing" xml:space="preserve">
    <value>The operation cannot be completed because no ODataPath is available for the request.</value>
  </data>
  <data name="MappingDoesNotContainResourceType" xml:space="preserve">
    <value>The provided mapping does not contain a resource for the resource type '{0}'.</value>
  </data>
  <data name="ModelMissingFromReadContext" xml:space="preserve">
    <value>The EDM model is missing on the read context. The model is required on the read context to deserialize the payload.</value>
  </data>
  <data name="CannotPatchNavigationProperties" xml:space="preserve">
    <value>Cannot apply PATCH to navigation property '{0}' on entity type '{1}'.</value>
  </data>
  <data name="NestedPropertyNotfound" xml:space="preserve">
    <value>Cannot find nested property '{0}' on the resource type '{1}'.</value>
  </data>
  <data name="ResourceTypeNotInModel" xml:space="preserve">
    <value>Cannot find the resource type '{0}' in the model.</value>
  </data>
  <data name="CannotInstantiateAbstractResourceType" xml:space="preserve">
    <value>An instance of the abstract resource type '{0}' was found. Abstract resource types cannot be instantiated.</value>
  </data>
  <data name="NavigationSourceMissingDuringDeserialization" xml:space="preserve">
    <value>The related entity set or singleton cannot be found from the OData path. The related entity set or singleton is required to deserialize the payload.</value>
  </data>
  <data name="DynamicResourceSetTypeNameIsRequired" xml:space="preserve">
    <value>The type name of the dynamic resource set '{0}' is required and cannot be empty. Consider using a OData type annotation explicitly.</value>
  </data>
  <data name="TypeMustBeResourceSet" xml:space="preserve">
    <value>'{0}' is not a resource set type. Only resource set are supported.</value>
  </data>
  <data name="RequestNotActionInvocation" xml:space="preserve">
    <value>The last segment of the request URI '{0}' was not recognized as an OData action.</value>
  </data>
  <data name="EdmTypeCannotBeNull" xml:space="preserve">
    <value>The EDM type of the object of type '{0}' is null. The EDM type of an '{1}' cannot be null.</value>
  </data>
  <data name="UnableToDetermineMetadataUrl" xml:space="preserve">
    <value>The OData formatter must be able to determine the metadata URL for a request in order to serialize the response.</value>
  </data>
  <data name="CannotSerializerNull" xml:space="preserve">
    <value>Cannot serialize a null '{0}'.</value>
  </data>
  <data name="SelectionTypeNotSupported" xml:space="preserve">
    <value>$select does not support selections of type '{0}'.</value>
  </data>
  <data name="PropertyNotFound" xml:space="preserve">
    <value>The EDM instance of type '{0}' is missing the property '{1}'.</value>
  </data>
  <data name="EdmObjectNull" xml:space="preserve">
    <value>The property 'EdmObject' of {0} cannot be null.</value>
  </data>
  <data name="DynamicPropertyNameAlreadyUsedAsDeclaredPropertyName" xml:space="preserve">
    <value>The name of dynamic property '{0}' was already used as the declared property name of open type '{1}'.</value>
  </data>
  <data name="TypeOfDynamicPropertyNotSupported" xml:space="preserve">
    <value>The type '{0}' of dynamic property '{1}' is not supported.</value>
  </data>
  <data name="DynamicPropertyCannotBeSerialized" xml:space="preserve">
    <value>The dynamic property '{0}' with Edm type '{1}' cannot be serialized.</value>
  </data>
  <data name="KeyValueCannotBeNull" xml:space="preserve">
    <value>Key property '{0}' of type '{1}' is null. Key properties cannot have null values.</value>
  </data>
  <data name="ClrTypeNotInModel" xml:space="preserve">
    <value>The given model does not contain the type '{0}'.</value>
  </data>
  <data name="RootElementNameMissing" xml:space="preserve">
    <value>The 'RootElementName' property is required on '{0}'.</value>
  </data>
  <data name="FormatterReadIsNotSupportedForType" xml:space="preserve">
    <value>Reading type '{0}' is not supported by '{1}'.</value>
  </data>
  <data name="ModelBinderUtil_ModelMetadataCannotBeNull" xml:space="preserve">
    <value>The binding context cannot have a null ModelMetadata.</value>
  </data>
  <data name="ApplyToOnUntypedQueryOption" xml:space="preserve">
    <value>The query option is not bound to any CLR type. '{0}' is only supported with a query option bound to a CLR type.</value>
  </data>
  <data name="SkipTopLimitExceeded" xml:space="preserve">
    <value>The limit of '{0}' for {1} query has been exceeded. The value from the incoming request is '{2}'.</value>
  </data>
  <data name="ActionExecutedContextMustHaveRequest" xml:space="preserve">
    <value>The HttpExecutedActionContext.Request is null.</value>
  </data>
  <data name="ActionContextMustHaveDescriptor" xml:space="preserve">
    <value>The HttpActionContext.ActionDescriptor is null.</value>
  </data>
  <data name="UriQueryStringInvalid" xml:space="preserve">
    <value>The query specified in the URI is not valid. {0}</value>
  </data>
  <data name="QueryParameterNotSupported" xml:space="preserve">
    <value>The query parameter '{0}' is not supported.</value>
  </data>
  <data name="ETagNotWellFormed" xml:space="preserve">
    <value>The ETag is not well-formed.</value>
  </data>
  <data name="CannotApplyETagOfT" xml:space="preserve">
    <value>Cannot apply {0} of '{1}' to {2} of '{3}'.</value>
  </data>
  <data name="ElementClrTypeNull" xml:space="preserve">
    <value>The property 'ElementClrType' of {0} cannot be null.</value>
  </data>
  <data name="EntityTypeMismatch" xml:space="preserve">
    <value>The entity type '{0}' does not match the expected entity type '{1}' as set on the query context.</value>
  </data>
  <data name="CannotApplyODataQueryOptionsOfT" xml:space="preserve">
    <value>Cannot apply {0} of '{1}' to {2} of '{3}'.</value>
  </data>
  <data name="NotAllowedQueryOption" xml:space="preserve">
    <value>Query option '{0}' is not allowed. To allow it, set the '{1}' property on EnableQueryAttribute or QueryValidationSettings.</value>
  </data>
  <data name="QueryCannotBeEmpty" xml:space="preserve">
    <value>The value for OData query '{0}' cannot be empty.</value>
  </data>
  <data name="ActionDescriptorNotControllerActionDescriptor" xml:space="preserve">
    <value>ActionDescriptor is not ControllerActionDescriptor.</value>
  </data>
  <data name="FailedToBuildEdmModelBecauseReturnTypeIsNull" xml:space="preserve">
    <value>Cannot create an EDM model as the action '{0}' on controller '{1}' has a void return type.</value>
  </data>
  <data name="FailedToRetrieveTypeToBuildEdmModel" xml:space="preserve">
    <value>Cannot create an EDM model as the action '{0}' on controller '{1}' has a return type '{2}' that does not implement IEnumerable&lt;T&gt;.</value>
  </data>
  <data name="ModelBindingContextMustHaveRequest" xml:space="preserve">
    <value>The model binding context requires an attached request in order to model binding.</value>
  </data>
  <data name="NotAllowedLogicalOperator" xml:space="preserve">
    <value>Logical operator '{0}' is not allowed. To allow it, set the '{1}' property on EnableQueryAttribute or QueryValidationSettings.</value>
  </data>
  <data name="NotAllowedOrderByProperty" xml:space="preserve">
    <value>Order by '{0}' is not allowed. To allow it, set the '{1}' property on EnableQueryAttribute or QueryValidationSettings.</value>
  </data>
  <data name="NotAllowedArithmeticOperator" xml:space="preserve">
    <value>Arithmetic operator '{0}' is not allowed. To allow it, set the '{1}' property on EnableQueryAttribute or QueryValidationSettings.</value>
  </data>
  <data name="NotFilterablePropertyUsedInFilter" xml:space="preserve">
    <value>The property '{0}' cannot be used in the $filter query option.</value>
  </data>
  <data name="NotSortablePropertyUsedInOrderBy" xml:space="preserve">
    <value>The property '{0}' cannot be used in the $orderby query option.</value>
  </data>
  <data name="NotExpandablePropertyUsedInExpand" xml:space="preserve">
    <value>The property '{0}' cannot be used in the $expand query option.</value>
  </data>
  <data name="NotSelectablePropertyUsedInSelect" xml:space="preserve">
    <value>The property '{0}' cannot be used in the $select query option.</value>
  </data>
  <data name="NotNavigablePropertyUsedInNavigation" xml:space="preserve">
    <value>The property '{0}' cannot be used for navigation.</value>
  </data>
  <data name="NotCountablePropertyUsedForCount" xml:space="preserve">
    <value>The property '{0}' cannot be used for $count.</value>
  </data>
  <data name="NotCountableEntitySetUsedForCount" xml:space="preserve">
    <value>The entity set '{0}' cannot be used for $count.</value>
  </data>
  <data name="MaxNodeLimitExceeded" xml:space="preserve">
    <value>The node count limit of '{0}' has been exceeded. To increase the limit, set the '{1}' property on EnableQueryAttribute or ODataValidationSettings.</value>
  </data>
  <data name="QueryNodeValidationNotSupported" xml:space="preserve">
    <value>Validating OData QueryNode of kind {0} is not supported by {1}.</value>
  </data>
  <data name="NotAllowedFunction" xml:space="preserve">
    <value>Function '{0}' is not allowed. To allow it, set the '{1}' property on EnableQueryAttribute or QueryValidationSettings.</value>
  </data>
  <data name="OrderByClauseNotSupported" xml:space="preserve">
    <value>Only ordering by properties is supported for non-primitive collections. Expressions are not supported.</value>
  </data>
  <data name="OrderByNodeCountExceeded" xml:space="preserve">
    <value>The number of clauses in $orderby query option exceeded the maximum number allowed. The maximum number of $orderby clauses allowed is {0}.</value>
  </data>
  <data name="OrderByDuplicateProperty" xml:space="preserve">
    <value>Duplicate property named '{0}' is not supported in '$orderby'.</value>
  </data>
  <data name="OrderByDuplicateIt" xml:space="preserve">
    <value>Multiple '$it' nodes are not supported in '$orderby'.</value>
  </data>
  <data name="SelectExpandEmptyOrNull" xml:space="preserve">
    <value>'select' and 'expand' cannot be both null or empty.</value>
  </data>
  <data name="SelectNonStructured" xml:space="preserve">
    <value>The type '{0}' is not a structured type. Only structured types support $select and $expand.</value>
  </data>
  <data name="InvalidExpansionDepthValue" xml:space="preserve">
    <value>'{0}' should be less than or equal to '{1}'.</value>
  </data>
  <data name="MaxExpandDepthExceeded" xml:space="preserve">
    <value>The request includes a $expand path which is too deep. The maximum depth allowed is {0}. To increase the limit, set the '{1}' property on EnableQueryAttribute or ODataValidationSettings, or set the 'MaxDepth' property in ExpandAttribute.</value>
  </data>
  <data name="FunctionNotSupportedOnEnum" xml:space="preserve">
    <value>The '{0}' function cannot be applied to an enumeration-typed argument.</value>
  </data>
  <data name="PropertyMustHavePublicGetterAndSetter" xml:space="preserve">
    <value>The PropertyInfo provided must have public 'get' and 'set' accessor methods.</value>
  </data>
  <data name="ConvertToEnumFailed" xml:space="preserve">
    <value>Cannot compare an enum of type '{0}' to an expression of type '{1}'.</value>
  </data>
  <data name="PropertyOrPathWasRemovedFromContext" xml:space="preserve">
    <value>Property or path {0} is not available in the current context. It was removed in earlier transformation.</value>
  </data>
  <data name="QueryNodeBindingNotSupported" xml:space="preserve">
    <value>Binding OData QueryNode of kind '{0}' is not supported by '{1}'.</value>
  </data>
  <data name="BinaryOperatorNotSupported" xml:space="preserve">
    <value>A binary operator with incompatible types was detected. Found operand types '{0}' and '{1}' for operator kind '{2}'.</value>
  </data>
  <data name="InvalidPropertyMapping" xml:space="preserve">
    <value>The key mapping for the property '{0}' can't be empty.</value>
  </data>
  <data name="ODataFunctionNotSupported" xml:space="preserve">
    <value>Unknown function '{0}'.</value>
  </data>
  <data name="UriFunctionClrBinderAlreadyBound" xml:space="preserve">
    <value>The function '{0}' is already bound to another method.</value>
  </data>
  <data name="InvalidPropertyMapper" xml:space="preserve">
    <value>The mapper provider must return a valid '{0}' instance for the given '{1}' IEdmType.</value>
  </data>
  <data name="NotSupportedTransformationKind" xml:space="preserve">
    <value>Transformation kind {0} is not supported.</value>
  </data>
  <data name="AggregationNotSupportedForType" xml:space="preserve">
    <value>Aggregation '{0}' not supported for property '{1}' of type '{2}'.</value>
  </data>
  <data name="AggregateKindNotSupported" xml:space="preserve">
    <value>{0} type of aggregation is not supported.</value>
  </data>
  <data name="AggregationMethodNotSupported" xml:space="preserve">
    <value>Aggregation method '{0}' is not supported.</value>
  </data>
  <data name="CannotCastFilter" xml:space="preserve">
    <value>Cannot cast $filter of type '{0}' to type '{1}'.</value>
  </data>
  <data name="ExpandFilterExpressionNotLambdaExpression" xml:space="preserve">
    <value>$filter in $expand of reference navigation property '{0}' is not expected type '{1}'</value>
  </data>
  <data name="ReferenceNavigationPropertyExpandFilterVisitorUnexpectedParameter" xml:space="preserve">
    <value>Found unexpected parameter '{0}'.</value>
  </data>
  <data name="TypeMustBeEntity" xml:space="preserve">
    <value>{0} is not an entity type. Only entity types are supported.</value>
  </data>
  <data name="EditLinkNullForLocationHeader" xml:space="preserve">
    <value>The edit link builder for the entity set '{0}' returned null. An edit link is required for the location header.</value>
  </data>
  <data name="IdLinkNullForEntityIdHeader" xml:space="preserve">
    <value>The Id link builder for the entity set '{0}' returned null. An Id link is required for the OData-EntityId header.</value>
  </data>
  <data name="NavigationSourceMissingDuringSerialization" xml:space="preserve">
    <value>The related entity set or singleton cannot be found from the OData path. The related entity set or singleton is required to serialize the payload.</value>
  </data>
  <data name="NonSelectExpandOnSingleEntity" xml:space="preserve">
    <value>The requested resource is not a collection. Query options $filter, $orderby, $count, $skip, and $top can be applied only on collections.</value>
  </data>
  <data name="CustomQueryOptionNotSupportedWithDollarSign" xml:space="preserve">
    <value>Custom query option '{0}' that starts with '$' is not supported.</value>
  </data>
  <data name="SingleResultHasMoreThanOneEntity" xml:space="preserve">
    <value>The action '{0}' on controller '{1}' returned a {2} containing more than one element. {2} must have zero or one elements.</value>
  </data>
  <data name="QueryGetModelMustNotReturnNull" xml:space="preserve">
    <value>A model is required for querying. Consider implementing the EnableQueryAttribute.GetModel method never to return a null value.</value>
  </data>
  <data name="ApplyQueryOptionNotSupportedForLinq2SQL" xml:space="preserve">
    <value>$apply query options not supported for LINQ to SQL providers.</value>
  </data>
  <data name="SkipTokenParseError" xml:space="preserve">
    <value>Unable to parse the skiptoken value '{0}'. Skiptoken value should always be server generated.</value>
  </data>
  <data name="ModelBinderUtil_ValueCannotBeEnum" xml:space="preserve">
    <value>The binding value '{0}' cannot be bound to the enum type '{1}'.</value>
  </data>
  <data name="ParameterTypeIsNotCollection" xml:space="preserve">
    <value>The type '{0}' of the parameter '{1}' must be a collection.</value>
  </data>
  <data name="EntityReferenceMustHasKeySegment" xml:space="preserve">
    <value>The Uri '{0}' in the parameter is invalid.</value>
  </data>
  <data name="ValueIsInvalid" xml:space="preserve">
    <value>The value '{0}' is invalid. {1}</value>
  </data>
  <data name="ActionNotBoundToCollectionOfEntity" xml:space="preserve">
    <value>The action '{0}' is not bound to the collection of entity. Only actions that are bound to entities can have action links.</value>
  </data>
  <data name="FunctionNotBoundToCollectionOfEntity" xml:space="preserve">
    <value>The function '{0}' is not bound to the collection of entity. Only functions that are bound to entities can have function links.</value>
  </data>
  <data name="ActionNotBoundToEntity" xml:space="preserve">
    <value>The action '{0}' is not bound to an entity. Only actions that are bound to entities can have action links.</value>
  </data>
  <data name="FunctionNotBoundToEntity" xml:space="preserve">
    <value>The function '{0}' is not bound to an entity. Only functions that are bound to entities can have function links.</value>
  </data>
  <data name="UnableToDetermineBaseUrl" xml:space="preserve">
    <value>The OData formatter was unable to determine the base URI for the request. The request must be processed by an OData route for the OData formatter to serialize the response.</value>
  </data>
  <data name="MaxAnyAllExpressionLimitExceeded" xml:space="preserve">
    <value>The Any/All nesting limit of '{0}' has been exceeded. '{1}' can be configured on ODataQuerySettings or EnableQueryAttribute.</value>
  </data>
  <data name="UnaryNodeValidationNotSupported" xml:space="preserve">
    <value>Validating OData UnaryOperatorNode of kind {0} is not supported by {1}.</value>
  </data>
  <data name="ErrorTypeMustBeODataErrorOrHttpError" xml:space="preserve">
    <value>The type '{0}' is not supported by the ODataErrorSerializer. The type must be ODataError or HttpError.</value>
  </data>
  <data name="EntitySetMissingDuringSerialization" xml:space="preserve">
    <value>The related entity set could not be found from the OData path. The related entity set is required to serialize the payload.</value>
  </data>
  <data name="InvalidSegmentInSelectExpandPath" xml:space="preserve">
    <value>A segment '{0}' within the select or expand query option is not supported.</value>
  </data>
  <data name="InvalidLastSegmentInSelectExpandPath" xml:space="preserve">
    <value>The last segment '{0}' of the select or expand query option is not supported.</value>
  </data>
  <data name="ShouldHaveNavigationPropertyInNavigationExpandPath" xml:space="preserve">
    <value>A navigation property expand path should have navigation property in the path.</value>
  </data>
  <data name="BatchRequestInvalidMediaType" xml:space="preserve">
    <value>The batch request must have '{0}' or '{1}' as the media type.</value>
  </data>
  <data name="BatchRequestMissingBoundary" xml:space="preserve">
    <value>The batch request must have a boundary specification in the "Content-Type" header.</value>
  </data>
  <data name="BatchRequestMissingContentType" xml:space="preserve">
    <value>The batch request must have a "Content-Type" header.</value>
  </data>
  <data name="InvalidBatchReaderState" xml:space="preserve">
    <value>The current batch reader state '{0}' is invalid. The expected state is '{1}'.</value>
  </data>
  <data name="BatchRequestMissingBody" xml:space="preserve">
    <value>The 'Body' property on the batch request cannot be null.</value>
  </data>
  <data name="NullContainerBuilder" xml:space="preserve">
    <value>The container builder created by the container builder factory must not be null.</value>
  </data>
  <data name="RouteServicesAlreadyExist" xml:space="preserve">
    <value>A dependency injection container for this request already exists.</value>
  </data>
  <data name="ModelPrefixAlreadyUsed" xml:space="preserve">
    <value>The prefix '{0}' was already used for other Edm model.</value>
  </data>
  <data name="OperationIsNotBound" xml:space="preserve">
    <value>The input operation '{0}' is not a bound '{1}'.</value>
  </data>
  <data name="RequiredParametersNotSubsetOfFunctionParameters" xml:space="preserve">
    <value>The input parameters '{0}' is not subset of function parameters '{1}'.</value>
  </data>
  <data name="TargetKindNotImplemented" xml:space="preserve">
    <value>'{0}' of kind '{1}' is not implemented.</value>
  </data>
  <data name="InvalidAttributeRoutingTemplateSegment" xml:space="preserve">
    <value>The attribute routing template contains invalid segment '{0}'. The template string does not start with '{{' or ends with '}}'.</value>
  </data>
  <data name="EmptyPathTemplate" xml:space="preserve">
    <value>The route template in path template '{0}' is empty.</value>
  </data>
  <data name="EmptyParameterAlias" xml:space="preserve">
    <value>Parameter alias '{0}' in segment '{1}' is empty.</value>
  </data>
  <data name="KeyTemplateMustBeInCurlyBraces" xml:space="preserve">
    <value>Key template value '{0}' for key segment '{1}' does not start with '{{' or ends with '}}'.</value>
  </data>
  <data name="EmptyKeyTemplate" xml:space="preserve">
    <value>Key template value '{0}' for key segment '{1}' is empty.</value>
  </data>
  <data name="CannotProcessPrefixTemplate" xml:space="preserve">
    <value>Cannot process the prefix '{0}' template.</value>
  </data>
  <data name="OnlySingleValueNodeSupported" xml:space="preserve">
    <value>Only SingleValueNode supported.</value>
  </data>
  <data name="ArgumentNullOrEmpty" xml:space="preserve">
    <value>The argument '{0}' is null or empty.</value>
  </data>
  <data name="CannotGetEnumClrMember" xml:space="preserve">
    <value>Cannot Get the Enum Clr member using '{0}'.</value>
  </data>
  <data name="InvalidTemplateLiteral" xml:space="preserve">
    <value>The template string '{0}' of '{1}' is not a valid template literal. And a template literal should wrapper with '{' and '}'.</value>
  </data>
  <data name="MissingParameterAlias" xml:space="preserve">
    <value>Missing the parameter alias '{0}' in the request query string.</value>
  </data>
  <data name="InfiniteParameterAlias" xml:space="preserve">
    <value>The parameter alias '{0}' is in an infinite loop.</value>
  </data>
  <data name="MissingRequiredParameterInOperation" xml:space="preserve">
    <value>Missing the required parameter '{0}' is in the operation '{1}' parameter mapping.</value>
  </data>
  <data name="CannotFindParameterInOperation" xml:space="preserve">
    <value>Cannot find parameter '{0}' is in the operation '{1}'.</value>
  </data>
  <data name="ParameterTemplateMustBeInCurlyBraces" xml:space="preserve">
    <value>Parameter template '{0}' in segment '{1}' does not start with '{{' or ends with '}}'.</value>
  </data>
  <data name="SegmentShouldBeKind" xml:space="preserve">
    <value>The input segment should be '{0}' in '{1}'.</value>
  </data>
  <data name="ExpressionLexerUnterminatedStringLiteral" xml:space="preserve">
    <value>There is an unterminated string literal at position {0} in '{1}'.</value>
  </data>
  <data name="ExpressionLexerSyntaxError" xml:space="preserve">
    <value>Syntax error at position {0} in '{1}'.</value>
  </data>
  <data name="ExpressionLexer_UnbalancedBracketExpression" xml:space="preserve">
    <value>Found an unbalanced bracket '{0}' and '{1}' expression.</value>
  </data>
  <data name="MultipleSingleLiteralNotAllowed" xml:space="preserve">
    <value>'{0}' is not a valid expression.Single literal is only for single key. Multiple keys should use key=value.</value>
  </data>
  <data name="RouteOptionDisabledKeySegment" xml:space="preserve">
    <value>The route option disables key in parenthesis and key as segment. At least one option should enable.</value>
  </data>
  <data name="RouteOptionDisabledOperationSegment" xml:space="preserve">
    <value>The route option disables qualified and unqualified operation call. At least one option should enable.</value>
  </data>
  <data name="CannotParseQueryRequestPayload" xml:space="preserve">
    <value>Unable to parse query request payload.</value>
  </data>
  <data name="PropertyCannotBeConverted" xml:space="preserve">
    <value>The value cannot be converted to type {0}.</value>
  </data>
  <data name="PropertyTypeOverflow" xml:space="preserve">
    <value>The value has a value that is out of range of type {0}.</value>
  </data>
  <data name="PropertyUnrecognizedFormat" xml:space="preserve">
    <value>The value has a format that is not recognized by type {0}.</value>
  </data>
  <data name="PropertyNotFoundOnPathExpression" xml:space="preserve">
    <value>Can not resolve the property using property path '{0}' from type '{1}'.</value>
  </data>
  <data name="JsonConverterDoesnotSupportRead" xml:space="preserve">
    <value>'{0}' is internal and should never be deserialized into.</value>
  </data>
  <data name="OperationMustBeUniqueInEntitySetContainer" xml:space="preserve">
    <value>Action import and function import '{0}' MUST be unique within an entity container.</value>
  </data>
  <data name="MultipleActionImportFound" xml:space="preserve">
    <value>Found multiple action imports with same '{0}' name within an entity container..</value>
  </data>
  <data name="SelectExpandEmptyOrWhitespace" xml:space="preserve">
    <value>'select' and 'expand' cannot be empty or whitespace. Omit the parameter from the query if it is not used.</value>
  </data>
  <data name="SkipTokenProcessingError" xml:space="preserve">
    <value>Unable to get property values from the skiptoken value.</value>
  </data>
</root>