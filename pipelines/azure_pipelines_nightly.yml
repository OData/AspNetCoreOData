schedules:
- cron: 0 5 * * 1,2,3,4,5
  branches:
    include:
    - master
resources:
  repositories:
  - repository: self
    type: git
    ref: master

stages: 
- stage: Build
  jobs:
  - job: Main
    displayName: Main Build
    timeoutInMinutes: 120
    pool:
      vmImage: windows-2019
    steps:
    - checkout: self
    - task: NuGetToolInstaller@1
      displayName: Use NuGet >=5.2.0
      inputs:
        versionSpec: '>=5.2.0'
        checkLatest: true
    - task: UseDotNet@2
      displayName: Use .NET Core sdk 3.1
      inputs:
        version: 3.x
    - task: UseDotNet@2
      displayName: Use .NET Core sdk 5.x
      inputs:
        version: 5.x
        includePreviewVersions: true
    - task: DotNetCoreCLI@2
      displayName: Build Microsoft.AspNetCore.OData
      inputs:
        projects: $(Build.SourcesDirectory)\src\Microsoft.AspNetCore.OData\Microsoft.AspNetCore.OData.csproj
        arguments: --configuration $(BuildConfiguration) --no-incremental
    - task: DotNetCoreCLI@2
      displayName: Build Microsoft.AspNetCore.OData.NewtonsoftJson
      inputs:
        projects: $(Build.SourcesDirectory)\src\Microsoft.AspNetCore.OData.NewtonsoftJson\Microsoft.AspNetCore.OData.NewtonsoftJson.csproj
        arguments: --configuration $(BuildConfiguration) --no-incremental
    - task: DotNetCoreCLI@2
      displayName: Build UT(Microsoft.AspNetCore.OData.Tests)
      inputs:
        projects: $(Build.SourcesDirectory)\test\Microsoft.AspNetCore.OData.Tests\Microsoft.AspNetCore.OData.Tests.csproj
        arguments: --configuration $(BuildConfiguration) --no-incremental
    - task: DotNetCoreCLI@2
      displayName: Build UT(Microsoft.AspNetCore.OData.NewtonsoftJson.Tests)
      inputs:
        projects: $(Build.SourcesDirectory)\test\Microsoft.AspNetCore.OData.NewtonsoftJson.Tests\Microsoft.AspNetCore.OData.NewtonsoftJson.Tests.csproj
        arguments: --configuration $(BuildConfiguration) --no-incremental
    - task: DotNetCoreCLI@2
      displayName: Build E2E(Microsoft.AspNetCore.OData.E2E.Tests)
      inputs:
        projects: $(Build.SourcesDirectory)\test\Microsoft.AspNetCore.OData.E2E.Tests\Microsoft.AspNetCore.OData.E2E.Tests.csproj
        arguments: --configuration $(BuildConfiguration) --no-incremental
    - task: DotNetCoreCLI@2
      displayName: Unit Tests (Microsoft.AspNetCore.OData.Tests)
      inputs:
        command: test
        projects: $(Build.SourcesDirectory)\test\Microsoft.AspNetCore.OData.Tests\Microsoft.AspNetCore.OData.Tests.csproj
        arguments: --configuration $(BuildConfiguration) --no-build
    - task: DotNetCoreCLI@2
      displayName: Unit Tests (Microsoft.AspNetCore.OData.NewtonsoftJson.Tests)
      inputs:
        command: test
        projects: $(Build.SourcesDirectory)\test\Microsoft.AspNetCore.OData.NewtonsoftJson.Tests\Microsoft.AspNetCore.OData.NewtonsoftJson.Tests.csproj
        arguments: --configuration $(BuildConfiguration) --no-build
    - task: DotNetCoreCLI@2
      displayName: E2E Tests (Microsoft.AspNetCore.OData.E2E.Tests)
      inputs:
        command: test
        projects: $(Build.SourcesDirectory)\test\Microsoft.AspNetCore.OData.E2E.Tests\Microsoft.AspNetCore.OData.E2E.Tests.csproj
        arguments: --configuration $(BuildConfiguration) --no-build -l "console;verbosity=detailed" --framework netcoreapp3.1
    - task: DotNetCoreCLI@2
      displayName: build Product(Microsoft.AspNetCore.OData.NewtonsoftJson)
      enabled: False
      inputs:
        projects: $(Build.SourcesDirectory)\src\Microsoft.AspNetCore.OData.NewtonsoftJson\Microsoft.AspNetCore.OData.NewtonsoftJson.csproj
        arguments: --configuration $(BuildConfiguration) --no-incremental
    - task: NuGetCommand@2
      displayName: NuGet - pack Microsoft.AspNetCore.OData.NewtonsoftJson
      inputs:
        command: custom
        arguments: pack $(Build.SourcesDirectory)\src\Microsoft.AspNetCore.OData.NewtonsoftJson.$(RELEASE_SEMANTICS).nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory)\Packages -Properties Configuration=$(BuildConfiguration);ProductRoot=$(ProductBinPath);SourcesRoot=$(Build.SourcesDirectory);VersionFullSemantic=$(VersionFullSemantic);NightlyBuildVersion=$(VersionNugetNightlyBuild);VersionNuGetSemantic=$(VersionNuGetSemantic) -Verbosity Detailed -Symbols  -SymbolPackageFormat snupkg
    
    - task: NuGetCommand@2
      displayName: NuGet - pack Microsoft.AspNetCore.OData 
      inputs:
        command: custom
        arguments: pack $(Build.SourcesDirectory)\src\Microsoft.AspNetCore.OData.$(RELEASE_SEMANTICS).nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory)\Packages -Properties Configuration=$(BuildConfiguration);ProductRoot=$(ProductBinPath);SourcesRoot=$(Build.SourcesDirectory);VersionFullSemantic=$(VersionFullSemantic);NightlyBuildVersion=$(VersionNugetNightlyBuild);VersionNuGetSemantic=$(VersionNuGetSemantic);ODataModelBuilderPackageDependency="$(ODataModelBuilderPackageDependency)";ODataLibPackageDependency="$(ODataLibPackageDependency)" -Verbosity Detailed -Symbols  -SymbolPackageFormat snupkg

    - publish: $(Build.ArtifactStagingDirectory)\Packages
      displayName: Publish Build Artifacts  
      artifact: BuildPackages

    - publish: configs
      displayName: Publish Signing Scripts
      artifact: configs

- stage: CodeSign
  condition: and(succeeded('Build'), not(eq(variables['build.reason'], 'PullRequest')))
  jobs:
  - deployment: CodeSign
    displayName: Code Signing
    pool:
      vmImage: windows-latest    
    environment: Code Sign - Approvals
    variables:
    - group: Code Signing
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DotNetCoreCLI@2
            inputs:
              command: custom
              custom: tool
              arguments: install --tool-path . SignClient
            displayName: Install SignTool tool

          - pwsh: |
              .\SignClient "Sign" `
              --baseDirectory "$(Pipeline.Workspace)\BuildPackages" `
              --input "**/*.nupkg" `
              --config "$(Pipeline.Workspace)\configs\SignClient.json" `
              --filelist "$(Pipeline.Workspace)\configs\filelist.txt" `
              --user "$(SignClientUser)" `
              --secret "$(SignClientSecret)" `
              --name "Code Sign packages" `
              --description "Signing packages" `
              --descriptionUrl "https://github.com/OData/AspNetCoreOData"
            displayName: Sign packages
              
          - publish: $(Pipeline.Workspace)/BuildPackages
            displayName: Publish Signed Packages
            artifact: SignedPackages
...
